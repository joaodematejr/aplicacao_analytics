{"ast":null,"code":"import _defineProperty from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/selection-controls/CheckboxesGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    formControl: {\n      margin: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar CheckboxesGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckboxesGroup, _React$Component);\n\n  function CheckboxesGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckboxesGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckboxesGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gilad: true,\n      jason: false,\n      antoine: false\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxesGroup, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          gilad = _this$state.gilad,\n          jason = _this$state.jason,\n          antoine = _this$state.antoine;\n      var error = [gilad, jason, antoine].filter(function (v) {\n        return v;\n      }).length !== 2;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Assign responsibility\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: gilad,\n          onChange: this.handleChange('gilad'),\n          value: \"gilad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }),\n        label: \"Gilad Gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: jason,\n          onChange: this.handleChange('jason'),\n          value: \"jason\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }),\n        label: \"Jason Killian\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: antoine,\n          onChange: this.handleChange('antoine'),\n          value: \"antoine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }),\n        label: \"Antoine Llorca\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(FormHelperText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Be careful\")), React.createElement(FormControl, {\n        required: true,\n        error: error,\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Pick two\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: gilad,\n          onChange: this.handleChange('gilad'),\n          value: \"gilad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }),\n        label: \"Gilad Gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: jason,\n          onChange: this.handleChange('jason'),\n          value: \"jason\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }),\n        label: \"Jason Killian\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: antoine,\n          onChange: this.handleChange('antoine'),\n          value: \"antoine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }),\n        label: \"Antoine Llorca\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(FormHelperText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"You can display an error\")));\n    }\n  }]);\n\n  return CheckboxesGroup;\n}(React.Component);\n\nCheckboxesGroup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CheckboxesGroup);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/selection-controls/CheckboxesGroup.js"],"names":["React","PropTypes","withStyles","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","styles","theme","root","display","formControl","margin","spacing","unit","CheckboxesGroup","state","gilad","jason","antoine","handleChange","name","event","setState","target","checked","classes","props","error","filter","v","length","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing.unit * 3,\n  },\n});\n\nclass CheckboxesGroup extends React.Component {\n  state = {\n    gilad: true,\n    jason: false,\n    antoine: false,\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { gilad, jason, antoine } = this.state;\n    const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n\n    return (\n      <div className={classes.root}>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={gilad} onChange={this.handleChange('gilad')} value=\"gilad\" />\n              }\n              label=\"Gilad Gray\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={jason} onChange={this.handleChange('jason')} value=\"jason\" />\n              }\n              label=\"Jason Killian\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={antoine}\n                  onChange={this.handleChange('antoine')}\n                  value=\"antoine\"\n                />\n              }\n              label=\"Antoine Llorca\"\n            />\n          </FormGroup>\n          <FormHelperText>Be careful</FormHelperText>\n        </FormControl>\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Pick two</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={gilad} onChange={this.handleChange('gilad')} value=\"gilad\" />\n              }\n              label=\"Gilad Gray\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={jason} onChange={this.handleChange('jason')} value=\"jason\" />\n              }\n              label=\"Jason Killian\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={antoine}\n                  onChange={this.handleChange('antoine')}\n                  value=\"antoine\"\n                />\n              }\n              label=\"Antoine Llorca\"\n            />\n          </FormGroup>\n          <FormHelperText>You can display an error</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nCheckboxesGroup.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxesGroup);\n"]},"metadata":{},"sourceType":"module"}