{"ast":null,"code":"import _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Actions from '../actions';\nvar initialState = {\n  entities: [],\n  eventDialog: {\n    type: 'new',\n    props: {\n      open: false\n    },\n    data: null\n  }\n};\n\nvar eventsReducer = function eventsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.GET_EVENTS:\n      {\n        var entities = action.payload.map(function (event) {\n          return _objectSpread({}, event, {\n            start: new Date(event.start),\n            end: new Date(event.end)\n          });\n        });\n        return _objectSpread({}, state, {\n          entities: entities\n        });\n      }\n\n    case Actions.OPEN_NEW_EVENT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          eventDialog: {\n            type: 'new',\n            props: {\n              open: true\n            },\n            data: _objectSpread({}, action.data)\n          }\n        });\n      }\n\n    case Actions.CLOSE_NEW_EVENT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          eventDialog: {\n            type: 'new',\n            props: {\n              open: false\n            },\n            data: null\n          }\n        });\n      }\n\n    case Actions.OPEN_EDIT_EVENT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          eventDialog: {\n            type: 'edit',\n            props: {\n              open: true\n            },\n            data: _objectSpread({}, action.data, {\n              start: new Date(action.data.start),\n              end: new Date(action.data.end)\n            })\n          }\n        });\n      }\n\n    case Actions.CLOSE_EDIT_EVENT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          eventDialog: {\n            type: 'edit',\n            props: {\n              open: false\n            },\n            data: null\n          }\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default eventsReducer;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/calendar/store/reducers/events.reducer.js"],"names":["Actions","initialState","entities","eventDialog","type","props","open","data","eventsReducer","state","action","GET_EVENTS","payload","map","event","start","Date","end","OPEN_NEW_EVENT_DIALOG","CLOSE_NEW_EVENT_DIALOG","OPEN_EDIT_EVENT_DIALOG","CLOSE_EDIT_EVENT_DIALOG"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAK,EADI;AAEjBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,IAAI,EAAG,KADE;AAETC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH,KAFE;AAKTC,IAAAA,IAAI,EAAG;AALE;AAFI,CAArB;;AAWA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAwC;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AAC1D,UAASA,MAAM,CAACN,IAAhB;AAEI,SAAKJ,OAAO,CAACW,UAAb;AACA;AACI,YAAMT,QAAQ,GAAGQ,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmB,UAACC,KAAD;AAAA,mCAEzBA,KAFyB;AAG5BC,YAAAA,KAAK,EAAE,IAAIC,IAAJ,CAASF,KAAK,CAACC,KAAf,CAHqB;AAI5BE,YAAAA,GAAG,EAAI,IAAID,IAAJ,CAASF,KAAK,CAACG,GAAf;AAJqB;AAAA,SAAnB,CAAjB;AAQA,iCACOR,KADP;AAEIP,UAAAA,QAAQ,EAARA;AAFJ;AAIH;;AACD,SAAKF,OAAO,CAACkB,qBAAb;AACA;AACI,iCACOT,KADP;AAEIN,UAAAA,WAAW,EAAE;AACTC,YAAAA,IAAI,EAAG,KADE;AAETC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAE;AADH,aAFE;AAKTC,YAAAA,IAAI,oBACGG,MAAM,CAACH,IADV;AALK;AAFjB;AAYH;;AACD,SAAKP,OAAO,CAACmB,sBAAb;AACA;AACI,iCACOV,KADP;AAEIN,UAAAA,WAAW,EAAE;AACTC,YAAAA,IAAI,EAAG,KADE;AAETC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAE;AADH,aAFE;AAKTC,YAAAA,IAAI,EAAG;AALE;AAFjB;AAUH;;AACD,SAAKP,OAAO,CAACoB,sBAAb;AACA;AACI,iCACOX,KADP;AAEIN,UAAAA,WAAW,EAAE;AACTC,YAAAA,IAAI,EAAG,MADE;AAETC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAE;AADH,aAFE;AAKTC,YAAAA,IAAI,oBACGG,MAAM,CAACH,IADV;AAEAQ,cAAAA,KAAK,EAAE,IAAIC,IAAJ,CAASN,MAAM,CAACH,IAAP,CAAYQ,KAArB,CAFP;AAGAE,cAAAA,GAAG,EAAI,IAAID,IAAJ,CAASN,MAAM,CAACH,IAAP,CAAYU,GAArB;AAHP;AALK;AAFjB;AAcH;;AACD,SAAKjB,OAAO,CAACqB,uBAAb;AACA;AACI,iCACOZ,KADP;AAEIN,UAAAA,WAAW,EAAE;AACTC,YAAAA,IAAI,EAAG,MADE;AAETC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAE;AADH,aAFE;AAKTC,YAAAA,IAAI,EAAG;AALE;AAFjB;AAUH;;AACD;AACA;AACI,eAAOE,KAAP;AACH;AA9EL;AAgFH,CAjFD;;AAmFA,eAAeD,aAAf","sourcesContent":["import * as Actions from '../actions';\n\nconst initialState = {\n    entities   : [],\n    eventDialog: {\n        type : 'new',\n        props: {\n            open: false\n        },\n        data : null\n    }\n};\n\nconst eventsReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_EVENTS:\n        {\n            const entities = action.payload.map((event) => (\n                {\n                    ...event,\n                    start: new Date(event.start),\n                    end  : new Date(event.end)\n                }\n            ));\n\n            return {\n                ...state,\n                entities\n            };\n        }\n        case Actions.OPEN_NEW_EVENT_DIALOG:\n        {\n            return {\n                ...state,\n                eventDialog: {\n                    type : 'new',\n                    props: {\n                        open: true\n                    },\n                    data : {\n                        ...action.data\n                    }\n                }\n            };\n        }\n        case Actions.CLOSE_NEW_EVENT_DIALOG:\n        {\n            return {\n                ...state,\n                eventDialog: {\n                    type : 'new',\n                    props: {\n                        open: false\n                    },\n                    data : null\n                }\n            };\n        }\n        case Actions.OPEN_EDIT_EVENT_DIALOG:\n        {\n            return {\n                ...state,\n                eventDialog: {\n                    type : 'edit',\n                    props: {\n                        open: true\n                    },\n                    data : {\n                        ...action.data,\n                        start: new Date(action.data.start),\n                        end  : new Date(action.data.end)\n                    }\n                }\n            };\n        }\n        case Actions.CLOSE_EDIT_EVENT_DIALOG:\n        {\n            return {\n                ...state,\n                eventDialog: {\n                    type : 'edit',\n                    props: {\n                        open: false\n                    },\n                    data : null\n                }\n            };\n        }\n        default:\n        {\n            return state;\n        }\n    }\n};\n\nexport default eventsReducer;"]},"metadata":{},"sourceType":"module"}