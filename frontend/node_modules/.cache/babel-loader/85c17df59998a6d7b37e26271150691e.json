{"ast":null,"code":"var _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/@fuse/components/FuseNavigation/horizontal/FuseNavHorizontalLink.js\";\nimport React from 'react';\nimport { withStyles, Icon, ListItem, ListItemText } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from 'app/store/actions';\nimport FuseNavBadge from './../FuseNavBadge';\nvar propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    url: PropTypes.string,\n    target: PropTypes.string\n  })\n};\nvar defaultProps = {};\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      minHeight: 48,\n      '&.active': {\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText + '!important',\n        pointerEvents: 'none',\n        '& .list-item-text-primary': {\n          color: 'inherit'\n        },\n        '& .list-item-icon': {\n          color: 'inherit'\n        }\n      },\n      '& .list-item-icon': {},\n      '& .list-item-text': {\n        padding: '0 0 0 16px'\n      },\n      color: 'inherit!important',\n      textDecoration: 'none!important',\n      '&.dense': {\n        padding: '8px 12px 8px 12px',\n        minHeight: 40,\n        '& .list-item-text': {\n          padding: '0 0 0 8px'\n        }\n      }\n    }\n  };\n};\n\nfunction FuseNavHorizontalLink(_ref) {\n  var item = _ref.item,\n      classes = _ref.classes,\n      nestedLevel = _ref.nestedLevel,\n      userRole = _ref.userRole,\n      navbarCloseMobile = _ref.navbarCloseMobile,\n      dense = _ref.dense;\n\n  if (item.auth && (!item.auth.includes(userRole) || userRole !== 'guest' && item.auth.length === 1 && item.auth.includes('guest'))) {\n    return null;\n  }\n\n  return React.createElement(ListItem, {\n    button: true,\n    component: \"a\",\n    href: item.url,\n    target: item.target ? item.target : \"_blank\",\n    className: classNames(\"list-item\", classes.root, dense && \"dense\"),\n    onClick: navbarCloseMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, item.icon && React.createElement(Icon, {\n    className: \"list-item-icon text-16 flex-no-shrink\",\n    color: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, item.icon), React.createElement(ListItemText, {\n    className: \"list-item-text\",\n    primary: item.title,\n    classes: {\n      primary: 'text-14 list-item-text-primary'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), item.badge && React.createElement(FuseNavBadge, {\n    className: \"ml-8\",\n    badge: item.badge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    navbarCloseMobile: Actions.navbarCloseMobile\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref2) {\n  var auth = _ref2.auth;\n  return {};\n}\n\nFuseNavHorizontalLink.propTypes = propTypes;\nFuseNavHorizontalLink.defaultProps = defaultProps;\nvar NavHorizontalLink = withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, mapDispatchToProps)(FuseNavHorizontalLink)));\nexport default NavHorizontalLink;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/@fuse/components/FuseNavigation/horizontal/FuseNavHorizontalLink.js"],"names":["React","withStyles","Icon","ListItem","ListItemText","withRouter","classNames","PropTypes","connect","bindActionCreators","Actions","FuseNavBadge","propTypes","item","shape","id","string","isRequired","title","icon","url","target","defaultProps","styles","theme","root","minHeight","backgroundColor","palette","secondary","main","color","contrastText","pointerEvents","padding","textDecoration","FuseNavHorizontalLink","classes","nestedLevel","userRole","navbarCloseMobile","dense","auth","includes","length","primary","badge","mapDispatchToProps","dispatch","mapStateToProps","NavHorizontalLink","withTheme"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,YAArC,QAAyD,mBAAzD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAEN,SAAS,CAACO,KAAV,CACF;AACIC,IAAAA,EAAE,EAAER,SAAS,CAACS,MAAV,CAAiBC,UADzB;AAEIC,IAAAA,KAAK,EAAEX,SAAS,CAACS,MAFrB;AAGIG,IAAAA,IAAI,EAAEZ,SAAS,CAACS,MAHpB;AAIII,IAAAA,GAAG,EAAEb,SAAS,CAACS,MAJnB;AAKIK,IAAAA,MAAM,EAAEd,SAAS,CAACS;AALtB,GADE;AADQ,CAAlB;AAWA,IAAMM,YAAY,GAAG,EAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE,EADT;AAEF,kBAAY;AACRC,QAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,SAAd,CAAwBC,IADjC;AAERC,QAAAA,KAAK,EAAEP,KAAK,CAACI,OAAN,CAAcC,SAAd,CAAwBG,YAAxB,GAAuC,YAFtC;AAGRC,QAAAA,aAAa,EAAE,MAHP;AAIR,qCAA6B;AACzBF,UAAAA,KAAK,EAAE;AADkB,SAJrB;AAOR,6BAAqB;AACjBA,UAAAA,KAAK,EAAE;AADU;AAPb,OAFV;AAaF,2BAAqB,EAbnB;AAcF,2BAAqB;AACjBG,QAAAA,OAAO,EAAE;AADQ,OAdnB;AAiBFH,MAAAA,KAAK,EAAE,mBAjBL;AAkBFI,MAAAA,cAAc,EAAE,gBAlBd;AAmBF,iBAAW;AACPD,QAAAA,OAAO,EAAE,mBADF;AAEPR,QAAAA,SAAS,EAAE,EAFJ;AAGP,6BAAqB;AACjBQ,UAAAA,OAAO,EAAE;AADQ;AAHd;AAnBT;AADe,GAAL;AAAA,CAApB;;AA8BA,SAASE,qBAAT,OAAmG;AAAA,MAAlEvB,IAAkE,QAAlEA,IAAkE;AAAA,MAA5DwB,OAA4D,QAA5DA,OAA4D;AAAA,MAAnDC,WAAmD,QAAnDA,WAAmD;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,iBAA4B,QAA5BA,iBAA4B;AAAA,MAATC,KAAS,QAATA,KAAS;;AAC/F,MAAI5B,IAAI,CAAC6B,IAAL,KAAc,CAAC7B,IAAI,CAAC6B,IAAL,CAAUC,QAAV,CAAmBJ,QAAnB,CAAD,IAAkCA,QAAQ,KAAK,OAAb,IAAwB1B,IAAI,CAAC6B,IAAL,CAAUE,MAAV,KAAqB,CAA7C,IAAkD/B,IAAI,CAAC6B,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAAlG,CAAJ,EAAqI;AACjI,WAAO,IAAP;AACH;;AAED,SACI,oBAAC,QAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,SAAS,EAAC,GAFd;AAGI,IAAA,IAAI,EAAE9B,IAAI,CAACO,GAHf;AAII,IAAA,MAAM,EAAEP,IAAI,CAACQ,MAAL,GAAcR,IAAI,CAACQ,MAAnB,GAA4B,QAJxC;AAKI,IAAA,SAAS,EAAEf,UAAU,CAAC,WAAD,EAAc+B,OAAO,CAACZ,IAAtB,EAA4BgB,KAAK,IAAI,OAArC,CALzB;AAMI,IAAA,OAAO,EAAED,iBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQK3B,IAAI,CAACM,IAAL,IACG,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uCAAhB;AAAwD,IAAA,KAAK,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwEN,IAAI,CAACM,IAA7E,CATR,EAWI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,gBAAxB;AAAyC,IAAA,OAAO,EAAEN,IAAI,CAACK,KAAvD;AAA8D,IAAA,OAAO,EAAE;AAAE2B,MAAAA,OAAO,EAAE;AAAX,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYKhC,IAAI,CAACiC,KAAL,IACG,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEjC,IAAI,CAACiC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbR,CADJ;AAkBH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAOvC,kBAAkB,CAAC;AACtB+B,IAAAA,iBAAiB,EAAE9B,OAAO,CAAC8B;AADL,GAAD,EAEtBQ,QAFsB,CAAzB;AAGH;;AAED,SAASC,eAAT,QAAmC;AAAA,MAARP,IAAQ,SAARA,IAAQ;AAC/B,SAAO,EAAP;AAGH;;AAEDN,qBAAqB,CAACxB,SAAtB,GAAkCA,SAAlC;AACAwB,qBAAqB,CAACd,YAAtB,GAAqCA,YAArC;AAEA,IAAM4B,iBAAiB,GAAGjD,UAAU,CAACsB,MAAD,EAAS;AAAE4B,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwC9C,UAAU,CAACG,OAAO,CAACyC,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CX,qBAA7C,CAAD,CAAlD,CAA1B;AAEA,eAAec,iBAAf","sourcesContent":["import React from 'react';\nimport { withStyles, Icon, ListItem, ListItemText } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from 'app/store/actions';\nimport FuseNavBadge from './../FuseNavBadge';\n\nconst propTypes = {\n    item: PropTypes.shape(\n        {\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            url: PropTypes.string,\n            target: PropTypes.string\n        })\n};\n\nconst defaultProps = {};\n\nconst styles = theme => ({\n    root: {\n        minHeight: 48,\n        '&.active': {\n            backgroundColor: theme.palette.secondary.main,\n            color: theme.palette.secondary.contrastText + '!important',\n            pointerEvents: 'none',\n            '& .list-item-text-primary': {\n                color: 'inherit'\n            },\n            '& .list-item-icon': {\n                color: 'inherit'\n            }\n        },\n        '& .list-item-icon': {},\n        '& .list-item-text': {\n            padding: '0 0 0 16px'\n        },\n        color: 'inherit!important',\n        textDecoration: 'none!important',\n        '&.dense': {\n            padding: '8px 12px 8px 12px',\n            minHeight: 40,\n            '& .list-item-text': {\n                padding: '0 0 0 8px'\n            }\n        }\n    }\n});\n\nfunction FuseNavHorizontalLink({ item, classes, nestedLevel, userRole, navbarCloseMobile, dense }) {\n    if (item.auth && (!item.auth.includes(userRole) || (userRole !== 'guest' && item.auth.length === 1 && item.auth.includes('guest')))) {\n        return null;\n    }\n\n    return (\n        <ListItem\n            button\n            component=\"a\"\n            href={item.url}\n            target={item.target ? item.target : \"_blank\"}\n            className={classNames(\"list-item\", classes.root, dense && \"dense\")}\n            onClick={navbarCloseMobile}\n        >\n            {item.icon && (\n                <Icon className=\"list-item-icon text-16 flex-no-shrink\" color=\"action\">{item.icon}</Icon>\n            )}\n            <ListItemText className=\"list-item-text\" primary={item.title} classes={{ primary: 'text-14 list-item-text-primary' }} />\n            {item.badge && (\n                <FuseNavBadge className=\"ml-8\" badge={item.badge} />\n            )}\n        </ListItem>\n    );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        navbarCloseMobile: Actions.navbarCloseMobile\n    }, dispatch);\n}\n\nfunction mapStateToProps({ auth }) {\n    return {\n\n    }\n}\n\nFuseNavHorizontalLink.propTypes = propTypes;\nFuseNavHorizontalLink.defaultProps = defaultProps;\n\nconst NavHorizontalLink = withStyles(styles, { withTheme: true })(withRouter(connect(mapStateToProps, mapDispatchToProps)(FuseNavHorizontalLink)));\n\nexport default NavHorizontalLink;\n"]},"metadata":{},"sourceType":"module"}