{"ast":null,"code":"import _slicedToArray from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/@fuse/components/FuseSettings/FuseSettings.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Typography, FormControl, FormControlLabel, FormLabel, MenuItem, Radio, RadioGroup, Select, Switch } from '@material-ui/core';\nimport * as Actions from 'app/store/actions';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { FuseLayoutConfigs } from '@fuse';\nimport classNames from 'classnames';\nimport _ from '@lodash';\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    formControl: {\n      margin: '6px 0',\n      width: '100%',\n      '&:last-child': {\n        marginBottom: 0\n      }\n    },\n    group: {},\n    formGroupTitle: {\n      position: 'absolute',\n      top: -10,\n      left: 8,\n      fontWeight: 600,\n      padding: '0 4px',\n      backgroundColor: theme.palette.background.paper\n    },\n    formGroup: {\n      position: 'relative',\n      border: '1px solid ' + theme.palette.divider,\n      borderRadius: 2,\n      padding: '12px 12px 0 12px',\n      margin: '24px 0 16px 0',\n      '&:first-of-type': {\n        marginTop: 16\n      }\n    }\n  };\n};\n\nvar FuseSettings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FuseSettings, _Component);\n\n  function FuseSettings() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FuseSettings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FuseSettings)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (event) {\n      var newSettings = _.set(_.merge({}, _this.props.settings), event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value);\n      /**\n       * If layout style changes,\n       * Reset Layout Configuration\n       */\n\n\n      if (event.target.name === 'layout.style' && event.target.value !== _this.props.settings.layout.style) {\n        newSettings.layout.config = {};\n      }\n\n      if (_this.props.user.role === 'guest') {\n        _this.props.setDefaultSettings(newSettings);\n      } else {\n        _this.props.updateUserSettings(newSettings);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FuseSettings, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          settings = _this$props.settings,\n          themes = _this$props.themes;\n\n      function ThemeSelect(_ref) {\n        var value = _ref.value,\n            name = _ref.name,\n            handleChange = _ref.handleChange;\n        return React.createElement(Select, {\n          className: \"w-full\",\n          value: value,\n          onChange: handleChange,\n          name: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, Object.entries(themes).map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n              key = _ref3[0],\n              val = _ref3[1];\n\n          return React.createElement(MenuItem, {\n            key: key,\n            value: key,\n            className: \"m-8 mt-0 rounded-lg\",\n            style: {\n              backgroundColor: val.palette.background.default,\n              color: val.palette.text.primary,\n              border: '1px solid ' + val.palette.divider\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, _.startCase(key), React.createElement(\"div\", {\n            className: \"flex w-full h-8 block absolute pin-b pin-l pin-r\",\n            style: {\n              borderTop: '1px solid ' + val.palette.divider\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"w-1/4 h-8\",\n            style: {\n              backgroundColor: val.palette.primary.main\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"w-1/4 h-8\",\n            style: {\n              backgroundColor: val.palette.secondary.main\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"w-1/4 h-8\",\n            style: {\n              backgroundColor: val.palette.error.main\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"w-1/4 h-8\",\n            style: {\n              backgroundColor: val.palette.background.paper\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          })));\n        }));\n      }\n\n      var LayoutSelect = function LayoutSelect() {\n        return React.createElement(FormControl, {\n          component: \"fieldset\",\n          className: classes.formControl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(FormLabel, {\n          component: \"legend\",\n          className: \"text-14\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Style\"), React.createElement(RadioGroup, {\n          \"aria-label\": \"Layout Style\",\n          name: \"layout.style\",\n          className: classes.group,\n          value: settings.layout.style,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, Object.entries(FuseLayoutConfigs).map(function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n              key = _ref5[0],\n              layout = _ref5[1];\n\n          return React.createElement(FormControlLabel, {\n            key: key,\n            value: key,\n            control: React.createElement(Radio, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }),\n            label: layout.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n        })));\n      };\n\n      var getForm = function getForm(form, prefix) {\n        return Object.entries(form).map(function (_ref6) {\n          var _ref7 = _slicedToArray(_ref6, 2),\n              key = _ref7[0],\n              formControl = _ref7[1];\n\n          var target = prefix ? prefix + '.' + key : key;\n\n          switch (formControl.type) {\n            case 'radio':\n              {\n                return React.createElement(FormControl, {\n                  key: target,\n                  component: \"fieldset\",\n                  className: classes.formControl,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 130\n                  },\n                  __self: this\n                }, React.createElement(FormLabel, {\n                  component: \"legend\",\n                  className: \"text-14\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 131\n                  },\n                  __self: this\n                }, formControl.title), React.createElement(RadioGroup, {\n                  \"aria-label\": formControl.title,\n                  name: \"layout.config.\".concat(target),\n                  className: classes.group,\n                  value: _.get(settings.layout.config, target),\n                  onChange: _this2.handleChange,\n                  row: formControl.options.length < 4,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 132\n                  },\n                  __self: this\n                }, formControl.options.map(function (opt) {\n                  return React.createElement(FormControlLabel, {\n                    key: opt.value,\n                    value: opt.value,\n                    control: React.createElement(Radio, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 141\n                      },\n                      __self: this\n                    }),\n                    label: opt.name,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 141\n                    },\n                    __self: this\n                  });\n                })));\n              }\n\n            case 'switch':\n              {\n                return React.createElement(FormControl, {\n                  key: target,\n                  component: \"fieldset\",\n                  className: classes.formControl,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 150\n                  },\n                  __self: this\n                }, React.createElement(FormControlLabel, {\n                  classes: {// root: \"flex-row-reverse justify-end pl-16\"\n                  },\n                  control: React.createElement(Switch, {\n                    name: \"layout.config.\".concat(target),\n                    checked: _.get(settings.layout.config, target),\n                    onChange: _this2.handleChange,\n                    \"aria-label\": formControl.title,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 156\n                    },\n                    __self: this\n                  }),\n                  label: React.createElement(FormLabel, {\n                    component: \"legend\",\n                    className: \"text-14\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 163\n                    },\n                    __self: this\n                  }, formControl.title),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 151\n                  },\n                  __self: this\n                }));\n              }\n\n            case 'group':\n              {\n                return React.createElement(\"div\", {\n                  key: target,\n                  className: classes.formGroup,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 171\n                  },\n                  __self: this\n                }, React.createElement(Typography, {\n                  className: classes.formGroupTitle,\n                  color: \"textSecondary\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 173\n                  },\n                  __self: this\n                }, formControl.title), getForm(formControl.children, key));\n              }\n\n            default:\n              {\n                return '';\n              }\n          }\n        });\n      };\n\n      var LayoutConfig = function LayoutConfig() {\n        var form = FuseLayoutConfigs[settings.layout.style].form;\n        return getForm(form);\n      };\n\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.formGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.formGroupTitle,\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Layout\"), React.createElement(LayoutSelect, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(LayoutConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        className: \"my-16 text-12 italic\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"*Not all option combinations are available\")), React.createElement(\"div\", {\n        className: classNames(classes.formGroup, \"pb-16\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.formGroupTitle,\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Theme\"), React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        className: \"text-14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Main\"), React.createElement(ThemeSelect, {\n        value: settings.theme.main,\n        name: \"theme.main\",\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        className: \"text-14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Navbar\"), React.createElement(ThemeSelect, {\n        value: settings.theme.navbar,\n        name: \"theme.navbar\",\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        className: \"text-14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Toolbar\"), React.createElement(ThemeSelect, {\n        value: settings.theme.toolbar,\n        name: \"theme.toolbar\",\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        className: \"text-14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Footer\"), React.createElement(ThemeSelect, {\n        value: settings.theme.footer,\n        name: \"theme.footer\",\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }))), React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        className: \"text-14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Custom Scrollbars\"), React.createElement(Switch, {\n        checked: settings.customScrollbars,\n        onChange: this.handleChange,\n        \"aria-label\": \"Custom Scrollbars\",\n        name: \"customScrollbars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FuseSettings;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setDefaultSettings: Actions.setDefaultSettings\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref8) {\n  var fuse = _ref8.fuse,\n      auth = _ref8.auth;\n  return {\n    settings: fuse.settings.current,\n    themes: fuse.settings.themes,\n    user: auth.user\n  };\n}\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(FuseSettings));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/@fuse/components/FuseSettings/FuseSettings.js"],"names":["React","Component","withStyles","Typography","FormControl","FormControlLabel","FormLabel","MenuItem","Radio","RadioGroup","Select","Switch","Actions","bindActionCreators","connect","FuseLayoutConfigs","classNames","_","styles","theme","root","formControl","margin","width","marginBottom","group","formGroupTitle","position","top","left","fontWeight","padding","backgroundColor","palette","background","paper","formGroup","border","divider","borderRadius","marginTop","FuseSettings","handleChange","event","newSettings","set","merge","props","settings","target","name","type","checked","value","layout","style","config","user","role","setDefaultSettings","updateUserSettings","classes","themes","ThemeSelect","Object","entries","map","key","val","default","color","text","primary","startCase","borderTop","main","secondary","error","LayoutSelect","title","getForm","form","prefix","get","options","length","opt","children","LayoutConfig","navbar","toolbar","footer","customScrollbars","mapDispatchToProps","dispatch","mapStateToProps","fuse","auth","current"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgEC,SAAhE,EAA2EC,QAA3E,EAAqFC,KAArF,EAA4FC,UAA5F,EAAwGC,MAAxG,EAAgHC,MAAhH,QAA8H,mBAA9H;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE,EADe;AAErBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,MAAM,EAAE,OADC;AAETC,MAAAA,KAAK,EAAE,MAFE;AAGT,sBAAgB;AACZC,QAAAA,YAAY,EAAE;AADF;AAHP,KAFQ;AASrBC,IAAAA,KAAK,EAAE,EATc;AAUrBC,IAAAA,cAAc,EAAE;AACZC,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,GAAG,EAAE,CAAC,EAFM;AAGZC,MAAAA,IAAI,EAAE,CAHM;AAIZC,MAAAA,UAAU,EAAE,GAJA;AAKZC,MAAAA,OAAO,EAAE,OALG;AAMZC,MAAAA,eAAe,EAAEb,KAAK,CAACc,OAAN,CAAcC,UAAd,CAAyBC;AAN9B,KAVK;AAkBrBC,IAAAA,SAAS,EAAE;AACPT,MAAAA,QAAQ,EAAE,UADH;AAEPU,MAAAA,MAAM,EAAE,eAAelB,KAAK,CAACc,OAAN,CAAcK,OAF9B;AAGPC,MAAAA,YAAY,EAAE,CAHP;AAIPR,MAAAA,OAAO,EAAE,kBAJF;AAKPT,MAAAA,MAAM,EAAE,eALD;AAMP,yBAAmB;AACfkB,QAAAA,SAAS,EAAE;AADI;AANZ;AAlBU,GAAL;AAAA,CAApB;;IA8BMC,Y;;;;;;;;;;;;;;;;;;UAEFC,Y,GAAe,UAACC,KAAD,EAAW;AAEtB,UAAMC,WAAW,GAAG3B,CAAC,CAAC4B,GAAF,CAAM5B,CAAC,CAAC6B,KAAF,CAAQ,EAAR,EAAY,MAAKC,KAAL,CAAWC,QAAvB,CAAN,EAAwCL,KAAK,CAACM,MAAN,CAAaC,IAArD,EAA2DP,KAAK,CAACM,MAAN,CAAaE,IAAb,KAAsB,UAAtB,GAAmCR,KAAK,CAACM,MAAN,CAAaG,OAAhD,GAA0DT,KAAK,CAACM,MAAN,CAAaI,KAAlI,CAApB;AAEA;;;;;;AAIA,UAAIV,KAAK,CAACM,MAAN,CAAaC,IAAb,KAAsB,cAAtB,IAAwCP,KAAK,CAACM,MAAN,CAAaI,KAAb,KAAuB,MAAKN,KAAL,CAAWC,QAAX,CAAoBM,MAApB,CAA2BC,KAA9F,EAAqG;AACjGX,QAAAA,WAAW,CAACU,MAAZ,CAAmBE,MAAnB,GAA4B,EAA5B;AACH;;AAED,UAAI,MAAKT,KAAL,CAAWU,IAAX,CAAgBC,IAAhB,KAAyB,OAA7B,EAAsC;AAClC,cAAKX,KAAL,CAAWY,kBAAX,CAA8Bf,WAA9B;AACH,OAFD,MAGK;AACD,cAAKG,KAAL,CAAWa,kBAAX,CAA8BhB,WAA9B;AACH;AACJ,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACiC,KAAKG,KADtC;AAAA,UACGc,OADH,eACGA,OADH;AAAA,UACYb,QADZ,eACYA,QADZ;AAAA,UACsBc,MADtB,eACsBA,MADtB;;AAGL,eAASC,WAAT,OAAoD;AAAA,YAA7BV,KAA6B,QAA7BA,KAA6B;AAAA,YAAtBH,IAAsB,QAAtBA,IAAsB;AAAA,YAAhBR,YAAgB,QAAhBA,YAAgB;AAChD,eACI,oBAAC,MAAD;AACI,UAAA,SAAS,EAAC,QADd;AAEI,UAAA,KAAK,EAAEW,KAFX;AAGI,UAAA,QAAQ,EAAEX,YAHd;AAII,UAAA,IAAI,EAAEQ,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMKc,MAAM,CAACC,OAAP,CAAeH,MAAf,EAAuBI,GAAvB,CAA2B;AAAA;AAAA,cAAEC,GAAF;AAAA,cAAOC,GAAP;;AAAA,iBACxB,oBAAC,QAAD;AACI,YAAA,GAAG,EAAED,GADT;AACc,YAAA,KAAK,EAAEA,GADrB;AAEI,YAAA,SAAS,EAAC,qBAFd;AAGI,YAAA,KAAK,EAAE;AACHnC,cAAAA,eAAe,EAAEoC,GAAG,CAACnC,OAAJ,CAAYC,UAAZ,CAAuBmC,OADrC;AAEHC,cAAAA,KAAK,EAAEF,GAAG,CAACnC,OAAJ,CAAYsC,IAAZ,CAAiBC,OAFrB;AAGHnC,cAAAA,MAAM,EAAE,eAAe+B,GAAG,CAACnC,OAAJ,CAAYK;AAHhC,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASKrB,CAAC,CAACwD,SAAF,CAAYN,GAAZ,CATL,EAUI;AACI,YAAA,SAAS,EAAC,kDADd;AAEI,YAAA,KAAK,EAAE;AACHO,cAAAA,SAAS,EAAE,eAAeN,GAAG,CAACnC,OAAJ,CAAYK;AADnC,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,KAAK,EAAE;AAAEN,cAAAA,eAAe,EAAEoC,GAAG,CAACnC,OAAJ,CAAYuC,OAAZ,CAAoBG;AAAvC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,KAAK,EAAE;AAAE3C,cAAAA,eAAe,EAAEoC,GAAG,CAACnC,OAAJ,CAAY2C,SAAZ,CAAsBD;AAAzC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAQI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,KAAK,EAAE;AAAE3C,cAAAA,eAAe,EAAEoC,GAAG,CAACnC,OAAJ,CAAY4C,KAAZ,CAAkBF;AAArC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EASI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,KAAK,EAAE;AAAE3C,cAAAA,eAAe,EAAEoC,GAAG,CAACnC,OAAJ,CAAYC,UAAZ,CAAuBC;AAA1C,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,CAVJ,CADwB;AAAA,SAA3B,CANL,CADJ;AAiCH;;AAED,UAAM2C,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,eACI,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAkC,UAAA,SAAS,EAAEjB,OAAO,CAACxC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,QAArB;AAA8B,UAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAII,oBAAC,UAAD;AACI,wBAAW,cADf;AAEI,UAAA,IAAI,EAAC,cAFT;AAGI,UAAA,SAAS,EAAEwC,OAAO,CAACpC,KAHvB;AAII,UAAA,KAAK,EAAEuB,QAAQ,CAACM,MAAT,CAAgBC,KAJ3B;AAKI,UAAA,QAAQ,EAAE,MAAI,CAACb,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOKsB,MAAM,CAACC,OAAP,CAAelD,iBAAf,EAAkCmD,GAAlC,CAAsC;AAAA;AAAA,cAAEC,GAAF;AAAA,cAAOb,MAAP;;AAAA,iBACnC,oBAAC,gBAAD;AAAkB,YAAA,GAAG,EAAEa,GAAvB;AAA4B,YAAA,KAAK,EAAEA,GAAnC;AAAwC,YAAA,OAAO,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjD;AAA4D,YAAA,KAAK,EAAEb,MAAM,CAACyB,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADmC;AAAA,SAAtC,CAPL,CAJJ,CADJ;AAmBH,OApBD;;AAsBA,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAC9B,eAAOlB,MAAM,CAACC,OAAP,CAAegB,IAAf,EAAqBf,GAArB,CAAyB,iBAAwB;AAAA;AAAA,cAAtBC,GAAsB;AAAA,cAAjB9C,WAAiB;;AACpD,cAAM4B,MAAM,GAAGiC,MAAM,GAAGA,MAAM,GAAG,GAAT,GAAef,GAAlB,GAAwBA,GAA7C;;AACA,kBAAQ9C,WAAW,CAAC8B,IAApB;AACI,iBAAK,OAAL;AACI;AACI,uBACI,oBAAC,WAAD;AAAa,kBAAA,GAAG,EAAEF,MAAlB;AAA0B,kBAAA,SAAS,EAAC,UAApC;AAA+C,kBAAA,SAAS,EAAEY,OAAO,CAACxC,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,QAArB;AAA8B,kBAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAmDA,WAAW,CAAC0D,KAA/D,CADJ,EAEI,oBAAC,UAAD;AACI,gCAAY1D,WAAW,CAAC0D,KAD5B;AAEI,kBAAA,IAAI,0BAAmB9B,MAAnB,CAFR;AAGI,kBAAA,SAAS,EAAEY,OAAO,CAACpC,KAHvB;AAII,kBAAA,KAAK,EAAER,CAAC,CAACkE,GAAF,CAAMnC,QAAQ,CAACM,MAAT,CAAgBE,MAAtB,EAA8BP,MAA9B,CAJX;AAKI,kBAAA,QAAQ,EAAE,MAAI,CAACP,YALnB;AAMI,kBAAA,GAAG,EAAErB,WAAW,CAAC+D,OAAZ,CAAoBC,MAApB,GAA6B,CANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQKhE,WAAW,CAAC+D,OAAZ,CAAoBlB,GAApB,CAAwB,UAACoB,GAAD;AAAA,yBACrB,oBAAC,gBAAD;AAAkB,oBAAA,GAAG,EAAEA,GAAG,CAACjC,KAA3B;AAAkC,oBAAA,KAAK,EAAEiC,GAAG,CAACjC,KAA7C;AAAoD,oBAAA,OAAO,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA7D;AAAwE,oBAAA,KAAK,EAAEiC,GAAG,CAACpC,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADqB;AAAA,iBAAxB,CARL,CAFJ,CADJ;AAiBH;;AACL,iBAAK,QAAL;AACI;AACI,uBACI,oBAAC,WAAD;AAAa,kBAAA,GAAG,EAAED,MAAlB;AAA0B,kBAAA,SAAS,EAAC,UAApC;AAA+C,kBAAA,SAAS,EAAEY,OAAO,CAACxC,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,gBAAD;AACI,kBAAA,OAAO,EAAE,CACL;AADK,mBADb;AAII,kBAAA,OAAO,EACH,oBAAC,MAAD;AACI,oBAAA,IAAI,0BAAmB4B,MAAnB,CADR;AAEI,oBAAA,OAAO,EAAEhC,CAAC,CAACkE,GAAF,CAAMnC,QAAQ,CAACM,MAAT,CAAgBE,MAAtB,EAA8BP,MAA9B,CAFb;AAGI,oBAAA,QAAQ,EAAE,MAAI,CAACP,YAHnB;AAII,kCAAYrB,WAAW,CAAC0D,KAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALR;AAYI,kBAAA,KAAK,EAAE,oBAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,QAArB;AAA8B,oBAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmD1D,WAAW,CAAC0D,KAA/D,CAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAkBH;;AACL,iBAAK,OAAL;AACI;AACI,uBACI;AAAK,kBAAA,GAAG,EAAE9B,MAAV;AAAkB,kBAAA,SAAS,EAAEY,OAAO,CAACzB,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEI,oBAAC,UAAD;AAAY,kBAAA,SAAS,EAAEyB,OAAO,CAACnC,cAA/B;AAA+C,kBAAA,KAAK,EAAC,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKL,WAAW,CAAC0D,KADjB,CAFJ,EAOQC,OAAO,CAAC3D,WAAW,CAACkE,QAAb,EAAuBpB,GAAvB,CAPf,CADJ;AAYH;;AACL;AACI;AACI,uBAAO,EAAP;AACH;AA5DT;AA8DH,SAhEM,CAAP;AAiEH,OAlED;;AAoEA,UAAMqB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,YAAMP,IAAI,GAAGlE,iBAAiB,CAACiC,QAAQ,CAACM,MAAT,CAAgBC,KAAjB,CAAjB,CAAyC0B,IAAtD;AACA,eAAOD,OAAO,CAACC,IAAD,CAAd;AACH,OAHD;;AAKA,aACI;AAAK,QAAA,SAAS,EAAEpB,OAAO,CAACzC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAEyC,OAAO,CAACzB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEyB,OAAO,CAACnC,cAA/B;AAA+C,QAAA,KAAK,EAAC,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAMI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAQI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAUI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAA6C,QAAA,KAAK,EAAC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAVJ,CAFJ,EAkBI;AAAK,QAAA,SAAS,EAAEV,UAAU,CAAC6C,OAAO,CAACzB,SAAT,EAAoB,OAApB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEyB,OAAO,CAACnC,cAA/B;AAA+C,QAAA,KAAK,EAAC,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAMI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAkC,QAAA,SAAS,EAAEmC,OAAO,CAACxC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE2B,QAAQ,CAAC7B,KAAT,CAAewD,IAAnC;AAAyC,QAAA,IAAI,EAAC,YAA9C;AAA2D,QAAA,YAAY,EAAE,KAAKjC,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,EAUI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAkC,QAAA,SAAS,EAAEmB,OAAO,CAACxC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE2B,QAAQ,CAAC7B,KAAT,CAAesE,MAAnC;AAA2C,QAAA,IAAI,EAAC,cAAhD;AAA+D,QAAA,YAAY,EAAE,KAAK/C,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAVJ,EAcI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAkC,QAAA,SAAS,EAAEmB,OAAO,CAACxC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE2B,QAAQ,CAAC7B,KAAT,CAAeuE,OAAnC;AAA4C,QAAA,IAAI,EAAC,eAAjD;AAAiE,QAAA,YAAY,EAAE,KAAKhD,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAdJ,EAkBI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAkC,QAAA,SAAS,EAAEmB,OAAO,CAACxC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE2B,QAAQ,CAAC7B,KAAT,CAAewE,MAAnC;AAA2C,QAAA,IAAI,EAAC,cAAhD;AAA+D,QAAA,YAAY,EAAE,KAAKjD,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAlBJ,CAlBJ,EA0CI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAkC,QAAA,SAAS,EAAEmB,OAAO,CAACxC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAA8B,QAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE2B,QAAQ,CAAC4C,gBADtB;AAEI,QAAA,QAAQ,EAAE,KAAKlD,YAFnB;AAGI,sBAAW,mBAHf;AAII,QAAA,IAAI,EAAC,kBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA1CJ,CADJ;AAsDH;;;;EAlNsBzC,S;;AAqN3B,SAAS4F,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAOjF,kBAAkB,CAAC;AACtB8C,IAAAA,kBAAkB,EAAE/C,OAAO,CAAC+C;AADN,GAAD,EAEtBmC,QAFsB,CAAzB;AAGH;;AAED,SAASC,eAAT,QAAyC;AAAA,MAAdC,IAAc,SAAdA,IAAc;AAAA,MAARC,IAAQ,SAARA,IAAQ;AACrC,SAAO;AACHjD,IAAAA,QAAQ,EAAEgD,IAAI,CAAChD,QAAL,CAAckD,OADrB;AAEHpC,IAAAA,MAAM,EAAEkC,IAAI,CAAChD,QAAL,CAAcc,MAFnB;AAGHL,IAAAA,IAAI,EAAEwC,IAAI,CAACxC;AAHR,GAAP;AAKH;;AAED,eAAevD,UAAU,CAACgB,MAAD,CAAV,CAAmBJ,OAAO,CAACiF,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CpD,YAA7C,CAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles, Typography, FormControl, FormControlLabel, FormLabel, MenuItem, Radio, RadioGroup, Select, Switch } from '@material-ui/core';\nimport * as Actions from 'app/store/actions';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { FuseLayoutConfigs } from '@fuse';\nimport classNames from 'classnames';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    root: {},\n    formControl: {\n        margin: '6px 0',\n        width: '100%',\n        '&:last-child': {\n            marginBottom: 0\n        }\n    },\n    group: {},\n    formGroupTitle: {\n        position: 'absolute',\n        top: -10,\n        left: 8,\n        fontWeight: 600,\n        padding: '0 4px',\n        backgroundColor: theme.palette.background.paper\n    },\n    formGroup: {\n        position: 'relative',\n        border: '1px solid ' + theme.palette.divider,\n        borderRadius: 2,\n        padding: '12px 12px 0 12px',\n        margin: '24px 0 16px 0',\n        '&:first-of-type': {\n            marginTop: 16\n        }\n    }\n});\n\nclass FuseSettings extends Component {\n\n    handleChange = (event) => {\n\n        const newSettings = _.set(_.merge({}, this.props.settings), event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value);\n\n        /**\n         * If layout style changes,\n         * Reset Layout Configuration\n         */\n        if (event.target.name === 'layout.style' && event.target.value !== this.props.settings.layout.style) {\n            newSettings.layout.config = {};\n        }\n\n        if (this.props.user.role === 'guest') {\n            this.props.setDefaultSettings(newSettings);\n        }\n        else {\n            this.props.updateUserSettings(newSettings);\n        }\n    };\n\n    render() {\n        const { classes, settings, themes } = this.props;\n\n        function ThemeSelect({ value, name, handleChange }) {\n            return (\n                <Select\n                    className=\"w-full\"\n                    value={value}\n                    onChange={handleChange}\n                    name={name}\n                >\n                    {Object.entries(themes).map(([key, val]) => (\n                        <MenuItem\n                            key={key} value={key}\n                            className=\"m-8 mt-0 rounded-lg\"\n                            style={{\n                                backgroundColor: val.palette.background.default,\n                                color: val.palette.text.primary,\n                                border: '1px solid ' + val.palette.divider\n                            }}\n                        >\n                            {_.startCase(key)}\n                            <div\n                                className=\"flex w-full h-8 block absolute pin-b pin-l pin-r\"\n                                style={{\n                                    borderTop: '1px solid ' + val.palette.divider\n                                }}\n                            >\n                                <div className=\"w-1/4 h-8\" style={{ backgroundColor: val.palette.primary.main }} />\n                                <div className=\"w-1/4 h-8\" style={{ backgroundColor: val.palette.secondary.main }} />\n                                <div className=\"w-1/4 h-8\" style={{ backgroundColor: val.palette.error.main }} />\n                                <div className=\"w-1/4 h-8\" style={{ backgroundColor: val.palette.background.paper }} />\n                            </div>\n                        </MenuItem>\n                    ))}\n                </Select>\n            );\n        }\n\n        const LayoutSelect = () => {\n            return (\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n\n                    <FormLabel component=\"legend\" className=\"text-14\">Style</FormLabel>\n\n                    <RadioGroup\n                        aria-label=\"Layout Style\"\n                        name=\"layout.style\"\n                        className={classes.group}\n                        value={settings.layout.style}\n                        onChange={this.handleChange}\n                    >\n                        {Object.entries(FuseLayoutConfigs).map(([key, layout]) => (\n                            <FormControlLabel key={key} value={key} control={<Radio />} label={layout.title} />\n                        )\n                        )}\n                    </RadioGroup>\n                </FormControl>\n            );\n        };\n\n        const getForm = (form, prefix) => {\n            return Object.entries(form).map(([key, formControl]) => {\n                const target = prefix ? prefix + '.' + key : key;\n                switch (formControl.type) {\n                    case 'radio':\n                        {\n                            return (\n                                <FormControl key={target} component=\"fieldset\" className={classes.formControl}>\n                                    <FormLabel component=\"legend\" className=\"text-14\">{formControl.title}</FormLabel>\n                                    <RadioGroup\n                                        aria-label={formControl.title}\n                                        name={`layout.config.${target}`}\n                                        className={classes.group}\n                                        value={_.get(settings.layout.config, target)}\n                                        onChange={this.handleChange}\n                                        row={formControl.options.length < 4}\n                                    >\n                                        {formControl.options.map((opt) => (\n                                            <FormControlLabel key={opt.value} value={opt.value} control={<Radio />} label={opt.name} />\n                                        ))}\n                                    </RadioGroup>\n                                </FormControl>\n                            );\n                        }\n                    case 'switch':\n                        {\n                            return (\n                                <FormControl key={target} component=\"fieldset\" className={classes.formControl}>\n                                    <FormControlLabel\n                                        classes={{\n                                            // root: \"flex-row-reverse justify-end pl-16\"\n                                        }}\n                                        control={\n                                            <Switch\n                                                name={`layout.config.${target}`}\n                                                checked={_.get(settings.layout.config, target)}\n                                                onChange={this.handleChange}\n                                                aria-label={formControl.title}\n                                            />\n                                        }\n                                        label={<FormLabel component=\"legend\" className=\"text-14\">{formControl.title}</FormLabel>}\n                                    />\n                                </FormControl>\n                            )\n                        }\n                    case 'group':\n                        {\n                            return (\n                                <div key={target} className={classes.formGroup}>\n\n                                    <Typography className={classes.formGroupTitle} color=\"textSecondary\">\n                                        {formControl.title}\n                                    </Typography>\n\n                                    {\n                                        getForm(formControl.children, key)\n                                    }\n                                </div>\n                            );\n                        }\n                    default:\n                        {\n                            return ''\n                        }\n                }\n            });\n        };\n\n        const LayoutConfig = () => {\n            const form = FuseLayoutConfigs[settings.layout.style].form;\n            return getForm(form);\n        };\n\n        return (\n            <div className={classes.root}>\n\n                <div className={classes.formGroup}>\n\n                    <Typography className={classes.formGroupTitle} color=\"textSecondary\">\n                        Layout\n                    </Typography>\n\n                    <LayoutSelect />\n\n                    <LayoutConfig />\n\n                    <Typography className=\"my-16 text-12 italic\" color=\"textSecondary\">\n                        *Not all option combinations are available\n                    </Typography>\n\n                </div>\n\n                <div className={classNames(classes.formGroup, \"pb-16\")}>\n\n                    <Typography className={classes.formGroupTitle} color=\"textSecondary\">\n                        Theme\n                    </Typography>\n\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\" className=\"text-14\">Main</FormLabel>\n                        <ThemeSelect value={settings.theme.main} name=\"theme.main\" handleChange={this.handleChange} />\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\" className=\"text-14\">Navbar</FormLabel>\n                        <ThemeSelect value={settings.theme.navbar} name=\"theme.navbar\" handleChange={this.handleChange} />\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\" className=\"text-14\">Toolbar</FormLabel>\n                        <ThemeSelect value={settings.theme.toolbar} name=\"theme.toolbar\" handleChange={this.handleChange} />\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\" className=\"text-14\">Footer</FormLabel>\n                        <ThemeSelect value={settings.theme.footer} name=\"theme.footer\" handleChange={this.handleChange} />\n                    </FormControl>\n                </div>\n\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\" className=\"text-14\">Custom Scrollbars</FormLabel>\n                    <Switch\n                        checked={settings.customScrollbars}\n                        onChange={this.handleChange}\n                        aria-label=\"Custom Scrollbars\"\n                        name=\"customScrollbars\"\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        setDefaultSettings: Actions.setDefaultSettings,\n    }, dispatch);\n}\n\nfunction mapStateToProps({ fuse, auth }) {\n    return {\n        settings: fuse.settings.current,\n        themes: fuse.settings.themes,\n        user: auth.user\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(FuseSettings));\n"]},"metadata":{},"sourceType":"module"}