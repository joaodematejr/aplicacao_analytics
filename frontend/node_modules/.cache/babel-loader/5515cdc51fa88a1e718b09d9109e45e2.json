{"ast":null,"code":"import _defineProperty from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/selection-controls/CheckboxLabels.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nvar styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500]\n    }\n  },\n  checked: {}\n};\n\nvar CheckboxLabels =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckboxLabels, _React$Component);\n\n  function CheckboxLabels() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckboxLabels);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckboxLabels)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checkedA: true,\n      checkedB: true,\n      checkedF: true,\n      checkedG: true\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxLabels, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.checkedA,\n          onChange: this.handleChange('checkedA'),\n          value: \"checkedA\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }),\n        label: \"Secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.checkedB,\n          onChange: this.handleChange('checkedB'),\n          value: \"checkedB\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }),\n        label: \"Primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          value: \"checkedC\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }),\n        label: \"Uncontrolled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Checkbox, {\n          value: \"checkedD\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }),\n        label: \"Disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Checkbox, {\n          checked: true,\n          value: \"checkedE\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }),\n        label: \"Disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.checkedF,\n          onChange: this.handleChange('checkedF'),\n          value: \"checkedF\",\n          indeterminate: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }),\n        label: \"Indeterminate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: this.state.checkedG,\n          onChange: this.handleChange('checkedG'),\n          value: \"checkedG\",\n          classes: {\n            root: classes.root,\n            checked: classes.checked\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }),\n        label: \"Custom color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          icon: React.createElement(FavoriteBorder, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }),\n          checkedIcon: React.createElement(Favorite, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }),\n          value: \"checkedH\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }),\n        label: \"Custom icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          icon: React.createElement(CheckBoxOutlineBlankIcon, {\n            fontSize: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }),\n          checkedIcon: React.createElement(CheckBoxIcon, {\n            fontSize: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }),\n          value: \"checkedI\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }),\n        label: \"Custom size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CheckboxLabels;\n}(React.Component);\n\nCheckboxLabels.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CheckboxLabels);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/selection-controls/CheckboxLabels.js"],"names":["React","PropTypes","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","styles","root","color","checked","CheckboxLabels","state","checkedA","checkedB","checkedF","checkedG","handleChange","name","event","setState","target","classes","props","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500],\n    },\n  },\n  checked: {},\n};\n\nclass CheckboxLabels extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedA}\n              onChange={this.handleChange('checkedA')}\n              value=\"checkedA\"\n            />\n          }\n          label=\"Secondary\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedB}\n              onChange={this.handleChange('checkedB')}\n              value=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Primary\"\n        />\n        <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Uncontrolled\" />\n        <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\n        <FormControlLabel\n          disabled\n          control={<Checkbox checked value=\"checkedE\" />}\n          label=\"Disabled\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedF}\n              onChange={this.handleChange('checkedF')}\n              value=\"checkedF\"\n              indeterminate\n            />\n          }\n          label=\"Indeterminate\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedG}\n              onChange={this.handleChange('checkedG')}\n              value=\"checkedG\"\n              classes={{\n                root: classes.root,\n                checked: classes.checked,\n              }}\n            />\n          }\n          label=\"Custom color\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value=\"checkedH\" />\n          }\n          label=\"Custom icon\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n              checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n              value=\"checkedI\"\n            />\n          }\n          label=\"Custom size\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCheckboxLabels.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxLabels);\n"]},"metadata":{},"sourceType":"module"}