{"ast":null,"code":"import _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/apps/dashboards/analytics/widgets/Widget7.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Select, Button, Card, Divider, FormControl, Icon, MenuItem, Typography } from '@material-ui/core';\nimport { Doughnut } from 'react-chartjs-2';\nimport _ from '@lodash';\n\nvar Widget7 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Widget7, _Component);\n\n  function Widget7() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Widget7);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Widget7)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dataset: 'Today'\n    };\n\n    _this.setDataSet = function (ev) {\n      _this.setState({\n        dataset: ev.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Widget7, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dataRaw = _this$props.data,\n          theme = _this$props.theme;\n      var dataset = this.state.dataset;\n\n      var data = _.merge({}, dataRaw);\n\n      var dataWithColors = data.datasets[dataset].map(function (obj) {\n        return _objectSpread({}, obj, {\n          borderColor: theme.palette.divider,\n          backgroundColor: [theme.palette.primary.dark, theme.palette.primary.main, theme.palette.primary.light],\n          hoverBackgroundColor: [theme.palette.secondary.dark, theme.palette.secondary.main, theme.palette.secondary.light]\n        });\n      });\n      return React.createElement(Card, {\n        className: \"w-full rounded-8 shadow-none border-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"h1 font-300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Sessions by device\")), React.createElement(\"div\", {\n        className: \"h-224 relative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: {\n          labels: data.labels,\n          datasets: dataWithColors\n        },\n        options: data.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"p-16 flex flex-row items-center justify-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, data.labels.map(function (label, index) {\n        return React.createElement(\"div\", {\n          key: label,\n          className: \"px-16 flex flex-col items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"h4\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, label), React.createElement(Typography, {\n          className: \"h2 font-300 py-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, data.datasets[dataset][0].data[index], \"%\"), React.createElement(\"div\", {\n          className: \"flex flex-row items-center justify-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, data.datasets[dataset][0].change[index] < 0 && React.createElement(Icon, {\n          className: \"text-18 pr-4 text-red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"arrow_downward\"), data.datasets[dataset][0].change[index] > 0 && React.createElement(Icon, {\n          className: \"text-18 pr-4 text-green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"arrow_upward\"), React.createElement(\"div\", {\n          className: \"h5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, data.datasets[dataset][0].change[index], \"%\")));\n      })), React.createElement(Divider, {\n        className: \"mx-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"p-16 flex flex-row items-center justify-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: dataset,\n        onChange: this.setDataSet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, Object.keys(data.datasets).map(function (key) {\n        return React.createElement(MenuItem, {\n          key: key,\n          value: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, key);\n      })))), React.createElement(Button, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"OVERVIEW\")));\n    }\n  }]);\n\n  return Widget7;\n}(Component);\n\nexport default withStyles(null, {\n  withTheme: true\n})(Widget7);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/apps/dashboards/analytics/widgets/Widget7.js"],"names":["React","Component","withStyles","Select","Button","Card","Divider","FormControl","Icon","MenuItem","Typography","Doughnut","_","Widget7","state","dataset","setDataSet","ev","setState","target","value","props","dataRaw","data","theme","merge","dataWithColors","datasets","map","obj","borderColor","palette","divider","backgroundColor","primary","dark","main","light","hoverBackgroundColor","secondary","labels","options","label","index","change","Object","keys","key","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles, Select, Button, Card, Divider, FormControl, Icon, MenuItem, Typography} from '@material-ui/core';\nimport {Doughnut} from 'react-chartjs-2';\nimport _ from '@lodash';\n\nclass Widget7 extends Component {\n\n    state = {\n        dataset: 'Today'\n    };\n\n    setDataSet = (ev) => {\n        this.setState({dataset: ev.target.value});\n    };\n\n    render()\n    {\n        const {data: dataRaw, theme} = this.props;\n        const {dataset} = this.state;\n        const data = _.merge({}, dataRaw);\n        const dataWithColors = data.datasets[dataset].map(obj => ({\n            ...obj,\n            borderColor         : theme.palette.divider,\n            backgroundColor     : [\n                theme.palette.primary.dark,\n                theme.palette.primary.main,\n                theme.palette.primary.light\n            ],\n            hoverBackgroundColor: [\n                theme.palette.secondary.dark,\n                theme.palette.secondary.main,\n                theme.palette.secondary.light\n            ]\n        }));\n        return (\n            <Card className=\"w-full rounded-8 shadow-none border-1\">\n\n                <div className=\"p-16\">\n                    <Typography className=\"h1 font-300\">Sessions by device</Typography>\n                </div>\n\n                <div className=\"h-224 relative\">\n                    <Doughnut\n                        data={{\n                            labels  : data.labels,\n                            datasets: dataWithColors\n                        }}\n                        options={data.options}/>\n                </div>\n\n                <div className=\"p-16 flex flex-row items-center justify-center\">\n\n                    {data.labels.map((label, index) => (\n                        <div key={label} className=\"px-16 flex flex-col items-center\">\n\n                            <Typography className=\"h4\" color=\"textSecondary\">{label}</Typography>\n                            <Typography className=\"h2 font-300 py-8\">{data.datasets[dataset][0].data[index]}%</Typography>\n\n                            <div className=\"flex flex-row items-center justify-center\">\n\n                                {data.datasets[dataset][0].change[index] < 0 && (\n                                    <Icon className=\"text-18 pr-4 text-red\">\n                                        arrow_downward\n                                    </Icon>\n                                )}\n\n                                {data.datasets[dataset][0].change[index] > 0 && (\n                                    <Icon className=\"text-18 pr-4 text-green\">\n                                        arrow_upward\n                                    </Icon>\n                                )}\n                                <div className=\"h5\">\n                                    {data.datasets[dataset][0].change[index]}%\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n\n                <Divider className=\"mx-16\"/>\n\n                <div className=\"p-16 flex flex-row items-center justify-between\">\n                    <div>\n                        <FormControl className=\"\">\n                            <Select value={dataset} onChange={this.setDataSet}>\n                                {Object.keys(data.datasets).map(key => (\n                                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <Button size=\"small\">OVERVIEW</Button>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(null, {withTheme: true})(Widget7);\n"]},"metadata":{},"sourceType":"module"}