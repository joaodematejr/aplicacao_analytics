{"ast":null,"code":"var _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/pages/Dialogs.js\";\nimport React from 'react';\nimport { FuseExample, FuseHighlight, FusePageSimple } from '@fuse';\nimport { Button, Icon, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles/index';\n/* eslint import/no-webpack-loader-syntax: off */\n\n/* eslint no-unused-vars: off */\n\nvar styles = function styles(theme) {\n  return {\n    layoutRoot: {\n      '& .description': {\n        marginBottom: 16\n      }\n    }\n  };\n};\n\nfunction Dialogs(_ref) {\n  var classes = _ref.classes;\n  return React.createElement(FusePageSimple, {\n    classes: {\n      root: classes.layoutRoot\n    },\n    header: React.createElement(\"div\", {\n      className: \"flex flex-1 items-center justify-between p-24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex flex-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex items-center mb-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"text-18\",\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"home\"), React.createElement(Icon, {\n      className: \"text-16\",\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"chevron_right\"), React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Components\"), React.createElement(Icon, {\n      className: \"text-16\",\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"chevron_right\"), React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Material UI Elements\")), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Dialogs\")), React.createElement(Button, {\n      className: \"normal-case\",\n      variant: \"contained\",\n      component: \"a\",\n      href: \"https://material-ui-next.com/demos/dialogs\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"link\"), \"Reference\")),\n    content: React.createElement(\"div\", {\n      className: \"p-24 max-w-2xl mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"text-44 mt-32 mb-8\",\n      component: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Dialogs\"), React.createElement(Typography, {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"A \", React.createElement(\"a\", {\n      href: \"https://material.io/design/components/dialogs.html\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Dialog\"), \" is a type of \", React.createElement(\"a\", {\n      href: \"/utils/modal/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"modal\"), \" window that appears in front of app content to provide critical information or ask for a decision. Dialogs disable all app functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Dialogs are purposefully interruptive, so they should be used sparingly.\"), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Simple Dialogs\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Simple dialogs can provide additional details or actions about a list item. For example, they can display avatars, icons, clarifying subtext, or orthogonal actions (such as adding an account).\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Touch mechanics:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Choosing an option immediately commits the option and closes the menu\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Touching outside of the dialog, or pressing Back, cancels the action and closes the dialog\")), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Alerts\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Most alerts don't need titles. They summarize a decision in a sentence or two by either:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Asking a question (e.g. \\\"Delete this conversation?\\\")\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Making a statement related to the action buttons\")), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Use title bar alerts only for high-risk situations, such as the potential loss of connectivity. Users should be able to understand the choices based on the title and button text alone.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"If a title is required:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Use a clear question or statement with an explanation in the content area, such as \\\"Erase USB storage?\\\".\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Avoid apologies, ambiguity, or questions, such as \\u201CWarning!\\u201D or \\u201CAre you sure?\\u201D\")), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/AlertDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/AlertDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"You can also swap out the transition, the next example uses \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Slide\"), \".\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Form dialogs\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Form dialogs allow users to fill out form fields within a dialog. For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and touch 'Submit'\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/FormDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/FormDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Customized dialog\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"If you have been reading the \", React.createElement(\"a\", {\n      href: \"/customization/overrides/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"overrides documentation page\"), \"but you are not confident jumping in, here is one example of how you can customize the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"DialogTitle\"), \" to support a close button.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"unicode-symbol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"\\u26A0\"), \" While the material design specification encourages theming, this example is off the beaten path.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/CustomizedDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/CustomizedDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Full-screen dialogs\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Optional sizes\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"You can set a dialog maximum width by using the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"maxWidth\"), \" enumerable in combination with the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"fullWidth\"), \" boolean. When the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"fullWidth\"), \" property is true, the dialog will adapt based on the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"maxWidth\"), \" value.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Responsive full-screen\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"You may make a dialog responsively full screen the dialog using \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"withMobileDialog\"), \". By default, \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"withMobileDialog()(Dialog)\"), \" responsively full screens \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"at or below\"), \" the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"sm\"), \" \", React.createElement(\"a\", {\n      href: \"/layout/basics/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"screen size\"), \". You can choose your own breakpoint for example \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"xs\"), \" by passing the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"breakpoint\"), \" argument: \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"withMobileDialog(\", \"{breakpoint: 'xs'}\", \")(Dialog)\"), \".\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Confirmation dialogs\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Confirmation dialogs require users to explicitly confirm their choice before an option is committed. For example, users can listen to multiple ringtones but only make a final selection upon touching \\u201COK.\\u201D\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Touching \\u201CCancel\\u201D in a confirmation dialog, or pressing Back, cancels the action, discards any changes, and closes the dialog.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Accessibility\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Be sure to add \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"aria-labelledby=\\\"id...\\\"\"), \", referencing the modal title, to the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Dialog\"), \". Additionally, you may give a description of your modal dialog with the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"aria-describedby=\\\"id...\\\"\"), \" property on the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Dialog\"), \".\"), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Scrolling long content\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"When dialogs become too long for the user\\u2019s viewport or device, they scroll.\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"scroll=paper\"), \" the content of the dialog scrolls within the paper element.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"scroll=body\"), \" the content of the dialog scrolls within the body element.\")), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Try the demo below to see what we mean:\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Draggable dialog\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"You can create a draggable dialog by using \", React.createElement(\"a\", {\n      href: \"https://github.com/mzabriskie/react-draggable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"react-draggable\"), \". To do so, you can pass the the imported \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Draggable\"), \" component as the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"PaperComponent\"), \" of the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Dialog\"), \" component. This will make the entire dialog draggable.\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(FuseExample, {\n      className: \"my-24\",\n      iframe: false,\n      component: require('app/main/components/material-ui/material-ui-examples/dialogs/DraggableDialog.js').default,\n      raw: require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/DraggableDialog.js'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: \"text-32 mt-32 mb-8\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Performance\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Follow the \", React.createElement(\"a\", {\n      href: \"/utils/modal/#performance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Modal performance section\"), \".\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Dialogs);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/pages/Dialogs.js"],"names":["React","FuseExample","FuseHighlight","FusePageSimple","Button","Icon","Typography","withStyles","styles","theme","layoutRoot","marginBottom","Dialogs","classes","root","require","default","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {FuseExample, FuseHighlight, FusePageSimple} from '@fuse';\nimport {Button, Icon, Typography} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles/index';\n/* eslint import/no-webpack-loader-syntax: off */\n/* eslint no-unused-vars: off */\nconst styles = theme => ({\n    layoutRoot: {\n        '& .description': {\n            marginBottom: 16\n        }\n    }\n});\n\nfunction Dialogs({classes})\n{\n    return (\n\n        <FusePageSimple\n            classes={{\n                root: classes.layoutRoot\n            }}\n            header={\n                <div className=\"flex flex-1 items-center justify-between p-24\">\n                    <div className=\"flex flex-col\">\n                        <div className=\"flex items-center mb-16\">\n                            <Icon className=\"text-18\" color=\"action\">home</Icon>\n                            <Icon className=\"text-16\" color=\"action\">chevron_right</Icon>\n                            <Typography color=\"textSecondary\">Components</Typography>\n                            <Icon className=\"text-16\" color=\"action\">chevron_right</Icon>\n                            <Typography color=\"textSecondary\">Material UI Elements</Typography>\n                        </div>\n                        <Typography variant=\"h6\">Dialogs</Typography>\n                    </div>\n                    <Button\n                        className=\"normal-case\"\n                        variant=\"contained\"\n                        component=\"a\"\n                        href=\"https://material-ui-next.com/demos/dialogs\"\n                        target=\"_blank\"\n                    >\n                        <Icon className=\"mr-4\">link</Icon>\n                        Reference\n                    </Button>\n                </div>\n            }\n            content={\n                <div className=\"p-24 max-w-2xl mx-auto\">\n                    <Typography className=\"text-44 mt-32 mb-8\" component=\"h1\">Dialogs</Typography>\n                    <Typography className=\"description\">Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple\n                        tasks.</Typography>\n\n                    <Typography className=\"mb-16\" component=\"div\">A <a href=\"https://material.io/design/components/dialogs.html\">Dialog</a> is a type of <a\n                        href=\"/utils/modal/\">modal</a> window that appears in front of app content to provide critical information or ask for a decision. Dialogs disable all app\n                        functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Dialogs are purposefully interruptive, so they should be used sparingly.</Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Simple Dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Simple dialogs can provide additional details or actions about a list item.\n                        For example, they can display avatars, icons, clarifying subtext, or orthogonal actions (such as adding an account).</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Touch mechanics:</Typography>\n                    <ul>\n                        <li>Choosing an option immediately commits the option and closes the menu</li>\n                        <li>Touching outside of the dialog, or pressing Back, cancels the action and closes the dialog</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Alerts</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Most alerts don&#39;t need titles.\n                        They summarize a decision in a sentence or two by either:</Typography>\n                    <ul>\n                        <li>Asking a question (e.g. &quot;Delete this conversation?&quot;)</li>\n                        <li>Making a statement related to the action buttons</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\">Use title bar alerts only for high-risk situations, such as the potential loss of connectivity.\n                        Users should be able to understand the choices based on the title and button text alone.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">If a title is required:</Typography>\n                    <ul>\n                        <li>Use a clear question or statement with an explanation in the content area, such as &quot;Erase USB storage?&quot;.</li>\n                        <li>Avoid apologies, ambiguity, or questions, such as “Warning!” or “Are you sure?”</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/AlertDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/AlertDialog.js')}\n                    /></Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You can also swap out the transition, the next example uses <code>Slide</code>.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Form dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Form dialogs allow users to fill out form fields within a dialog.\n                        For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and\n                        touch &#39;Submit&#39;</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/FormDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/FormDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Customized dialog</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">If you have been reading the <a href=\"/customization/overrides/\">overrides documentation page</a>\n                        but you are not confident jumping in,\n                        here is one example of how you can customize the <code>DialogTitle</code> to support a close button.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><span role=\"img\" aria-label=\"unicode-symbol\">⚠</span> While the material design specification encourages theming,\n                        this example is off the beaten path.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/CustomizedDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/CustomizedDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Full-screen dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Optional sizes</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You can set a dialog maximum width by using the <code>maxWidth</code> enumerable in combination with\n                        the <code>fullWidth</code> boolean.\n                        When the <code>fullWidth</code> property is true, the dialog will adapt based on the <code>maxWidth</code> value.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Responsive full-screen</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You may make a dialog responsively full screen the dialog using <code>withMobileDialog</code>. By\n                        default, <code>withMobileDialog()(Dialog)</code> responsively full screens <em>at or below</em> the <code>sm</code> <a href=\"/layout/basics/\">screen\n                            size</a>. You can choose your own breakpoint for example <code>xs</code> by passing\n                        the <code>breakpoint</code> argument: <code>withMobileDialog({\"{breakpoint: 'xs'}\"})(Dialog)</code>.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Confirmation dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Confirmation dialogs require users to explicitly confirm their choice before an option is committed.\n                        For example, users can listen to multiple ringtones but only make a final selection upon touching “OK.”</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Touching “Cancel” in a confirmation dialog, or pressing Back, cancels the action, discards any changes, and closes\n                        the dialog.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Accessibility</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Be sure to add <code>aria-labelledby=&quot;id...&quot;</code>, referencing the modal title, to\n                        the <code>Dialog</code>. Additionally, you may give a description of your modal dialog with the <code>aria-describedby=&quot;id...&quot;</code> property on\n                        the <code>Dialog</code>.</Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Scrolling long content</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">When dialogs become too long for the user’s viewport or device, they scroll.</Typography>\n                    <ul>\n                        <li><code>scroll=paper</code> the content of the dialog scrolls within the paper element.</li>\n                        <li><code>scroll=body</code> the content of the dialog scrolls within the body element.</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\">Try the demo below to see what we mean:</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Draggable dialog</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You can create a draggable dialog by using <a\n                        href=\"https://github.com/mzabriskie/react-draggable\">react-draggable</a>.\n                        To do so, you can pass the the imported <code>Draggable</code> component as the <code>PaperComponent</code> of the <code>Dialog</code> component.\n                        This will make the entire dialog draggable.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('app/main/components/material-ui/material-ui-examples/dialogs/DraggableDialog.js').default}\n                        raw={require('!raw-loader!app/main/components/material-ui/material-ui-examples/dialogs/DraggableDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Performance</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Follow the <a href=\"/utils/modal/#performance\">Modal performance section</a>.</Typography>\n\n                </div>\n            }\n        />\n\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(Dialogs);\n"]},"metadata":{},"sourceType":"module"}