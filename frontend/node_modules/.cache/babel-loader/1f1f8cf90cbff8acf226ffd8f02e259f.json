{"ast":null,"code":"import _slicedToArray from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/dialogs/labels/LabelsDialog.js\";\nimport React, { Component } from 'react';\nimport { Typography, Dialog, ListItem, Input, IconButton, Icon, List } from '@material-ui/core';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport * as Actions from 'app/main/apps/notes/store/actions';\nimport LabelModel from 'app/main/apps/notes/model/LabelModel';\n\nvar LabelsDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LabelsDialog, _Component);\n\n  function LabelsDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LabelsDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LabelsDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      labels: _this.props.labels,\n      newLabelText: \"\"\n    };\n    _this.handleOnChange = _.debounce(function (labels) {\n      _this.props.updateLabels(labels);\n    }, 600);\n\n    _this.handleOnDelete = function (label) {\n      _this.setState({\n        labels: _.omit(_this.state.labels, [label.id])\n      });\n    };\n\n    _this.handleLabelChange = function (event, label) {\n      var updatedLabel = new LabelModel(_.setIn(label, event.target.name, event.target.value));\n\n      _this.setState({\n        labels: _.setIn(_this.state.labels, updatedLabel.id, updatedLabel)\n      });\n    };\n\n    _this.handleNewLabelChange = function (event) {\n      _this.setState({\n        newLabelText: event.target.value\n      });\n    };\n\n    _this.handleNewLabel = function () {\n      var newLabel = new LabelModel({\n        name: _this.state.newLabelText\n      });\n\n      _this.setState({\n        labels: _.setIn(_this.state.labels, newLabel.id, newLabel)\n      });\n\n      _this.setState({\n        newLabelText: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LabelsDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (!_.isEqual(prevProps.labels, this.props.labels) && !_.isEqual(this.state.labels, this.props.labels)) {\n        this.setState({\n          labels: this.props.labels\n        });\n      }\n\n      if (prevState.labels && this.state.labels && !_.isEqual(prevState.labels, this.state.labels) && !_.isEqual(this.state.labels, this.props.labels)) {\n        this.handleOnChange(this.state.labels);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          closeLabelsDialog = _this$props.closeLabelsDialog,\n          labelsDialogOpen = _this$props.labelsDialogOpen;\n      var _this$state = this.state,\n          labels = _this$state.labels,\n          newLabelText = _this$state.newLabelText;\n      return React.createElement(Dialog, {\n        classes: {\n          paper: \"w-full max-w-320 p-16 m-24 rounded-8\"\n        },\n        onClose: closeLabelsDialog,\n        open: labelsDialogOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"text-16 mb-8 font-600\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Edit Labels\"), React.createElement(List, {\n        dense: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        className: \"p-0 mb-16\",\n        dense: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"list-item-icon text-16\",\n        color: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"add\"), React.createElement(Input, {\n        className: classNames(\"flex flex-1 mx-8\"),\n        name: \"name\",\n        value: newLabelText,\n        onChange: this.handleNewLabelChange,\n        placeholder: \"Create new label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        className: \"w-32 h-32 mx-4 p-0\",\n        \"aria-label\": \"Delete\",\n        onClick: this.handleNewLabel,\n        disabled: newLabelText === \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"check\"))), Object.entries(labels).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            label = _ref2[1];\n\n        return React.createElement(ListItem, {\n          className: \"p-0\",\n          key: label.id,\n          dense: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          className: \"list-item-icon text-16\",\n          color: \"action\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"label\"), React.createElement(Input, {\n          className: classNames(\"flex flex-1 mx-8\"),\n          name: \"name\",\n          value: label.name,\n          onChange: function onChange(event) {\n            return _this2.handleLabelChange(event, label);\n          },\n          disableUnderline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          className: \"w-32 h-32 mx-4 p-0\",\n          \"aria-label\": \"Delete\",\n          onClick: function onClick(ev) {\n            return _this2.handleOnDelete(label);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"delete\")));\n      })));\n    }\n  }]);\n\n  return LabelsDialog;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    closeLabelsDialog: Actions.closeLabelsDialog,\n    updateLabels: Actions.updateLabels\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref3) {\n  var notesApp = _ref3.notesApp;\n  return {\n    labels: notesApp.labels.entities,\n    labelsDialogOpen: notesApp.labels.labelsDialogOpen\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabelsDialog);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/dialogs/labels/LabelsDialog.js"],"names":["React","Component","Typography","Dialog","ListItem","Input","IconButton","Icon","List","bindActionCreators","connect","classNames","_","Actions","LabelModel","LabelsDialog","state","labels","props","newLabelText","handleOnChange","debounce","updateLabels","handleOnDelete","label","setState","omit","id","handleLabelChange","event","updatedLabel","setIn","target","name","value","handleNewLabelChange","handleNewLabel","newLabel","prevProps","prevState","snapshot","isEqual","closeLabelsDialog","labelsDialogOpen","paper","Object","entries","map","key","ev","mapDispatchToProps","dispatch","mapStateToProps","notesApp","entities"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Typography, Dialog, ListItem, Input, IconButton, Icon, List} from '@material-ui/core';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport * as Actions from 'app/main/apps/notes/store/actions';\nimport LabelModel from 'app/main/apps/notes/model/LabelModel';\n\nclass LabelsDialog extends Component {\n\n    state = {\n        labels      : this.props.labels,\n        newLabelText: \"\"\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if ( !_.isEqual(prevProps.labels, this.props.labels) &&\n            !_.isEqual(this.state.labels, this.props.labels) )\n        {\n            this.setState({labels: this.props.labels});\n        }\n\n        if ( prevState.labels &&\n            this.state.labels &&\n            !_.isEqual(prevState.labels, this.state.labels) &&\n            !_.isEqual(this.state.labels, this.props.labels)\n        )\n        {\n            this.handleOnChange(this.state.labels);\n        }\n    }\n\n    handleOnChange = _.debounce((labels) => {\n        this.props.updateLabels(labels);\n    }, 600);\n\n    handleOnDelete = ((label) => {\n        this.setState({labels: _.omit(this.state.labels, [label.id])});\n    });\n\n    handleLabelChange = (event, label) => {\n        const updatedLabel = new LabelModel(_.setIn(label, event.target.name, event.target.value));\n        this.setState({labels: _.setIn(this.state.labels, updatedLabel.id, updatedLabel)});\n    };\n\n    handleNewLabelChange = (event) => {\n        this.setState({newLabelText: event.target.value});\n    };\n\n    handleNewLabel = () => {\n        const newLabel = new LabelModel({name: this.state.newLabelText});\n        this.setState({labels: _.setIn(this.state.labels, newLabel.id, newLabel)});\n        this.setState({newLabelText: \"\"});\n    };\n\n    render()\n    {\n        const {closeLabelsDialog, labelsDialogOpen} = this.props;\n        const {labels, newLabelText} = this.state;\n        return (\n            <Dialog\n                classes={{\n                    paper: \"w-full max-w-320 p-16 m-24 rounded-8\"\n                }}\n                onClose={closeLabelsDialog}\n                open={labelsDialogOpen}\n            >\n                <Typography className=\"text-16 mb-8 font-600\">Edit Labels</Typography>\n                <List dense>\n                    <ListItem\n                        className=\"p-0 mb-16\"\n                        dense\n                    >\n                        <Icon className=\"list-item-icon text-16\" color=\"action\">add</Icon>\n                        <Input\n                            className={classNames(\"flex flex-1 mx-8\")}\n                            name=\"name\"\n                            value={newLabelText}\n                            onChange={this.handleNewLabelChange}\n                            placeholder=\"Create new label\"\n                        />\n                        <IconButton className=\"w-32 h-32 mx-4 p-0\" aria-label=\"Delete\" onClick={this.handleNewLabel} disabled={newLabelText === \"\"}>\n                            <Icon fontSize=\"small\">check</Icon>\n                        </IconButton>\n                    </ListItem>\n                    {Object.entries(labels).map(([key, label]) => (\n                        <ListItem\n                            className=\"p-0\"\n                            key={label.id}\n                            dense\n                        >\n                            <Icon className=\"list-item-icon text-16\" color=\"action\">label</Icon>\n                            <Input\n                                className={classNames(\"flex flex-1 mx-8\")}\n                                name=\"name\"\n                                value={label.name}\n                                onChange={(event) => this.handleLabelChange(event, label)}\n                                disableUnderline\n                            />\n                            <IconButton className=\"w-32 h-32 mx-4 p-0\" aria-label=\"Delete\" onClick={(ev) => this.handleOnDelete(label)}>\n                                <Icon fontSize=\"small\">delete</Icon>\n                            </IconButton>\n                        </ListItem>\n                    ))}\n                </List>\n            </Dialog>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeLabelsDialog: Actions.closeLabelsDialog,\n        updateLabels     : Actions.updateLabels\n    }, dispatch);\n}\n\nfunction mapStateToProps({notesApp})\n{\n    return {\n        labels          : notesApp.labels.entities,\n        labelsDialogOpen: notesApp.labels.labelsDialogOpen\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabelsDialog);\n"]},"metadata":{},"sourceType":"module"}