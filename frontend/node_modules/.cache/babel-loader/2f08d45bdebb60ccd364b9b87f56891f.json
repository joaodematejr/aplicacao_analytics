{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/contacts/ContactsApp.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Fab, Icon } from '@material-ui/core';\nimport { FusePageSimple, FuseAnimate } from '@fuse';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport withReducer from 'app/store/withReducer';\nimport _ from '@lodash';\nimport ContactsList from './ContactsList';\nimport ContactsHeader from './ContactsHeader';\nimport ContactsSidebarContent from './ContactsSidebarContent';\nimport ContactDialog from './ContactDialog';\nimport * as Actions from './store/actions';\nimport reducer from './store/reducers';\n\nvar styles = function styles(theme) {\n  return {\n    addButton: {\n      position: 'absolute',\n      right: 12,\n      bottom: 12,\n      zIndex: 99\n    }\n  };\n};\n\nvar ContactsApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactsApp, _Component);\n\n  function ContactsApp() {\n    _classCallCheck(this, ContactsApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactsApp).apply(this, arguments));\n  }\n\n  _createClass(ContactsApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getContacts(this.props.match.params);\n      this.props.getUserData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!_.isEqual(this.props.location, prevProps.location)) {\n        this.props.getContacts(this.props.match.params);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          openNewContactDialog = _this$props.openNewContactDialog;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FusePageSimple, {\n        classes: {\n          contentCardWrapper: \"p-16 sm:p-24 pb-80\",\n          leftSidebar: \"w-256 border-0\",\n          header: \"min-h-72 h-72 sm:h-136 sm:min-h-136\"\n        },\n        header: React.createElement(ContactsHeader, {\n          pageLayout: function pageLayout() {\n            return _this.pageLayout;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        content: React.createElement(ContactsList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }),\n        leftSidebarContent: React.createElement(ContactsSidebarContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        sidebarInner: true,\n        onRef: function onRef(instance) {\n          _this.pageLayout = instance;\n        },\n        innerScroll: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(FuseAnimate, {\n        animation: \"transition.expandIn\",\n        delay: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        className: classes.addButton,\n        onClick: openNewContactDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"person_add\"))), React.createElement(ContactDialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ContactsApp;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getContacts: Actions.getContacts,\n    getUserData: Actions.getUserData,\n    openNewContactDialog: Actions.openNewContactDialog\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var contactsApp = _ref.contactsApp;\n  return {\n    contacts: contactsApp.contacts.entities,\n    selectedContactIds: contactsApp.contacts.selectedContactIds,\n    searchText: contactsApp.contacts.searchText,\n    user: contactsApp.user\n  };\n}\n\nexport default withReducer('contactsApp', reducer)(withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, mapDispatchToProps)(ContactsApp))));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/contacts/ContactsApp.js"],"names":["React","Component","withStyles","Fab","Icon","FusePageSimple","FuseAnimate","bindActionCreators","withRouter","connect","withReducer","_","ContactsList","ContactsHeader","ContactsSidebarContent","ContactDialog","Actions","reducer","styles","theme","addButton","position","right","bottom","zIndex","ContactsApp","props","getContacts","match","params","getUserData","prevProps","prevState","isEqual","location","classes","openNewContactDialog","contentCardWrapper","leftSidebar","header","pageLayout","instance","mapDispatchToProps","dispatch","mapStateToProps","contactsApp","contacts","entities","selectedContactIds","searchText","user","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles, Fab, Icon} from '@material-ui/core';\nimport {FusePageSimple, FuseAnimate} from '@fuse';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport withReducer from 'app/store/withReducer';\nimport _ from '@lodash';\nimport ContactsList from './ContactsList';\nimport ContactsHeader from './ContactsHeader';\nimport ContactsSidebarContent from './ContactsSidebarContent';\nimport ContactDialog from './ContactDialog';\nimport * as Actions from './store/actions';\nimport reducer from './store/reducers';\n\nconst styles = theme => ({\n    addButton: {\n        position: 'absolute',\n        right   : 12,\n        bottom  : 12,\n        zIndex  : 99\n    }\n});\n\nclass ContactsApp extends Component {\n\n    componentDidMount()\n    {\n        this.props.getContacts(this.props.match.params);\n        this.props.getUserData();\n    }\n\n    componentDidUpdate(prevProps, prevState)\n    {\n        if ( !_.isEqual(this.props.location, prevProps.location) )\n        {\n            this.props.getContacts(this.props.match.params);\n        }\n    }\n\n    render()\n    {\n        const {classes, openNewContactDialog} = this.props;\n\n        return (\n            <React.Fragment>\n                <FusePageSimple\n                    classes={{\n                        contentCardWrapper: \"p-16 sm:p-24 pb-80\",\n                        leftSidebar       : \"w-256 border-0\",\n                        header            : \"min-h-72 h-72 sm:h-136 sm:min-h-136\"\n                    }}\n                    header={\n                        <ContactsHeader pageLayout={() => this.pageLayout}/>\n                    }\n                    content={\n                        <ContactsList/>\n                    }\n                    leftSidebarContent={\n                        <ContactsSidebarContent/>\n                    }\n                    sidebarInner\n                    onRef={instance => {\n                        this.pageLayout = instance;\n                    }}\n                    innerScroll\n                />\n                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\n                    <Fab\n                        color=\"primary\"\n                        aria-label=\"add\"\n                        className={classes.addButton}\n                        onClick={openNewContactDialog}\n                    >\n                        <Icon>person_add</Icon>\n                    </Fab>\n                </FuseAnimate>\n                <ContactDialog/>\n            </React.Fragment>\n        )\n    };\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getContacts         : Actions.getContacts,\n        getUserData         : Actions.getUserData,\n        openNewContactDialog: Actions.openNewContactDialog\n    }, dispatch);\n}\n\nfunction mapStateToProps({contactsApp})\n{\n    return {\n        contacts          : contactsApp.contacts.entities,\n        selectedContactIds: contactsApp.contacts.selectedContactIds,\n        searchText        : contactsApp.contacts.searchText,\n        user              : contactsApp.user\n    }\n}\n\nexport default withReducer('contactsApp', reducer)(withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(ContactsApp))));\n"]},"metadata":{},"sourceType":"module"}