{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/dialogs/note/NoteDialog.js\";\nimport React, { Component } from 'react';\nimport { Slide, Dialog } from '@material-ui/core';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport _ from '@lodash';\nimport * as Actions from 'app/main/apps/notes/store/actions';\nimport NoteForm from 'app/main/apps/notes/note-form/NoteForm';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n}\n\nvar NoteDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteDialog, _Component);\n\n  function NoteDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NoteDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NoteDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.handleOnChange = _.debounce(function (note) {\n      _this.props.updateNote(note);\n    }, 600);\n\n    _this.handleOnRemove = function () {\n      _this.props.removeNote(_this.props.notes.noteDialogId);\n    };\n\n    return _this;\n  }\n\n  _createClass(NoteDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          notes = _this$props.notes,\n          closeNoteDialog = _this$props.closeNoteDialog;\n      return React.createElement(Dialog, {\n        classes: {\n          paper: \"w-full m-24 rounded-8\"\n        },\n        TransitionComponent: Transition,\n        onClose: closeNoteDialog,\n        open: Boolean(notes.noteDialogId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(NoteForm, {\n        note: notes.entities[notes.noteDialogId],\n        onChange: this.handleOnChange,\n        onClose: closeNoteDialog,\n        onRemove: this.handleOnRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NoteDialog;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    closeNoteDialog: Actions.closeNoteDialog,\n    updateNote: Actions.updateNote,\n    removeNote: Actions.removeNote\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var notesApp = _ref.notesApp;\n  return {\n    notes: notesApp.notes\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDialog);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/dialogs/note/NoteDialog.js"],"names":["React","Component","Slide","Dialog","bindActionCreators","connect","_","Actions","NoteForm","Transition","props","NoteDialog","handleOnChange","debounce","note","updateNote","handleOnRemove","removeNote","notes","noteDialogId","closeNoteDialog","paper","Boolean","entities","mapDispatchToProps","dispatch","mapStateToProps","notesApp"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,mBAA5B;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,KAAKC,OAAZ,MAAyB,mCAAzB;AACA,OAAOC,QAAP,MAAqB,wCAArB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EACA;AACI,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;IAEKC,U;;;;;;;;;;;;;;;;;UAEFC,c,GAAiBN,CAAC,CAACO,QAAF,CAAW,UAACC,IAAD,EAAU;AAClC,YAAKJ,KAAL,CAAWK,UAAX,CAAsBD,IAAtB;AACH,KAFgB,EAEd,GAFc,C;;UAIjBE,c,GAAkB,YAAM;AACpB,YAAKN,KAAL,CAAWO,UAAX,CAAsB,MAAKP,KAAL,CAAWQ,KAAX,CAAiBC,YAAvC;AACH,K;;;;;;;6BAGD;AAAA,wBACqC,KAAKT,KAD1C;AAAA,UACWQ,KADX,eACWA,KADX;AAAA,UACkBE,eADlB,eACkBA,eADlB;AAGI,aACI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE;AACLC,UAAAA,KAAK,EAAE;AADF,SADb;AAII,QAAA,mBAAmB,EAAEZ,UAJzB;AAKI,QAAA,OAAO,EAAEW,eALb;AAMI,QAAA,IAAI,EAAEE,OAAO,CAACJ,KAAK,CAACC,YAAP,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAED,KAAK,CAACK,QAAN,CAAeL,KAAK,CAACC,YAArB,CAAhB;AAAoD,QAAA,QAAQ,EAAE,KAAKP,cAAnE;AAAmF,QAAA,OAAO,EAAEQ,eAA5F;AAA6G,QAAA,QAAQ,EAAE,KAAKJ,cAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ;AAYH;;;;EA1BoBf,S;;AA6BzB,SAASuB,kBAAT,CAA4BC,QAA5B,EACA;AACI,SAAOrB,kBAAkB,CAAC;AACtBgB,IAAAA,eAAe,EAAEb,OAAO,CAACa,eADH;AAEtBL,IAAAA,UAAU,EAAOR,OAAO,CAACQ,UAFH;AAGtBE,IAAAA,UAAU,EAAOV,OAAO,CAACU;AAHH,GAAD,EAItBQ,QAJsB,CAAzB;AAKH;;AAED,SAASC,eAAT,OACA;AAAA,MAD0BC,QAC1B,QAD0BA,QAC1B;AACI,SAAO;AACHT,IAAAA,KAAK,EAAES,QAAQ,CAACT;AADb,GAAP;AAGH;;AAED,eAAeb,OAAO,CAACqB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cb,UAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Slide, Dialog} from '@material-ui/core';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport _ from '@lodash';\nimport * as Actions from 'app/main/apps/notes/store/actions';\nimport NoteForm from 'app/main/apps/notes/note-form/NoteForm';\n\nfunction Transition(props)\n{\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass NoteDialog extends Component {\n\n    handleOnChange = _.debounce((note) => {\n        this.props.updateNote(note);\n    }, 600);\n\n    handleOnRemove = (() => {\n        this.props.removeNote(this.props.notes.noteDialogId);\n    });\n\n    render()\n    {\n        const {notes, closeNoteDialog} = this.props;\n\n        return (\n            <Dialog\n                classes={{\n                    paper: \"w-full m-24 rounded-8\"\n                }}\n                TransitionComponent={Transition}\n                onClose={closeNoteDialog}\n                open={Boolean(notes.noteDialogId)}\n            >\n                <NoteForm note={notes.entities[notes.noteDialogId]} onChange={this.handleOnChange} onClose={closeNoteDialog} onRemove={this.handleOnRemove}/>\n            </Dialog>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeNoteDialog: Actions.closeNoteDialog,\n        updateNote     : Actions.updateNote,\n        removeNote     : Actions.removeNote\n    }, dispatch);\n}\n\nfunction mapStateToProps({notesApp})\n{\n    return {\n        notes: notesApp.notes\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDialog);\n"]},"metadata":{},"sourceType":"module"}