{"ast":null,"code":"var _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/chat/ContactSidebar.js\";\nimport React from 'react';\nimport { IconButton, TextField, AppBar, Icon, Toolbar, Typography, Avatar } from '@material-ui/core';\nimport { FuseScrollbars } from '@fuse';\nimport { bindActionCreators } from 'redux';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from './store/actions';\n\nvar ContactSidebar = function ContactSidebar(_ref) {\n  var contacts = _ref.contacts,\n      closeContactSidebar = _ref.closeContactSidebar,\n      selectedContactId = _ref.selectedContactId;\n  var contact = contacts.find(function (_contact) {\n    return _contact.id === selectedContactId;\n  });\n  return contact ? React.createElement(\"div\", {\n    className: \"flex flex-col flex-auto h-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"primary\",\n    elevation: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: \"flex justify-between items-center px-16 pr-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Contact Info\"), React.createElement(IconButton, {\n    onClick: closeContactSidebar,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"close\"))), React.createElement(Toolbar, {\n    className: \"flex flex-col justify-center items-center p-24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: contact.avatar,\n    alt: contact.name,\n    className: \"w-96 h-96\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, !contact.avatar || contact.avatar === '' ? contact.name[0] : ''), React.createElement(Typography, {\n    color: \"inherit\",\n    className: \"mt-16\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, contact.name))), React.createElement(FuseScrollbars, {\n    className: \"overflow-y-auto flex-1 p-24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Mood\",\n    className: \"w-full\",\n    value: contact.mood,\n    margin: \"normal\",\n    disabled: true,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))) : '';\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    closeContactSidebar: Actions.closeContactSidebar\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref2) {\n  var chatApp = _ref2.chatApp;\n  return {\n    contacts: chatApp.contacts.entities,\n    selectedContactId: chatApp.contacts.selectedContactId\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactSidebar);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/chat/ContactSidebar.js"],"names":["React","IconButton","TextField","AppBar","Icon","Toolbar","Typography","Avatar","FuseScrollbars","bindActionCreators","connect","Actions","ContactSidebar","contacts","closeContactSidebar","selectedContactId","contact","find","_contact","id","avatar","name","mood","mapDispatchToProps","dispatch","mapStateToProps","chatApp","entities"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {IconButton, TextField, AppBar, Icon, Toolbar, Typography, Avatar} from '@material-ui/core';\nimport {FuseScrollbars} from '@fuse';\nimport {bindActionCreators} from 'redux';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from './store/actions';\n\nconst ContactSidebar = ({contacts, closeContactSidebar, selectedContactId}) => {\n    const contact = contacts.find(_contact => (_contact.id === selectedContactId));\n    return contact ? (\n        <div className=\"flex flex-col flex-auto h-full\">\n\n            <AppBar position=\"static\" color=\"primary\" elevation={1}>\n\n                <Toolbar className=\"flex justify-between items-center px-16 pr-4\">\n                    <Typography color=\"inherit\" variant=\"subtitle1\">Contact Info</Typography>\n                    <IconButton onClick={closeContactSidebar} color=\"inherit\">\n                        <Icon>close</Icon>\n                    </IconButton>\n                </Toolbar>\n\n                <Toolbar className=\"flex flex-col justify-center items-center p-24\">\n                    <Avatar src={contact.avatar} alt={contact.name} className=\"w-96 h-96\">\n                        {!contact.avatar || contact.avatar === '' ? contact.name[0] : ''}\n                    </Avatar>\n                    <Typography color=\"inherit\" className=\"mt-16\" variant=\"h6\">{contact.name}</Typography>\n                </Toolbar>\n            </AppBar>\n\n            <FuseScrollbars className=\"overflow-y-auto flex-1 p-24\">\n                <TextField\n                    label=\"Mood\"\n                    className=\"w-full\"\n                    value={contact.mood}\n                    margin=\"normal\"\n                    disabled\n                    multiline\n                />\n            </FuseScrollbars>\n        </div>\n    ) : '';\n};\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeContactSidebar: Actions.closeContactSidebar\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        contacts         : chatApp.contacts.entities,\n        selectedContactId: chatApp.contacts.selectedContactId\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactSidebar);\n"]},"metadata":{},"sourceType":"module"}