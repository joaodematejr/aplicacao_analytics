{"ast":null,"code":"import axios from 'axios';\nexport var GET_MAILS = '[MAIL APP] GET MAILS';\nexport var GET_MAIL = '[MAIL APP] GET MAIL';\nexport var UPDATE_MAILS = '[MAIL APP] UPDATE MAILS';\nexport var SELECT_ALL_MAILS = '[MAILS] SELECT ALL MAILS';\nexport var DESELECT_ALL_MAILS = '[MAILS] DESELECT ALL MAILS';\nexport var TOGGLE_IN_SELECTED_MAILS = '[MAILS] TOGGLE IN SELECTED MAILS';\nexport var SELECT_MAILS_BY_PARAMETER = '[MAILS] SELECT MAILS BY PARAMETER';\nexport var SET_FOLDER_ON_SELECTED_MAILS = '[MAILS] SET FOLDER ON SELECTED MAILS';\nexport var TOGGLE_LABEL_ON_SELECTED_MAILS = '[MAILS] TOGGLE LABEL ON SELECTED MAILS';\nexport var SET_SEARCH_TEXT = '[MAILS] SET SEARCH TEXT';\nexport function getMails(routeParams) {\n  var request = axios.get('/api/mail-app/mails', {\n    params: routeParams\n  });\n  return function (dispatch) {\n    return request.then(function (response) {\n      return dispatch({\n        type: GET_MAILS,\n        routeParams: routeParams,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function updateMails() {\n  return function (dispatch, getState) {\n    var routeParams = getState().mailApp.mails.routeParams;\n    var request = axios.get('/api/mail-app/mails', {\n      params: routeParams\n    });\n    return request.then(function (response) {\n      return dispatch({\n        type: UPDATE_MAILS,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function selectAllMails() {\n  return {\n    type: SELECT_ALL_MAILS\n  };\n}\nexport function deselectAllMails() {\n  return {\n    type: DESELECT_ALL_MAILS\n  };\n}\nexport function selectMailsByParameter(parameter, value) {\n  return {\n    type: SELECT_MAILS_BY_PARAMETER,\n    payload: {\n      parameter: parameter,\n      value: value\n    }\n  };\n}\nexport function toggleInSelectedMails(mailId) {\n  return {\n    type: TOGGLE_IN_SELECTED_MAILS,\n    mailId: mailId\n  };\n}\nexport function setSearchText(event) {\n  return {\n    type: SET_SEARCH_TEXT,\n    searchText: event.target.value.toLowerCase()\n  };\n}\nexport function setFolderOnSelectedMails(id) {\n  return function (dispatch, getState) {\n    var selectedMailIds = getState().mailApp.mails.selectedMailIds;\n    var request = axios.post('/api/mail-app/set-folder', {\n      selectedMailIds: selectedMailIds,\n      folderId: id\n    });\n    return request.then(function (response) {\n      dispatch({\n        type: SET_FOLDER_ON_SELECTED_MAILS\n      });\n      return dispatch(updateMails());\n    });\n  };\n}\nexport function toggleLabelOnSelectedMails(id) {\n  return function (dispatch, getState) {\n    var selectedMailIds = getState().mailApp.mails.selectedMailIds;\n    var request = axios.post('/api/mail-app/toggle-label', {\n      selectedMailIds: selectedMailIds,\n      labelId: id\n    });\n    return request.then(function (response) {\n      dispatch({\n        type: TOGGLE_LABEL_ON_SELECTED_MAILS\n      });\n      return dispatch(updateMails());\n    });\n  };\n}","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/mail/store/actions/mails.actions.js"],"names":["axios","GET_MAILS","GET_MAIL","UPDATE_MAILS","SELECT_ALL_MAILS","DESELECT_ALL_MAILS","TOGGLE_IN_SELECTED_MAILS","SELECT_MAILS_BY_PARAMETER","SET_FOLDER_ON_SELECTED_MAILS","TOGGLE_LABEL_ON_SELECTED_MAILS","SET_SEARCH_TEXT","getMails","routeParams","request","get","params","dispatch","then","response","type","payload","data","updateMails","getState","mailApp","mails","selectAllMails","deselectAllMails","selectMailsByParameter","parameter","value","toggleInSelectedMails","mailId","setSearchText","event","searchText","target","toLowerCase","setFolderOnSelectedMails","id","selectedMailIds","post","folderId","toggleLabelOnSelectedMails","labelId"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const GET_MAILS = '[MAIL APP] GET MAILS';\nexport const GET_MAIL = '[MAIL APP] GET MAIL';\nexport const UPDATE_MAILS = '[MAIL APP] UPDATE MAILS';\nexport const SELECT_ALL_MAILS = '[MAILS] SELECT ALL MAILS';\nexport const DESELECT_ALL_MAILS = '[MAILS] DESELECT ALL MAILS';\nexport const TOGGLE_IN_SELECTED_MAILS = '[MAILS] TOGGLE IN SELECTED MAILS';\nexport const SELECT_MAILS_BY_PARAMETER = '[MAILS] SELECT MAILS BY PARAMETER';\nexport const SET_FOLDER_ON_SELECTED_MAILS = '[MAILS] SET FOLDER ON SELECTED MAILS';\nexport const TOGGLE_LABEL_ON_SELECTED_MAILS = '[MAILS] TOGGLE LABEL ON SELECTED MAILS';\nexport const SET_SEARCH_TEXT = '[MAILS] SET SEARCH TEXT';\n\nexport function getMails(routeParams)\n{\n    const request = axios.get('/api/mail-app/mails', {\n        params: routeParams\n    });\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type       : GET_MAILS,\n                routeParams: routeParams,\n                payload    : response.data\n            })\n        );\n}\n\nexport function updateMails()\n{\n    return (dispatch, getState) => {\n\n        const {routeParams} = getState().mailApp.mails;\n\n        const request = axios.get('/api/mail-app/mails', {\n            params: routeParams\n        });\n\n        return request.then((response) =>\n            dispatch({\n                type   : UPDATE_MAILS,\n                payload: response.data\n            })\n        );\n    }\n}\n\nexport function selectAllMails()\n{\n    return {\n        type: SELECT_ALL_MAILS\n    }\n}\n\nexport function deselectAllMails()\n{\n    return {\n        type: DESELECT_ALL_MAILS\n    }\n}\n\nexport function selectMailsByParameter(parameter, value)\n{\n    return {\n        type   : SELECT_MAILS_BY_PARAMETER,\n        payload: {\n            parameter,\n            value\n        }\n    }\n}\n\nexport function toggleInSelectedMails(mailId)\n{\n    return {\n        type: TOGGLE_IN_SELECTED_MAILS,\n        mailId\n    }\n}\n\nexport function setSearchText(event)\n{\n    return {\n        type      : SET_SEARCH_TEXT,\n        searchText: event.target.value.toLowerCase()\n    }\n}\n\nexport function setFolderOnSelectedMails(id)\n{\n    return (dispatch, getState) => {\n        const selectedMailIds = getState().mailApp.mails.selectedMailIds;\n\n        const request = axios.post('/api/mail-app/set-folder', {\n            selectedMailIds,\n            folderId: id\n        });\n\n        return request.then((response) => {\n                dispatch({\n                    type: SET_FOLDER_ON_SELECTED_MAILS\n                });\n                return dispatch(updateMails())\n            }\n        );\n    }\n}\n\nexport function toggleLabelOnSelectedMails(id)\n{\n    return (dispatch, getState) => {\n        const selectedMailIds = getState().mailApp.mails.selectedMailIds;\n\n        const request = axios.post('/api/mail-app/toggle-label', {\n            selectedMailIds,\n            labelId: id\n        });\n\n        return request.then((response) => {\n                dispatch({\n                    type: TOGGLE_LABEL_ON_SELECTED_MAILS\n                });\n                return dispatch(updateMails())\n            }\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}