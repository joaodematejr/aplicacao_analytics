{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport FuseUtils from '@fuse/FuseUtils';\n\nvar jwtService =\n/*#__PURE__*/\nfunction (_FuseUtils$EventEmitt) {\n  _inherits(jwtService, _FuseUtils$EventEmitt);\n\n  function jwtService() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, jwtService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(jwtService)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setInterceptors = function () {\n      axios.interceptors.response.use(function (response) {\n        return response;\n      }, function (err) {\n        return new Promise(function (resolve, reject) {\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n            // if you ever get an unauthorized response, logout the user\n            _this.emit('onAutoLogout', 'Invalid access_token');\n\n            _this.setSession(null);\n          }\n\n          throw err;\n        });\n      });\n    };\n\n    _this.handleAuthentication = function () {\n      var access_token = _this.getAccessToken();\n\n      if (!access_token) {\n        return;\n      }\n\n      if (_this.isAuthTokenValid(access_token)) {\n        _this.setSession(access_token);\n\n        _this.emit('onAutoLogin', true);\n      } else {\n        _this.setSession(null);\n\n        _this.emit('onAutoLogout', 'access_token expired');\n      }\n    };\n\n    _this.createUser = function (data) {\n      return new Promise(function (resolve, reject) {\n        axios.post('/api/auth/register', data).then(function (response) {\n          if (response.data.user) {\n            _this.setSession(response.data.access_token);\n\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.signInWithEmailAndPassword = function (email, password) {\n      return new Promise(function (resolve, reject) {\n        axios.get('/api/auth', {\n          data: {\n            email: email,\n            password: password\n          }\n        }).then(function (response) {\n          if (response.data.user) {\n            _this.setSession(response.data.access_token);\n\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.signInWithToken = function () {\n      return new Promise(function (resolve, reject) {\n        axios.get('/api/auth/access-token', {\n          data: {\n            access_token: _this.getAccessToken()\n          }\n        }).then(function (response) {\n          if (response.data.user) {\n            _this.setSession(response.data.access_token);\n\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.updateUserData = function (user) {\n      return axios.post('/api/auth/user/update', {\n        user: user\n      });\n    };\n\n    _this.setSession = function (access_token) {\n      if (access_token) {\n        localStorage.setItem('jwt_access_token', access_token);\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n      } else {\n        localStorage.removeItem('jwt_access_token');\n        delete axios.defaults.headers.common['Authorization'];\n      }\n    };\n\n    _this.logout = function () {\n      _this.setSession(null);\n    };\n\n    _this.isAuthTokenValid = function (access_token) {\n      if (!access_token) {\n        return false;\n      }\n\n      var decoded = jwtDecode(access_token);\n      var currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    _this.getAccessToken = function () {\n      return window.localStorage.getItem('jwt_access_token');\n    };\n\n    return _this;\n  }\n\n  _createClass(jwtService, [{\n    key: \"init\",\n    value: function init() {\n      this.setInterceptors();\n      this.handleAuthentication();\n    }\n  }]);\n\n  return jwtService;\n}(FuseUtils.EventEmitter);\n\nvar instance = new jwtService();\nexport default instance;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/services/jwtService/jwtService.js"],"names":["axios","jwtDecode","FuseUtils","jwtService","setInterceptors","interceptors","response","use","err","Promise","resolve","reject","status","config","__isRetryRequest","emit","setSession","handleAuthentication","access_token","getAccessToken","isAuthTokenValid","createUser","data","post","then","user","error","signInWithEmailAndPassword","email","password","get","signInWithToken","updateUserData","localStorage","setItem","defaults","headers","common","removeItem","logout","decoded","currentTime","Date","now","exp","console","warn","window","getItem","EventEmitter","instance"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport FuseUtils from '@fuse/FuseUtils';\n\nclass jwtService extends FuseUtils.EventEmitter {\n\n    init()\n    {\n        this.setInterceptors();\n        this.handleAuthentication();\n    }\n\n    setInterceptors = () => {\n        axios.interceptors.response.use(response => {\n            return response;\n        }, err => {\n            return new Promise((resolve, reject) => {\n                if ( err.response.status === 401 && err.config && !err.config.__isRetryRequest )\n                {\n                    // if you ever get an unauthorized response, logout the user\n                    this.emit('onAutoLogout', 'Invalid access_token');\n                    this.setSession(null);\n                }\n                throw err;\n            });\n        });\n    };\n\n    handleAuthentication = () => {\n\n        let access_token = this.getAccessToken();\n\n        if ( !access_token )\n        {\n            return;\n        }\n\n        if ( this.isAuthTokenValid(access_token) )\n        {\n            this.setSession(access_token);\n            this.emit('onAutoLogin', true);\n        }\n        else\n        {\n            this.setSession(null);\n            this.emit('onAutoLogout', 'access_token expired');\n        }\n    };\n\n    createUser = (data) => {\n        return new Promise((resolve, reject) => {\n            axios.post('/api/auth/register', data)\n                .then(response => {\n                    if ( response.data.user )\n                    {\n                        this.setSession(response.data.access_token);\n                        resolve(response.data.user);\n                    }\n                    else\n                    {\n                        reject(response.data.error);\n                    }\n                });\n        });\n    };\n\n    signInWithEmailAndPassword = (email, password) => {\n        return new Promise((resolve, reject) => {\n            axios.get('/api/auth', {\n                data: {\n                    email,\n                    password\n                }\n            }).then(response => {\n                if ( response.data.user )\n                {\n                    this.setSession(response.data.access_token);\n                    resolve(response.data.user);\n                }\n                else\n                {\n                    reject(response.data.error);\n                }\n            });\n        });\n    };\n\n    signInWithToken = () => {\n        return new Promise((resolve, reject) => {\n            axios.get('/api/auth/access-token', {\n                data: {\n                    access_token: this.getAccessToken()\n                }\n            })\n                .then(response => {\n                    if ( response.data.user )\n                    {\n                        this.setSession(response.data.access_token);\n                        resolve(response.data.user);\n                    }\n                    else\n                    {\n                        reject(response.data.error);\n                    }\n                });\n        });\n    };\n\n    updateUserData = (user) => {\n        return axios.post('/api/auth/user/update', {\n            user: user\n        });\n    };\n\n    setSession = access_token => {\n        if ( access_token )\n        {\n            localStorage.setItem('jwt_access_token', access_token);\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        }\n        else\n        {\n            localStorage.removeItem('jwt_access_token');\n            delete axios.defaults.headers.common['Authorization'];\n        }\n    };\n\n    logout = () => {\n        this.setSession(null);\n    };\n\n    isAuthTokenValid = access_token => {\n        if ( !access_token )\n        {\n            return false;\n        }\n        const decoded = jwtDecode(access_token);\n        const currentTime = Date.now() / 1000;\n        if ( decoded.exp < currentTime )\n        {\n            console.warn('access token expired');\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    };\n\n    getAccessToken = () => {\n        return window.localStorage.getItem('jwt_access_token');\n    };\n}\n\nconst instance = new jwtService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}