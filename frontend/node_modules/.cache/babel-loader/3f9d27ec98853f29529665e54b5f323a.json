{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/NoteList.js\";\nimport React, { Component } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { FuseUtils } from '@fuse';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport Masonry from 'react-masonry-css';\nimport * as Actions from './store/actions';\nimport NoteListItem from './NoteListItem';\n\nvar NoteList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteList, _Component);\n\n  function NoteList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NoteList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NoteList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedNotesMenu: null,\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(NoteList, [{\n    key: \"render\",\n    value: function render() {\n      var variateDescSize = this.props.variateDescSize;\n      var data = this.state.data;\n\n      if (!data || data.length === 0) {\n        return React.createElement(\"div\", {\n          className: \"flex items-center justify-center h-full\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          color: \"textSecondary\",\n          variant: \"h5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"There are no notes!\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"flex flex-wrap w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Masonry, {\n        breakpointCols: {\n          default: 6,\n          1920: 5,\n          1600: 4,\n          1366: 3,\n          1280: 4,\n          960: 3,\n          600: 2,\n          480: 1\n        },\n        className: \"my-masonry-grid flex w-full\",\n        columnClassName: \"my-masonry-grid_column flex flex-col p-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, data.map(function (note) {\n        return React.createElement(NoteListItem, {\n          key: note.id,\n          note: note,\n          className: \"w-full rounded-8 shadow-none border-1 mb-16\",\n          variateDescSize: variateDescSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      var notes = props.notes,\n          searchText = props.searchText,\n          match = props.match;\n      var params = match.params;\n      var id = params.id,\n          labelId = params.labelId;\n      var data = Object.keys(notes).map(function (id) {\n        return notes[id];\n      });\n\n      if (labelId) {\n        data = data.filter(function (note) {\n          return note.labels.includes(labelId) && !note.archive;\n        });\n      }\n\n      if (!id) {\n        data = data.filter(function (note) {\n          return !note.archive;\n        });\n      }\n\n      if (id === \"archive\") {\n        data = data.filter(function (note) {\n          return note.archive;\n        });\n      }\n\n      if (id === \"reminders\") {\n        data = data.filter(function (note) {\n          return Boolean(note.reminder) && !note.archive;\n        });\n      }\n\n      if (searchText.length === 0) {\n        return {\n          data: data\n        };\n      }\n\n      data = FuseUtils.filterArrayByString(data, searchText);\n      return {\n        data: data\n      };\n    }\n  }]);\n\n  return NoteList;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getNotes: Actions.getNotes,\n    openNoteDialog: Actions.openNoteDialog,\n    closeNoteDialog: Actions.closeNoteDialog,\n    removeNote: Actions.removeNote\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var notesApp = _ref.notesApp;\n  return {\n    notes: notesApp.notes.entities,\n    variateDescSize: notesApp.notes.variateDescSize,\n    searchText: notesApp.notes.searchText\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NoteList));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/NoteList.js"],"names":["React","Component","Typography","FuseUtils","connect","withRouter","bindActionCreators","Masonry","Actions","NoteListItem","NoteList","state","selectedNotesMenu","data","variateDescSize","props","length","default","map","note","id","notes","searchText","match","params","labelId","Object","keys","filter","labels","includes","archive","Boolean","reminder","filterArrayByString","mapDispatchToProps","dispatch","getNotes","openNoteDialog","closeNoteDialog","removeNote","mapStateToProps","notesApp","entities"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Typography} from '@material-ui/core';\nimport {FuseUtils} from '@fuse';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport Masonry from 'react-masonry-css';\nimport * as Actions from './store/actions';\nimport NoteListItem from './NoteListItem';\n\nclass NoteList extends Component {\n\n    state = {\n        selectedNotesMenu: null,\n        data             : []\n    };\n\n    static getDerivedStateFromProps(props)\n    {\n        const {notes, searchText, match} = props;\n        const {params} = match;\n        const {id, labelId} = params;\n\n        let data = Object.keys(notes).map((id) => notes[id]);\n\n        if ( labelId )\n        {\n            data = data.filter((note) => note.labels.includes(labelId) && !note.archive);\n        }\n\n        if ( !id )\n        {\n            data = data.filter((note) => !note.archive);\n        }\n\n        if ( id === \"archive\" )\n        {\n            data = data.filter((note) => note.archive);\n        }\n\n        if ( id === \"reminders\" )\n        {\n            data = data.filter((note) => Boolean(note.reminder) && !note.archive);\n        }\n\n        if ( searchText.length === 0 )\n        {\n            return {data};\n        }\n\n        data = FuseUtils.filterArrayByString(data, searchText);\n\n        return {\n            data\n        }\n    }\n\n    render()\n    {\n        const {variateDescSize} = this.props;\n        const {data} = this.state;\n\n        if ( !data || data.length === 0 )\n        {\n            return (\n                <div className=\"flex items-center justify-center h-full\">\n                    <Typography color=\"textSecondary\" variant=\"h5\">\n                        There are no notes!\n                    </Typography>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"flex flex-wrap w-full\">\n                <Masonry\n                    breakpointCols={{\n                        default: 6,\n                        1920   : 5,\n                        1600   : 4,\n                        1366   : 3,\n                        1280   : 4,\n                        960    : 3,\n                        600    : 2,\n                        480    : 1\n                    }}\n                    className=\"my-masonry-grid flex w-full\"\n                    columnClassName=\"my-masonry-grid_column flex flex-col p-8\">\n\n                    {data.map(note => (\n                        <NoteListItem\n                            key={note.id}\n                            note={note}\n                            className=\"w-full rounded-8 shadow-none border-1 mb-16\"\n                            variateDescSize={variateDescSize}\n                        />\n                    ))}\n                </Masonry>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getNotes       : Actions.getNotes,\n        openNoteDialog : Actions.openNoteDialog,\n        closeNoteDialog: Actions.closeNoteDialog,\n        removeNote     : Actions.removeNote\n    }, dispatch);\n}\n\nfunction mapStateToProps({notesApp})\n{\n    return {\n        notes          : notesApp.notes.entities,\n        variateDescSize: notesApp.notes.variateDescSize,\n        searchText     : notesApp.notes.searchText\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NoteList));\n"]},"metadata":{},"sourceType":"module"}