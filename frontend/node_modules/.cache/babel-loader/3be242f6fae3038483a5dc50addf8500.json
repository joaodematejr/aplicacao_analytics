{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/mix.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nvar data = {\n  datasets: [{\n    label: 'Sales',\n    type: 'line',\n    data: [51, 65, 40, 49, 60, 37, 40],\n    fill: false,\n    borderColor: '#EC932F',\n    backgroundColor: '#EC932F',\n    pointBorderColor: '#EC932F',\n    pointBackgroundColor: '#EC932F',\n    pointHoverBackgroundColor: '#EC932F',\n    pointHoverBorderColor: '#EC932F',\n    yAxisID: 'y-axis-2'\n  }, {\n    label: 'Visitor',\n    type: 'bar',\n    data: [200, 185, 590, 621, 250, 400, 95],\n    fill: false,\n    backgroundColor: '#71B37C',\n    borderColor: '#71B37C',\n    hoverBackgroundColor: '#71B37C',\n    hoverBorderColor: '#71B37C',\n    yAxisID: 'y-axis-1'\n  }]\n};\nvar options = {\n  responsive: true,\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  tooltips: {\n    mode: 'label'\n  },\n  elements: {\n    line: {\n      fill: false\n    }\n  },\n  scales: {\n    xAxes: [{\n      display: true,\n      gridLines: {\n        display: false\n      },\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July']\n    }],\n    yAxes: [{\n      type: 'linear',\n      display: true,\n      position: 'left',\n      id: 'y-axis-1',\n      gridLines: {\n        display: false\n      },\n      labels: {\n        show: true\n      }\n    }, {\n      type: 'linear',\n      display: true,\n      position: 'right',\n      id: 'y-axis-2',\n      gridLines: {\n        display: false\n      },\n      labels: {\n        show: true\n      }\n    }]\n  }\n};\nvar plugins = [{\n  afterDraw: function afterDraw(chartInstance, easing) {\n    var ctx = chartInstance.chart.ctx;\n    ctx.fillText(\"This text drawn by a plugin\", 100, 100);\n  }\n}];\n\nvar MixExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MixExample, _Component);\n\n  function MixExample() {\n    _classCallCheck(this, MixExample);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MixExample).apply(this, arguments));\n  }\n\n  _createClass(MixExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"flex flex-col items-center w-full max-w-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Mixed data Example\"), React.createElement(Bar, {\n        data: data,\n        options: options,\n        plugins: plugins,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MixExample;\n}(Component);\n\nexport default MixExample;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/mix.js"],"names":["React","Component","Bar","data","datasets","label","type","fill","borderColor","backgroundColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","yAxisID","hoverBackgroundColor","hoverBorderColor","options","responsive","labels","tooltips","mode","elements","line","scales","xAxes","display","gridLines","yAxes","position","id","show","plugins","afterDraw","chartInstance","easing","ctx","chart","fillText","MixExample"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nconst data = {\n    datasets: [\n        {\n            label                    : 'Sales',\n            type                     : 'line',\n            data                     : [51, 65, 40, 49, 60, 37, 40],\n            fill                     : false,\n            borderColor              : '#EC932F',\n            backgroundColor          : '#EC932F',\n            pointBorderColor         : '#EC932F',\n            pointBackgroundColor     : '#EC932F',\n            pointHoverBackgroundColor: '#EC932F',\n            pointHoverBorderColor    : '#EC932F',\n            yAxisID                  : 'y-axis-2'\n        }, {\n            label               : 'Visitor',\n            type                : 'bar',\n            data                : [200, 185, 590, 621, 250, 400, 95],\n            fill                : false,\n            backgroundColor     : '#71B37C',\n            borderColor         : '#71B37C',\n            hoverBackgroundColor: '#71B37C',\n            hoverBorderColor    : '#71B37C',\n            yAxisID             : 'y-axis-1'\n        }\n    ]\n};\n\nconst options = {\n    responsive: true,\n    labels    : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    tooltips  : {\n        mode: 'label'\n    },\n    elements  : {\n        line: {\n            fill: false\n        }\n    },\n    scales    : {\n\n        xAxes: [\n            {\n                display  : true,\n                gridLines: {\n                    display: false\n                },\n\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July']\n            }\n        ],\n        yAxes: [\n            {\n                type     : 'linear',\n                display  : true,\n                position : 'left',\n                id       : 'y-axis-1',\n                gridLines: {\n                    display: false\n                },\n                labels   : {\n                    show: true\n                }\n            },\n            {\n                type     : 'linear',\n                display  : true,\n                position : 'right',\n                id       : 'y-axis-2',\n                gridLines: {\n                    display: false\n                },\n                labels   : {\n                    show: true\n                }\n            }\n        ]\n    }\n};\n\nconst plugins = [\n    {\n        afterDraw: (chartInstance, easing) => {\n            const ctx = chartInstance.chart.ctx;\n            ctx.fillText(\"This text drawn by a plugin\", 100, 100);\n        }\n    }\n];\n\nclass MixExample extends Component {\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Mixed data Example</h2>\n                <Bar\n                    data={data}\n                    options={options}\n                    plugins={plugins}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MixExample;\n"]},"metadata":{},"sourceType":"module"}