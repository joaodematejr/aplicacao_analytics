{"ast":null,"code":"var _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/documentation/working-with-fuse-react/code-splitting/CodeSplittingDoc.js\";\nimport React from 'react';\nimport { Icon, Typography } from '@material-ui/core';\nimport { FuseHighlight, FusePageSimple } from '@fuse';\n\nvar CodeSplittingDoc = function CodeSplittingDoc() {\n  return React.createElement(FusePageSimple, {\n    header: React.createElement(\"div\", {\n      className: \"flex flex-1 items-center justify-between p-24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex flex-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex items-center mb-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"text-18\",\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"home\"), React.createElement(Icon, {\n      className: \"text-16\",\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"chevron_right\"), React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Documentation\"), React.createElement(Icon, {\n      className: \"text-16\",\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"chevron_right\"), React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Working with Fuse React\")), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Code Splitting (Lazy loading)\"))),\n    content: React.createElement(\"div\", {\n      className: \"p-24 max-w-2xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Code-splitting your app can help you \\u201Clazy-load\\u201D just the things that are currently needed by the user, which can dramatically improve the performance of your app. While you haven\\u2019t reduced the overall amount of code in your app, you\\u2019ve avoided loading code that the user may never need, and reduced the amount of code needed during the initial load.\"), React.createElement(Typography, {\n      className: \"mt-32 mb-8\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Route-based code splitting\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"We are using \", React.createElement(\"a\", {\n      href: \"https://github.com/thejameskyle/react-loadable\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"font-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"React Loadable\"), \" library and created FuseLoadable higher order component for to avoid repetition of Loadable component defaults.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \"Checkout the examples below to see dynamically or regular way of importing the components.\"), React.createElement(\"div\", {\n      className: \"flex flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-full lg:w-1/2 lg:pr-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"mt-32 mb-8\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Lazy Loaded Component:\"), React.createElement(FuseHighlight, {\n      component: \"pre\",\n      className: \"language-jsx my-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\n                            import {FuseLoadable} from '@fuse';\\n\\n                            export const AnalyticsDashboardAppConfig = {\\n                                settings: {\\n                                    layout: {\\n                                        config: {}\\n                                    }\\n                                },\\n                                routes  : [\\n                                    {\\n                                        path     : '/apps/dashboards/analytics',\\n                                        component: FuseLoadable({\\n                                            loader: () => import('./AnalyticsDashboardApp')\\n                                        })\\n                                    }\\n                                ]\\n                            };\\n                            \")), React.createElement(\"div\", {\n      className: \"w-full lg:w-1/2 lg:pl-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"mt-32 mb-8\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Regular Loaded Component:\"), React.createElement(FuseHighlight, {\n      component: \"pre\",\n      className: \"language-jsx my-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\n                                    import AnalyticsDashboardApp from './AnalyticsDashboardApp';\\n\\n                                    export const AnalyticsDashboardAppConfig = {\\n                                        settings: {\\n                                            layout: {\\n                                                config: {}\\n                                            }\\n                                        },\\n                                        routes  : [\\n                                            {\\n                                                path     : '/apps/dashboards/analytics',\\n                                                component: AnalyticsDashboardApp\\n                                            }\\n                                        ]\\n                                    };\\n                                  \"))), React.createElement(Typography, {\n      className: \"mt-32 mb-8\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Code splitting the Redux reducers (Dynamically loaded reducers)\"), React.createElement(Typography, {\n      className: \"mb-16\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"We created Higher Order Component \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"withReducer\"), \" to load redux reducer before the component render.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"You just need to pass \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"key\"), \" and the \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"reducer\"), \" to the component.\"), React.createElement(FuseHighlight, {\n      component: \"pre\",\n      className: \"language-jsx my-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\n                              import withReducer from 'app/store/withReducer';\\n                              import reducer from './store/reducers';\\n                              .\\n                              .\\n                              export default withReducer('analyticsDashboardApp', reducer)(AnalyticsDashboardApp);\\n                            \")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  });\n};\n\nexport default CodeSplittingDoc;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/documentation/working-with-fuse-react/code-splitting/CodeSplittingDoc.js"],"names":["React","Icon","Typography","FuseHighlight","FusePageSimple","CodeSplittingDoc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Icon, Typography} from '@material-ui/core';\nimport {FuseHighlight, FusePageSimple} from '@fuse';\n\nconst CodeSplittingDoc = () => {\n    return (\n        <FusePageSimple\n            header={\n                <div className=\"flex flex-1 items-center justify-between p-24\">\n                    <div className=\"flex flex-col\">\n                        <div className=\"flex items-center mb-16\">\n                            <Icon className=\"text-18\" color=\"action\">home</Icon>\n                            <Icon className=\"text-16\" color=\"action\">chevron_right</Icon>\n                            <Typography color=\"textSecondary\">Documentation</Typography>\n                            <Icon className=\"text-16\" color=\"action\">chevron_right</Icon>\n                            <Typography color=\"textSecondary\">Working with Fuse React</Typography>\n                        </div>\n                        <Typography variant=\"h6\">Code Splitting (Lazy loading)</Typography>\n                    </div>\n                </div>\n            }\n            content={\n                <div className=\"p-24 max-w-2xl\">\n\n                    <Typography className=\"mb-16\" component=\"p\">\n                        Code-splitting your app can help you “lazy-load” just the things that are currently needed by the user, which can dramatically improve the performance\n                        of your app. While you haven’t reduced the overall amount of code in your app, you’ve avoided loading code that the user may never need, and reduced the\n                        amount of code needed during the initial load.\n                    </Typography>\n\n                    <Typography className=\"mt-32 mb-8\" variant=\"h5\">Route-based code splitting</Typography>\n\n                    <Typography className=\"mb-16\" component=\"p\">\n                        We are using <a href=\"https://github.com/thejameskyle/react-loadable\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"font-bold\">React\n                        Loadable</a> library and created FuseLoadable higher order component for to avoid repetition of Loadable component defaults.<br/>\n                        Checkout the examples below to see dynamically or regular way of importing the components.\n                    </Typography>\n\n                    <div className=\"flex flex-wrap\">\n\n                        <div className=\"w-full lg:w-1/2 lg:pr-8\">\n                            <Typography className=\"mt-32 mb-8\" variant=\"h6\">Lazy Loaded Component:</Typography>\n\n                            <FuseHighlight component=\"pre\" className=\"language-jsx my-16\">\n                                {`\n                            import {FuseLoadable} from '@fuse';\n\n                            export const AnalyticsDashboardAppConfig = {\n                                settings: {\n                                    layout: {\n                                        config: {}\n                                    }\n                                },\n                                routes  : [\n                                    {\n                                        path     : '/apps/dashboards/analytics',\n                                        component: FuseLoadable({\n                                            loader: () => import('./AnalyticsDashboardApp')\n                                        })\n                                    }\n                                ]\n                            };\n                            `}\n                            </FuseHighlight>\n                        </div>\n\n                        <div className=\"w-full lg:w-1/2 lg:pl-8\">\n                            <Typography className=\"mt-32 mb-8\" variant=\"h6\">Regular Loaded Component:</Typography>\n\n                            <FuseHighlight component=\"pre\" className=\"language-jsx my-16\">\n                                {`\n                                    import AnalyticsDashboardApp from './AnalyticsDashboardApp';\n\n                                    export const AnalyticsDashboardAppConfig = {\n                                        settings: {\n                                            layout: {\n                                                config: {}\n                                            }\n                                        },\n                                        routes  : [\n                                            {\n                                                path     : '/apps/dashboards/analytics',\n                                                component: AnalyticsDashboardApp\n                                            }\n                                        ]\n                                    };\n                                  `}\n                            </FuseHighlight>\n                        </div>\n                    </div>\n\n                    <Typography className=\"mt-32 mb-8\" variant=\"h5\">Code splitting the Redux reducers (Dynamically loaded reducers)</Typography>\n\n                    <Typography className=\"mb-16\" component=\"p\">\n                        We created Higher Order Component <code>withReducer</code> to load redux reducer before the component render.<br/>\n                        You just need to pass <b>key</b> and the <b>reducer</b> to the component.\n                    </Typography>\n\n                    <FuseHighlight component=\"pre\" className=\"language-jsx my-16\">\n                        {`\n                              import withReducer from 'app/store/withReducer';\n                              import reducer from './store/reducers';\n                              .\n                              .\n                              export default withReducer('analyticsDashboardApp', reducer)(AnalyticsDashboardApp);\n                            `}\n                    </FuseHighlight>\n                </div>\n            }\n        />\n    );\n};\n\nexport default CodeSplittingDoc;\n"]},"metadata":{},"sourceType":"module"}