{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/tooltips/CustomizedTooltips.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: \"transparent transparent \".concat(color, \" transparent\")\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: \"\".concat(color, \" transparent transparent transparent\")\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: \"transparent \".concat(color, \" transparent transparent\")\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: \"transparent transparent transparent \".concat(color)\n      }\n    }\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      margin: theme.spacing.unit\n    },\n    lightTooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n      position: 'absolute',\n      fontSize: 6,\n      width: '3em',\n      height: '3em',\n      '&::before': {\n        content: '\"\"',\n        margin: 'auto',\n        display: 'block',\n        width: 0,\n        height: 0,\n        borderStyle: 'solid'\n      }\n    },\n    bootstrapPopper: arrowGenerator(theme.palette.common.black),\n    bootstrapTooltip: {\n      backgroundColor: theme.palette.common.black\n    },\n    bootstrapPlacementLeft: {\n      margin: '0 8px'\n    },\n    bootstrapPlacementRight: {\n      margin: '0 8px'\n    },\n    bootstrapPlacementTop: {\n      margin: '8px 0'\n    },\n    bootstrapPlacementBottom: {\n      margin: '8px 0'\n    },\n    htmlPopper: arrowGenerator('#dadde9'),\n    htmlTooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n      '& b': {\n        fontWeight: theme.typography.fontWeightMedium\n      }\n    }\n  };\n};\n\nvar CustomizedTooltips =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomizedTooltips, _React$Component);\n\n  function CustomizedTooltips() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomizedTooltips);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomizedTooltips)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      arrowRef: null\n    };\n\n    _this.handleArrowRef = function (node) {\n      _this.setState({\n        arrowRef: node\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomizedTooltips, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Add\",\n        classes: {\n          tooltip: classes.lightTooltip\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Light\")), React.createElement(Tooltip, {\n        title: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Add\", React.createElement(\"span\", {\n          className: classes.arrow,\n          ref: this.handleArrowRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        })),\n        classes: {\n          popper: classes.arrowPopper\n        },\n        PopperProps: {\n          popperOptions: {\n            modifiers: {\n              arrow: {\n                enabled: Boolean(this.state.arrowRef),\n                element: this.state.arrowRef\n              }\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Arrow\")), React.createElement(Tooltip, {\n        title: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"Add\", React.createElement(\"span\", {\n          className: classes.arrow,\n          ref: this.handleArrowRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        })),\n        classes: {\n          tooltip: classes.bootstrapTooltip,\n          popper: classes.bootstrapPopper,\n          tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n          tooltipPlacementRight: classes.bootstrapPlacementRight,\n          tooltipPlacementTop: classes.bootstrapPlacementTop,\n          tooltipPlacementBottom: classes.bootstrapPlacementBottom\n        },\n        PopperProps: {\n          popperOptions: {\n            modifiers: {\n              arrow: {\n                enabled: Boolean(this.state.arrowRef),\n                element: this.state.arrowRef\n              }\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Bootstrap\")), React.createElement(Tooltip, {\n        classes: {\n          popper: classes.htmlPopper,\n          tooltip: classes.htmlTooltip\n        },\n        PopperProps: {\n          popperOptions: {\n            modifiers: {\n              arrow: {\n                enabled: Boolean(this.state.arrowRef),\n                element: this.state.arrowRef\n              }\n            }\n          }\n        },\n        title: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          color: \"inherit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"Tooltip with HTML\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"And here's\"), \" \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, 'some'), \" \", React.createElement(\"u\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, 'amazing content'), \".\", ' ', \"It's very engaging. Right?\", React.createElement(\"span\", {\n          className: classes.arrow,\n          ref: this.handleArrowRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"HTML\")));\n    }\n  }]);\n\n  return CustomizedTooltips;\n}(React.Component);\n\nCustomizedTooltips.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedTooltips);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/tooltips/CustomizedTooltips.js"],"names":["React","PropTypes","withStyles","Button","Tooltip","Typography","arrowGenerator","color","top","left","marginTop","width","height","borderWidth","borderColor","bottom","marginBottom","marginLeft","right","marginRight","styles","theme","button","margin","spacing","unit","lightTooltip","backgroundColor","palette","common","white","boxShadow","shadows","fontSize","arrowPopper","grey","arrow","position","content","display","borderStyle","bootstrapPopper","black","bootstrapTooltip","bootstrapPlacementLeft","bootstrapPlacementRight","bootstrapPlacementTop","bootstrapPlacementBottom","htmlPopper","htmlTooltip","maxWidth","typography","pxToRem","border","fontWeight","fontWeightMedium","CustomizedTooltips","state","arrowRef","handleArrowRef","node","setState","classes","props","tooltip","popper","popperOptions","modifiers","enabled","Boolean","element","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${color} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${color} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${color} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${color}`,\n      },\n    },\n  };\n}\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  lightTooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n  arrowPopper: arrowGenerator(theme.palette.grey[700]),\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  bootstrapPopper: arrowGenerator(theme.palette.common.black),\n  bootstrapTooltip: {\n    backgroundColor: theme.palette.common.black,\n  },\n  bootstrapPlacementLeft: {\n    margin: '0 8px',\n  },\n  bootstrapPlacementRight: {\n    margin: '0 8px',\n  },\n  bootstrapPlacementTop: {\n    margin: '8px 0',\n  },\n  bootstrapPlacementBottom: {\n    margin: '8px 0',\n  },\n  htmlPopper: arrowGenerator('#dadde9'),\n  htmlTooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n    '& b': {\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n  },\n});\n\nclass CustomizedTooltips extends React.Component {\n  state = {\n    arrowRef: null,\n  };\n\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Tooltip title=\"Add\" classes={{ tooltip: classes.lightTooltip }}>\n          <Button className={classes.button}>Light</Button>\n        </Tooltip>\n        <Tooltip\n          title={\n            <React.Fragment>\n              Add\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n          classes={{ popper: classes.arrowPopper }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef,\n                },\n              },\n            },\n          }}\n        >\n          <Button className={classes.button}>Arrow</Button>\n        </Tooltip>\n        <Tooltip\n          title={\n            <React.Fragment>\n              Add\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n          classes={{\n            tooltip: classes.bootstrapTooltip,\n            popper: classes.bootstrapPopper,\n            tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n            tooltipPlacementRight: classes.bootstrapPlacementRight,\n            tooltipPlacementTop: classes.bootstrapPlacementTop,\n            tooltipPlacementBottom: classes.bootstrapPlacementBottom,\n          }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef,\n                },\n              },\n            },\n          }}\n        >\n          <Button className={classes.button}>Bootstrap</Button>\n        </Tooltip>\n        <Tooltip\n          classes={{\n            popper: classes.htmlPopper,\n            tooltip: classes.htmlTooltip,\n          }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef,\n                },\n              },\n            },\n          }}\n          title={\n            <React.Fragment>\n              <Typography color=\"inherit\">Tooltip with HTML</Typography>\n              <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n              {\"It's very engaging. Right?\"}\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n        >\n          <Button className={classes.button}>HTML</Button>\n        </Tooltip>\n      </div>\n    );\n  }\n}\n\nCustomizedTooltips.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTooltips);\n"]},"metadata":{},"sourceType":"module"}