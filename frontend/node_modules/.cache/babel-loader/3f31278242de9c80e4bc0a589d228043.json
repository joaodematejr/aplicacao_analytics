{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearAlternativeLabelStepper.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '90%'\n    },\n    button: {\n      marginRight: theme.spacing.unit\n    },\n    backButton: {\n      marginRight: theme.spacing.unit\n    },\n    completed: {\n      display: 'inline-block'\n    },\n    instructions: {\n      marginTop: theme.spacing.unit,\n      marginBottom: theme.spacing.unit\n    }\n  };\n};\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nvar HorizontalNonLinearAlternativeLabelStepper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalNonLinearAlternativeLabelStepper, _React$Component);\n\n  function HorizontalNonLinearAlternativeLabelStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HorizontalNonLinearAlternativeLabelStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HorizontalNonLinearAlternativeLabelStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeStep: 0,\n      completed: new Set(),\n      skipped: new Set()\n    };\n\n    _this.totalSteps = function () {\n      return getSteps().length;\n    };\n\n    _this.isStepOptional = function (step) {\n      return step === 1;\n    };\n\n    _this.handleSkip = function () {\n      var activeStep = _this.state.activeStep;\n\n      if (!_this.isStepOptional(activeStep)) {\n        // You probably want to guard against something like this\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      _this.setState(function (state) {\n        var skipped = new Set(state.skipped.values());\n        skipped.add(activeStep);\n        return {\n          activeStep: state.activeStep + 1,\n          skipped: skipped\n        };\n      });\n    };\n\n    _this.handleNext = function () {\n      var activeStep;\n\n      if (_this.isLastStep() && !_this.allStepsCompleted()) {\n        // It's the last step, but not all steps have been completed\n        // find the first step that has been completed\n        var steps = getSteps();\n        activeStep = steps.findIndex(function (step, i) {\n          return !_this.state.completed.has(i);\n        });\n      } else {\n        activeStep = _this.state.activeStep + 1;\n      }\n\n      _this.setState({\n        activeStep: activeStep\n      });\n    };\n\n    _this.handleBack = function () {\n      _this.setState(function (state) {\n        return {\n          activeStep: state.activeStep - 1\n        };\n      });\n    };\n\n    _this.handleStep = function (step) {\n      return function () {\n        _this.setState({\n          activeStep: step\n        });\n      };\n    };\n\n    _this.handleComplete = function () {\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      var completed = new Set(_this.state.completed);\n      completed.add(_this.state.activeStep);\n\n      _this.setState({\n        completed: completed\n      });\n      /**\n       * Sigh... it would be much nicer to replace the following if conditional with\n       * `if (!this.allStepsComplete())` however state is not set when we do this,\n       * thus we have to resort to not being very DRY.\n       */\n\n\n      if (completed.size !== _this.totalSteps() - _this.skippedSteps()) {\n        _this.handleNext();\n      }\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        activeStep: 0,\n        completed: new Set(),\n        skipped: new Set()\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HorizontalNonLinearAlternativeLabelStepper, [{\n    key: \"skippedSteps\",\n    value: function skippedSteps() {\n      return this.state.skipped.size;\n    }\n  }, {\n    key: \"isStepSkipped\",\n    value: function isStepSkipped(step) {\n      return this.state.skipped.has(step);\n    }\n  }, {\n    key: \"isStepComplete\",\n    value: function isStepComplete(step) {\n      return this.state.completed.has(step);\n    }\n  }, {\n    key: \"completedSteps\",\n    value: function completedSteps() {\n      return this.state.completed.size;\n    }\n  }, {\n    key: \"allStepsCompleted\",\n    value: function allStepsCompleted() {\n      return this.completedSteps() === this.totalSteps() - this.skippedSteps();\n    }\n  }, {\n    key: \"isLastStep\",\n    value: function isLastStep() {\n      return this.state.activeStep === this.totalSteps() - 1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var steps = getSteps();\n      var activeStep = this.state.activeStep;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        alternativeLabel: true,\n        nonLinear: true,\n        activeStep: activeStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, steps.map(function (label, index) {\n        var props = {};\n        var buttonProps = {};\n\n        if (_this2.isStepOptional(index)) {\n          buttonProps.optional = React.createElement(Typography, {\n            variant: \"caption\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, \"Optional\");\n        }\n\n        if (_this2.isStepSkipped(index)) {\n          props.completed = false;\n        }\n\n        return React.createElement(Step, Object.assign({\n          key: label\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }), React.createElement(StepButton, Object.assign({\n          onClick: _this2.handleStep(index),\n          completed: _this2.isStepComplete(index)\n        }, buttonProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }), label));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.allStepsCompleted() ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.instructions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"All steps completed - you're finished\"), React.createElement(Button, {\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Reset\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.instructions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, getStepContent(activeStep)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: activeStep === 0,\n        onClick: this.handleBack,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Back\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleNext,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Next\"), this.isStepOptional(activeStep) && !this.state.completed.has(this.state.activeStep) && React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleSkip,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Skip\"), activeStep !== steps.length && (this.state.completed.has(this.state.activeStep) ? React.createElement(Typography, {\n        variant: \"caption\",\n        className: classes.completed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Step \", activeStep + 1, \" already completed\") : React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n    }\n  }]);\n\n  return HorizontalNonLinearAlternativeLabelStepper;\n}(React.Component);\n\nHorizontalNonLinearAlternativeLabelStepper.propTypes = {\n  classes: PropTypes.object\n};\nexport default withStyles(styles)(HorizontalNonLinearAlternativeLabelStepper);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearAlternativeLabelStepper.js"],"names":["React","PropTypes","withStyles","Stepper","Step","StepButton","Button","Typography","styles","theme","root","width","button","marginRight","spacing","unit","backButton","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","HorizontalNonLinearAlternativeLabelStepper","state","activeStep","Set","skipped","totalSteps","length","isStepOptional","handleSkip","Error","setState","values","add","handleNext","isLastStep","allStepsCompleted","steps","findIndex","i","has","handleBack","handleStep","handleComplete","size","skippedSteps","handleReset","completedSteps","classes","props","map","label","index","buttonProps","optional","isStepSkipped","isStepComplete","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing.unit,\n  },\n  backButton: {\n    marginRight: theme.spacing.unit,\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n  },\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalNonLinearAlternativeLabelStepper extends React.Component {\n  state = {\n    activeStep: 0,\n    completed: new Set(),\n    skipped: new Set(),\n  };\n\n  totalSteps = () => getSteps().length;\n\n  isStepOptional = step => step === 1;\n\n  handleSkip = () => {\n    const { activeStep } = this.state;\n    if (!this.isStepOptional(activeStep)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    this.setState(state => {\n      const skipped = new Set(state.skipped.values());\n      skipped.add(activeStep);\n      return {\n        activeStep: state.activeStep + 1,\n        skipped,\n      };\n    });\n  };\n\n  handleNext = () => {\n    let activeStep;\n\n    if (this.isLastStep() && !this.allStepsCompleted()) {\n      // It's the last step, but not all steps have been completed\n      // find the first step that has been completed\n      const steps = getSteps();\n      activeStep = steps.findIndex((step, i) => !this.state.completed.has(i));\n    } else {\n      activeStep = this.state.activeStep + 1;\n    }\n    this.setState({\n      activeStep,\n    });\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleStep = step => () => {\n    this.setState({\n      activeStep: step,\n    });\n  };\n\n  handleComplete = () => {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const completed = new Set(this.state.completed);\n    completed.add(this.state.activeStep);\n    this.setState({\n      completed,\n    });\n\n    /**\n     * Sigh... it would be much nicer to replace the following if conditional with\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\n     * thus we have to resort to not being very DRY.\n     */\n    if (completed.size !== this.totalSteps() - this.skippedSteps()) {\n      this.handleNext();\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n      completed: new Set(),\n      skipped: new Set(),\n    });\n  };\n\n  skippedSteps() {\n    return this.state.skipped.size;\n  }\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  isStepComplete(step) {\n    return this.state.completed.has(step);\n  }\n\n  completedSteps() {\n    return this.state.completed.size;\n  }\n\n  allStepsCompleted() {\n    return this.completedSteps() === this.totalSteps() - this.skippedSteps();\n  }\n\n  isLastStep() {\n    return this.state.activeStep === this.totalSteps() - 1;\n  }\n\n  render() {\n    const { classes } = this.props;\n    const steps = getSteps();\n    const { activeStep } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const props = {};\n            const buttonProps = {};\n            if (this.isStepOptional(index)) {\n              buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (this.isStepSkipped(index)) {\n              props.completed = false;\n            }\n            return (\n              <Step key={label} {...props}>\n                <StepButton\n                  onClick={this.handleStep(index)}\n                  completed={this.isStepComplete(index)}\n                  {...buttonProps}\n                >\n                  {label}\n                </StepButton>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {this.allStepsCompleted() ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={this.handleReset}>Reset</Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={this.handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.handleNext}\n                  className={classes.button}\n                >\n                  Next\n                </Button>\n                {this.isStepOptional(activeStep) &&\n                  !this.state.completed.has(this.state.activeStep) && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleSkip}\n                      className={classes.button}\n                    >\n                      Skip\n                    </Button>\n                  )}\n                {activeStep !== steps.length &&\n                  (this.state.completed.has(this.state.activeStep) ? (\n                    <Typography variant=\"caption\" className={classes.completed}>\n                      Step {activeStep + 1} already completed\n                    </Typography>\n                  ) : (\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\n                      {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                    </Button>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nHorizontalNonLinearAlternativeLabelStepper.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(HorizontalNonLinearAlternativeLabelStepper);\n"]},"metadata":{},"sourceType":"module"}