{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPopupState = createPopupState;\nexports.bindTrigger = bindTrigger;\nexports.bindToggle = bindToggle;\nexports.bindHover = bindHover;\nexports.bindPopover = bindPopover;\nexports.bindPopper = bindPopper;\nexports.bindMenu = exports.initCoreState = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n/* eslint-env browser */\n\n\nvar eventOrAnchorElWarned = false;\nvar initCoreState = {\n  anchorEl: null,\n  hovered: false,\n  _childPopupState: null\n};\nexports.initCoreState = initCoreState;\n\nfunction createPopupState(_ref) {\n  var _ref$state = _ref.state,\n      anchorEl = _ref$state.anchorEl,\n      hovered = _ref$state.hovered,\n      _childPopupState = _ref$state._childPopupState,\n      setState = _ref.setState,\n      parentPopupState = _ref.parentPopupState,\n      popupId = _ref.popupId,\n      variant = _ref.variant;\n\n  var toggle = function toggle(eventOrAnchorEl) {\n    if (anchorEl) close();else open(eventOrAnchorEl);\n  };\n\n  var open = function open(eventOrAnchorEl) {\n    if (!eventOrAnchorElWarned && !eventOrAnchorEl) {\n      eventOrAnchorElWarned = true;\n      console.error('eventOrAnchorEl should be defined'); // eslint-disable-line no-console\n    }\n\n    if (parentPopupState) {\n      if (!parentPopupState.isOpen) return;\n\n      parentPopupState._setChildPopupState(popupState);\n    }\n\n    if ((typeof document === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(document)) === 'object' && document.activeElement) {\n      document.activeElement.blur();\n    }\n\n    setState({\n      anchorEl: eventOrAnchorEl && eventOrAnchorEl.currentTarget ? eventOrAnchorEl.currentTarget : eventOrAnchorEl,\n      hovered: eventOrAnchorEl.type === 'mouseenter'\n    });\n  };\n\n  var close = function close() {\n    if (_childPopupState) _childPopupState.close();\n    if (parentPopupState) parentPopupState._setChildPopupState(null);\n    setState({\n      anchorEl: null,\n      hovered: false\n    });\n  };\n\n  var setOpen = function setOpen(nextOpen, eventOrAnchorEl) {\n    if (nextOpen) {\n      if (!eventOrAnchorEl) {\n        throw new Error('eventOrAnchorEl must be defined when opening');\n      }\n\n      open(eventOrAnchorEl);\n    } else close();\n  };\n\n  var onMouseLeave = function onMouseLeave(event) {\n    var relatedTarget = event.relatedTarget;\n\n    if (hovered && !isElementInPopup(relatedTarget, popupState)) {\n      close();\n    }\n  };\n\n  var _setChildPopupState = function _setChildPopupState(_childPopupState) {\n    return setState({\n      _childPopupState: _childPopupState\n    });\n  };\n\n  var popupState = {\n    anchorEl: anchorEl,\n    popupId: popupId,\n    variant: variant,\n    isOpen: anchorEl != null,\n    open: open,\n    close: close,\n    toggle: toggle,\n    setOpen: setOpen,\n    onMouseLeave: onMouseLeave,\n    _childPopupState: _childPopupState,\n    _setChildPopupState: _setChildPopupState\n  };\n  return popupState;\n}\n/**\n * Creates props for a component that opens the popup when clicked.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindTrigger(_ref2) {\n  var _ref3;\n\n  var isOpen = _ref2.isOpen,\n      open = _ref2.open,\n      popupId = _ref2.popupId,\n      variant = _ref2.variant;\n  return _ref3 = {}, (0, _defineProperty2.default)(_ref3, variant === 'popover' ? 'aria-owns' : 'aria-describedby', isOpen ? popupId : null), (0, _defineProperty2.default)(_ref3, 'aria-haspopup', true), (0, _defineProperty2.default)(_ref3, \"onClick\", open), _ref3;\n}\n/**\n * Creates props for a component that toggles the popup when clicked.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindToggle(_ref4) {\n  var _ref5;\n\n  var isOpen = _ref4.isOpen,\n      toggle = _ref4.toggle,\n      popupId = _ref4.popupId,\n      variant = _ref4.variant;\n  return _ref5 = {}, (0, _defineProperty2.default)(_ref5, variant === 'popover' ? 'aria-owns' : 'aria-describedby', isOpen ? popupId : null), (0, _defineProperty2.default)(_ref5, 'aria-haspopup', true), (0, _defineProperty2.default)(_ref5, \"onClick\", toggle), _ref5;\n}\n/**\n * Creates props for a component that opens the popup while hovered.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindHover(_ref6) {\n  var _ref7;\n\n  var isOpen = _ref6.isOpen,\n      open = _ref6.open,\n      onMouseLeave = _ref6.onMouseLeave,\n      popupId = _ref6.popupId,\n      variant = _ref6.variant;\n  return _ref7 = {}, (0, _defineProperty2.default)(_ref7, variant === 'popover' ? 'aria-owns' : 'aria-describedby', isOpen ? popupId : null), (0, _defineProperty2.default)(_ref7, 'aria-haspopup', true), (0, _defineProperty2.default)(_ref7, \"onMouseEnter\", open), (0, _defineProperty2.default)(_ref7, \"onMouseLeave\", onMouseLeave), _ref7;\n}\n/**\n * Creates props for a `Popover` component.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindPopover(_ref8) {\n  var isOpen = _ref8.isOpen,\n      anchorEl = _ref8.anchorEl,\n      close = _ref8.close,\n      popupId = _ref8.popupId,\n      onMouseLeave = _ref8.onMouseLeave;\n  return {\n    id: popupId,\n    anchorEl: anchorEl,\n    open: isOpen,\n    onClose: close,\n    onMouseLeave: onMouseLeave\n  };\n}\n/**\n * Creates props for a `Menu` component.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nvar bindMenu = bindPopover;\n/**\n * Creates props for a `Popper` component.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\nexports.bindMenu = bindMenu;\n\nfunction bindPopper(_ref9) {\n  var isOpen = _ref9.isOpen,\n      anchorEl = _ref9.anchorEl,\n      popupId = _ref9.popupId;\n  return {\n    id: popupId,\n    anchorEl: anchorEl,\n    open: isOpen\n  };\n}\n\nfunction getPopup(_ref10) {\n  var popupId = _ref10.popupId;\n  return popupId && typeof document !== 'undefined' ? document.getElementById(popupId) // eslint-disable-line no-undef\n  : null;\n}\n\nfunction isElementInPopup(element, popupState) {\n  var anchorEl = popupState.anchorEl,\n      _childPopupState = popupState._childPopupState;\n  return isAncestor(anchorEl, element) || isAncestor(getPopup(popupState), element) || _childPopupState != null && isElementInPopup(element, _childPopupState);\n}\n\nfunction isAncestor(parent, child) {\n  if (!parent) return false;\n\n  while (child) {\n    if (child === parent) return true;\n    child = child.parentElement;\n  }\n\n  return false;\n}","map":null,"metadata":{},"sourceType":"script"}