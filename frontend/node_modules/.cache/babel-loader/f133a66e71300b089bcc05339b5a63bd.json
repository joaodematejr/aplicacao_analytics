{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/legend-options.js\";\nimport React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\nvar data = {\n  labels: ['Red', 'Green', 'Yellow'],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n  }]\n};\nvar legendOpts = {\n  display: true,\n  position: 'top',\n  fullWidth: true,\n  reverse: false,\n  labels: {\n    fontColor: 'rgb(255, 99, 132)'\n  }\n};\n\nvar LegendExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LegendExample, _Component);\n\n  function LegendExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LegendExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LegendExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      legend: legendOpts\n    };\n    return _this;\n  }\n\n  _createClass(LegendExample, [{\n    key: \"applyLegendSettings\",\n    value: function applyLegendSettings() {\n      var value = this.legendOptsInput.value;\n\n      try {\n        var opts = JSON.parse(value);\n        this.setState({\n          legend: opts\n        });\n      } catch (e) {\n        alert(e.message);\n        throw Error(e);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"flex flex-col items-center w-full max-w-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Legend Options Example\"), React.createElement(\"textarea\", {\n        cols: \"40\",\n        rows: \"15\",\n        ref: function ref(input) {\n          _this2.legendOptsInput = input;\n        },\n        defaultValue: JSON.stringify(this.state.legend, null, 2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.applyLegendSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Apply legend settings\")), React.createElement(Pie, {\n        data: data,\n        legend: this.state.legend,\n        redraw: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LegendExample;\n}(Component);\n\nexport default LegendExample;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/legend-options.js"],"names":["React","Component","Pie","data","labels","datasets","backgroundColor","hoverBackgroundColor","legendOpts","display","position","fullWidth","reverse","fontColor","LegendExample","state","legend","value","legendOptsInput","opts","JSON","parse","setState","e","alert","message","Error","input","stringify","applyLegendSettings"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AAEA,IAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAI,CACN,KADM,EAEN,OAFM,EAGN,QAHM,CADD;AAMTC,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,IAAI,EAAkB,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CAD1B;AAEIG,IAAAA,eAAe,EAAO,CAClB,SADkB,EAElB,SAFkB,EAGlB,SAHkB,CAF1B;AAOIC,IAAAA,oBAAoB,EAAE,CAClB,SADkB,EAElB,SAFkB,EAGlB,SAHkB;AAP1B,GADM;AAND,CAAb;AAuBA,IAAMC,UAAU,GAAG;AACfC,EAAAA,OAAO,EAAI,IADI;AAEfC,EAAAA,QAAQ,EAAG,KAFI;AAGfC,EAAAA,SAAS,EAAE,IAHI;AAIfC,EAAAA,OAAO,EAAI,KAJI;AAKfR,EAAAA,MAAM,EAAK;AACPS,IAAAA,SAAS,EAAE;AADJ;AALI,CAAnB;;IAUMC,a;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAER;AADJ,K;;;;;;0CAKR;AAAA,UACWS,KADX,GACoB,KAAKC,eADzB,CACWD,KADX;;AAGI,UACA;AACI,YAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAb;AACA,aAAKK,QAAL,CAAc;AACVN,UAAAA,MAAM,EAAEG;AADE,SAAd;AAGH,OAND,CAME,OAAQI,CAAR,EACF;AACIC,QAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACA,cAAMC,KAAK,CAACH,CAAD,CAAX;AACH;AACJ;;;6BAGD;AAAA;;AACI,aACI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AACI,QAAA,IAAI,EAAC,IADT;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,GAAG,EAAE,aAAAI,KAAK,EAAI;AACV,UAAA,MAAI,CAACT,eAAL,GAAuBS,KAAvB;AACH,SALL;AAMI,QAAA,YAAY,EAAEP,IAAI,CAACQ,SAAL,CAAe,KAAKb,KAAL,CAAWC,MAA1B,EAAkC,IAAlC,EAAwC,CAAxC,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKa,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAVJ,EAaI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE1B,IAAX;AAAiB,QAAA,MAAM,EAAE,KAAKY,KAAL,CAAWC,MAApC;AAA4C,QAAA,MAAM,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CADJ;AAiBH;;;;EA1CuBf,S;;AA6C5B,eAAea,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nconst data = {\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow'\n    ],\n    datasets: [\n        {\n            data                : [300, 50, 100],\n            backgroundColor     : [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n    ]\n};\n\nconst legendOpts = {\n    display  : true,\n    position : 'top',\n    fullWidth: true,\n    reverse  : false,\n    labels   : {\n        fontColor: 'rgb(255, 99, 132)'\n    }\n};\n\nclass LegendExample extends Component {\n\n    state = {\n        legend: legendOpts\n    };\n\n    applyLegendSettings()\n    {\n        const {value} = this.legendOptsInput;\n\n        try\n        {\n            const opts = JSON.parse(value);\n            this.setState({\n                legend: opts\n            });\n        } catch ( e )\n        {\n            alert(e.message);\n            throw Error(e);\n        }\n    }\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Legend Options Example</h2>\n                <textarea\n                    cols=\"40\"\n                    rows=\"15\"\n                    ref={input => {\n                        this.legendOptsInput = input;\n                    }}\n                    defaultValue={JSON.stringify(this.state.legend, null, 2)}\n                />\n                <div>\n                    <button onClick={this.applyLegendSettings}>Apply legend settings</button>\n                </div>\n                <Pie data={data} legend={this.state.legend} redraw/>\n            </div>\n        );\n    }\n}\n\nexport default LegendExample\n"]},"metadata":{},"sourceType":"module"}