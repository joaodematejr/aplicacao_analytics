{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/selects/MultipleSelect.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: theme.spacing.unit / 4\n    },\n    noLabel: {\n      marginTop: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nvar names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n\nfunction getStyles(name, that) {\n  return {\n    fontWeight: that.state.name.indexOf(name) === -1 ? that.props.theme.typography.fontWeightRegular : that.props.theme.typography.fontWeightMedium\n  };\n}\n\nvar MultipleSelect =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MultipleSelect, _React$Component);\n\n  function MultipleSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MultipleSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MultipleSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: []\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleChangeMultiple = function (event) {\n      var options = event.target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n\n      _this.setState({\n        name: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MultipleSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.name,\n        onChange: this.handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }),\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: getStyles(name, _this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Tag\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.name,\n        onChange: this.handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.state.name.indexOf(name) > -1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      }))), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Chip\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.name,\n        onChange: this.handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            className: classes.chips,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              className: classes.chip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: getStyles(name, _this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(FormControl, {\n        className: classNames(classes.formControl, classes.noLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: this.state.name,\n        onChange: this.handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-placeholder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          if (selected.length === 0) {\n            return React.createElement(\"em\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }, \"Placeholder\");\n          }\n\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        disabled: true,\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Placeholder\")), names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: getStyles(name, _this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        shrink: true,\n        htmlFor: \"select-multiple-native\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Native\"), React.createElement(Select, {\n        multiple: true,\n        native: true,\n        value: this.state.name,\n        onChange: this.handleChangeMultiple,\n        inputProps: {\n          id: 'select-multiple-native'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(\"option\", {\n          key: name,\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, name);\n      }))));\n    }\n  }]);\n\n  return MultipleSelect;\n}(React.Component);\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MultipleSelect);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/selects/MultipleSelect.js"],"names":["React","PropTypes","classNames","withStyles","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","maxWidth","chips","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","that","fontWeight","state","indexOf","props","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","handleChange","event","setState","target","value","handleChangeMultiple","options","i","l","length","selected","push","classes","map","join","id","Component","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, that) {\n  return {\n    fontWeight:\n      that.state.name.indexOf(name) === -1\n        ? that.props.theme.typography.fontWeightRegular\n        : that.props.theme.typography.fontWeightMedium,\n  };\n}\n\nclass MultipleSelect extends React.Component {\n  state = {\n    name: [],\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleChangeMultiple = event => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState({\n      name: value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple\" />}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name} style={getStyles(name, this)}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-checkbox\" />}\n            renderValue={selected => selected.join(', ')}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name}>\n                <Checkbox checked={this.state.name.indexOf(name) > -1} />\n                <ListItemText primary={name} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name} style={getStyles(name, this)}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classNames(classes.formControl, classes.noLabel)}>\n          <Select\n            multiple\n            displayEmpty\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-placeholder\" />}\n            renderValue={selected => {\n              if (selected.length === 0) {\n                return <em>Placeholder</em>;\n              }\n\n              return selected.join(', ');\n            }}\n            MenuProps={MenuProps}\n          >\n            <MenuItem disabled value=\"\">\n              <em>Placeholder</em>\n            </MenuItem>\n            {names.map(name => (\n              <MenuItem key={name} value={name} style={getStyles(name, this)}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel shrink htmlFor=\"select-multiple-native\">\n            Native\n          </InputLabel>\n          <Select\n            multiple\n            native\n            value={this.state.name}\n            onChange={this.handleChangeMultiple}\n            inputProps={{\n              id: 'select-multiple-native',\n            }}\n          >\n            {names.map(name => (\n              <option key={name} value={name}>\n                {name}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultipleSelect);\n"]},"metadata":{},"sourceType":"module"}