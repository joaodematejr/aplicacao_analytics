{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/board/BoardList.js\";\nimport React, { Component } from 'react';\nimport { Card, CardContent, CardActions, withStyles } from '@material-ui/core';\nimport { darken } from '@material-ui/core/styles/colorManipulator';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport BoardCard from './BoardCard';\nimport BoardAddCard from './BoardAddCard';\nimport BoardListHeader from './BoardListHeader';\n\nvar styles = function styles(theme) {\n  return {\n    list: {\n      backgroundColor: darken(theme.palette.background.default, theme.palette.type === 'light' ? 0.02 : .4),\n      transitionProperty: 'box-shadow',\n      transitionDuration: theme.transitions.duration.short,\n      transitionTimingFunction: theme.transitions.easing.easeInOut\n    }\n  };\n};\n\nvar BoardList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoardList, _Component);\n\n  function BoardList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BoardList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BoardList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCardAdded = function () {\n      _this.contentScrollEl.scrollTop = _this.contentScrollEl.scrollHeight;\n    };\n\n    return _this;\n  }\n\n  _createClass(BoardList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          list = _this$props.list,\n          index = _this$props.index;\n      return React.createElement(Draggable, {\n        draggableId: list.id,\n        index: index,\n        type: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(Card, {\n          className: classNames(classes.list, \"w-256 sm:w-320 mr-16 sm:mr-24 max-h-full flex flex-col\"),\n          square: true,\n          elevation: snapshot.isDragging ? 3 : 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(BoardListHeader, {\n          list: list,\n          className: \"border-b-1\",\n          handleProps: provided.dragHandleProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          ref: function ref(_ref) {\n            return _this2.contentScrollEl = _ref;\n          },\n          className: \"flex flex-col flex-1 flex-auto h-full min-h-0 w-full p-0 overflow-auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Droppable, {\n          droppableId: list.id,\n          type: \"card\",\n          direction: \"vertical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, function (provided) {\n          return React.createElement(\"div\", {\n            ref: provided.innerRef,\n            className: \"flex flex-col w-full h-full p-16\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, list.idCards.map(function (cardId, index) {\n            return React.createElement(BoardCard, {\n              key: cardId,\n              cardId: cardId,\n              index: index,\n              list: list,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            });\n          }), provided.placeholder);\n        })), React.createElement(CardActions, {\n          className: \"p-0 flex-no-shrink\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(BoardAddCard, {\n          listId: list.id,\n          onCardAdded: _this2.handleCardAdded,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }))));\n      });\n    }\n  }]);\n\n  return BoardList;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(BoardList);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/board/BoardList.js"],"names":["React","Component","Card","CardContent","CardActions","withStyles","darken","Draggable","Droppable","classNames","BoardCard","BoardAddCard","BoardListHeader","styles","theme","list","backgroundColor","palette","background","default","type","transitionProperty","transitionDuration","transitions","duration","short","transitionTimingFunction","easing","easeInOut","BoardList","handleCardAdded","contentScrollEl","scrollTop","scrollHeight","props","classes","index","id","provided","snapshot","innerRef","draggableProps","isDragging","dragHandleProps","ref","idCards","map","cardId","placeholder","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Card, CardContent, CardActions, withStyles} from '@material-ui/core';\nimport {darken} from '@material-ui/core/styles/colorManipulator';\nimport {Draggable, Droppable} from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport BoardCard from './BoardCard';\nimport BoardAddCard from './BoardAddCard';\nimport BoardListHeader from './BoardListHeader';\n\nconst styles = theme => ({\n    list: {\n        backgroundColor         : darken(theme.palette.background.default, theme.palette.type === 'light' ? 0.02 : .4),\n        transitionProperty      : 'box-shadow',\n        transitionDuration      : theme.transitions.duration.short,\n        transitionTimingFunction: theme.transitions.easing.easeInOut\n    }\n});\n\nclass BoardList extends Component {\n\n    handleCardAdded = () => {\n        this.contentScrollEl.scrollTop = this.contentScrollEl.scrollHeight;\n    };\n\n    render()\n    {\n        const {classes, list, index} = this.props;\n        return (\n            <Draggable draggableId={list.id} index={index} type=\"list\">\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                    >\n                        <Card\n                            className={classNames(classes.list, \"w-256 sm:w-320 mr-16 sm:mr-24 max-h-full flex flex-col\")}\n                            square={true}\n                            elevation={snapshot.isDragging ? 3 : 1}\n                        >\n\n                            <BoardListHeader\n                                list={list}\n                                className=\"border-b-1\"\n                                handleProps={provided.dragHandleProps}\n                            />\n\n                            <CardContent\n                                ref={ref => this.contentScrollEl = ref}\n                                className=\"flex flex-col flex-1 flex-auto h-full min-h-0 w-full p-0 overflow-auto\"\n                            >\n                                <Droppable\n                                    droppableId={list.id}\n                                    type=\"card\"\n                                    direction=\"vertical\"\n                                >\n                                    {(provided) => (\n                                        <div ref={provided.innerRef} className=\"flex flex-col w-full h-full p-16\">\n                                            {list.idCards.map((cardId, index) => (\n                                                <BoardCard\n                                                    key={cardId}\n                                                    cardId={cardId}\n                                                    index={index}\n                                                    list={list}\n                                                />\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                            </CardContent>\n\n                            <CardActions className=\"p-0 flex-no-shrink\">\n                                <BoardAddCard listId={list.id} onCardAdded={this.handleCardAdded}/>\n                            </CardActions>\n                        </Card>\n                    </div>\n                )}\n            </Draggable>\n        );\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(BoardList);\n"]},"metadata":{},"sourceType":"module"}