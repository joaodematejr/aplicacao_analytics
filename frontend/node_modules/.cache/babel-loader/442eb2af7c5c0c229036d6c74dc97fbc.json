{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport config from './firebaseServiceConfig';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar firebaseService =\n/*#__PURE__*/\nfunction () {\n  function firebaseService() {\n    var _this = this;\n\n    _classCallCheck(this, firebaseService);\n\n    this.getUserData = function (userId) {\n      if (!firebase.apps.length) {\n        return;\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.db.ref(\"users/\".concat(userId)).once('value').then(function (snapshot) {\n          var user = snapshot.val();\n          resolve(user);\n        });\n      });\n    };\n\n    this.updateUserData = function (user) {\n      if (!firebase.apps.length) {\n        return;\n      }\n\n      return _this.db.ref(\"users/\".concat(user.uid)).set(user);\n    };\n\n    this.onAuthStateChanged = function (callback) {\n      if (!_this.auth) {\n        return;\n      }\n\n      _this.auth.onAuthStateChanged(callback);\n    };\n\n    this.signOut = function () {\n      if (!_this.auth) {\n        return;\n      }\n\n      _this.auth.signOut();\n    };\n  }\n\n  _createClass(firebaseService, [{\n    key: \"init\",\n    value: function init() {\n      if (firebase.apps.length) {\n        return;\n      }\n\n      firebase.initializeApp(config);\n      this.db = firebase.database();\n      this.auth = firebase.auth();\n    }\n  }]);\n\n  return firebaseService;\n}();\n\nvar instance = new firebaseService();\nexport default instance;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/services/firebaseService/firebaseService.js"],"names":["config","firebase","firebaseService","getUserData","userId","apps","length","Promise","resolve","reject","db","ref","once","then","snapshot","user","val","updateUserData","uid","set","onAuthStateChanged","callback","auth","signOut","initializeApp","database","instance"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;;IAEMC,e;;;;;;;;SAaFC,W,GAAc,UAACC,MAAD,EAAY;AACtB,UAAK,CAACH,QAAQ,CAACI,IAAT,CAAcC,MAApB,EACA;AACI;AACH;;AACD,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAA,KAAI,CAACC,EAAL,CAAQC,GAAR,iBAAqBP,MAArB,GACKQ,IADL,CACU,OADV,EAEKC,IAFL,CAEU,UAACC,QAAD,EAAc;AAChB,cAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAR,UAAAA,OAAO,CAACO,IAAD,CAAP;AACH,SALL;AAMH,OAPM,CAAP;AAQH,K;;SAEDE,c,GAAiB,UAACF,IAAD,EAAU;AACvB,UAAK,CAACd,QAAQ,CAACI,IAAT,CAAcC,MAApB,EACA;AACI;AACH;;AACD,aAAO,KAAI,CAACI,EAAL,CAAQC,GAAR,iBAAqBI,IAAI,CAACG,GAA1B,GACFC,GADE,CACEJ,IADF,CAAP;AAEH,K;;SAEDK,kB,GAAqB,UAACC,QAAD,EAAc;AAC/B,UAAK,CAAC,KAAI,CAACC,IAAX,EACA;AACI;AACH;;AACD,MAAA,KAAI,CAACA,IAAL,CAAUF,kBAAV,CAA6BC,QAA7B;AACH,K;;SAEDE,O,GAAU,YAAM;AACZ,UAAK,CAAC,KAAI,CAACD,IAAX,EACA;AACI;AACH;;AACD,MAAA,KAAI,CAACA,IAAL,CAAUC,OAAV;AACH,K;;;;;2BAhDD;AACI,UAAKtB,QAAQ,CAACI,IAAT,CAAcC,MAAnB,EACA;AACI;AACH;;AACDL,MAAAA,QAAQ,CAACuB,aAAT,CAAuBxB,MAAvB;AACA,WAAKU,EAAL,GAAUT,QAAQ,CAACwB,QAAT,EAAV;AACA,WAAKH,IAAL,GAAYrB,QAAQ,CAACqB,IAAT,EAAZ;AACH;;;;;;AA2CL,IAAMI,QAAQ,GAAG,IAAIxB,eAAJ,EAAjB;AAEA,eAAewB,QAAf","sourcesContent":["import config from './firebaseServiceConfig';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nclass firebaseService {\n\n    init()\n    {\n        if ( firebase.apps.length )\n        {\n            return;\n        }\n        firebase.initializeApp(config);\n        this.db = firebase.database();\n        this.auth = firebase.auth();\n    }\n\n    getUserData = (userId) => {\n        if ( !firebase.apps.length )\n        {\n            return;\n        }\n        return new Promise((resolve, reject) => {\n            this.db.ref(`users/${userId}`)\n                .once('value')\n                .then((snapshot) => {\n                    const user = snapshot.val();\n                    resolve(user);\n                });\n        });\n    };\n\n    updateUserData = (user) => {\n        if ( !firebase.apps.length )\n        {\n            return;\n        }\n        return this.db.ref(`users/${user.uid}`)\n            .set(user);\n    };\n\n    onAuthStateChanged = (callback) => {\n        if ( !this.auth )\n        {\n            return;\n        }\n        this.auth.onAuthStateChanged(callback);\n    };\n\n    signOut = () => {\n        if ( !this.auth )\n        {\n            return;\n        }\n        this.auth.signOut();\n    }\n}\n\nconst instance = new firebaseService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}