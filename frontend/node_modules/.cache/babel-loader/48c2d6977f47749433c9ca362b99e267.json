{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/@fuse/components/formsy/CheckboxFormsy.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\nimport { withFormsy } from 'formsy-react';\nimport _ from '@lodash';\n\nvar CheckboxFormsy =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckboxFormsy, _Component);\n\n  function CheckboxFormsy() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckboxFormsy);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckboxFormsy)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.changeValue = function (event) {\n      _this.props.setValue(event.target.checked);\n\n      if (_this.props.onChange) {\n        _this.props.onChange(event);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxFormsy, [{\n    key: \"render\",\n    value: function render() {\n      var importedProps = _.pick(this.props, ['checkedIcon', 'classes', 'color', 'disabled', 'disableRipple', 'icon', 'id', 'indeterminate', 'indeterminateIcon', 'inputProps', 'inputRef', 'onChange', 'variant']); // An error message is returned only if the component is invalid\n\n\n      var errorMessage = this.props.getErrorMessage();\n      var value = this.props.getValue();\n      return React.createElement(FormControl, {\n        error: Boolean(errorMessage),\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, Object.assign({}, importedProps, {\n          type: \"checkbox\",\n          checked: value,\n          onChange: this.changeValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        })),\n        label: this.props.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), Boolean(errorMessage) && React.createElement(FormHelperText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, errorMessage));\n    }\n  }]);\n\n  return CheckboxFormsy;\n}(Component);\n\nexport default withFormsy(CheckboxFormsy);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/@fuse/components/formsy/CheckboxFormsy.js"],"names":["React","Component","Checkbox","FormControl","FormControlLabel","FormHelperText","withFormsy","_","CheckboxFormsy","changeValue","event","props","setValue","target","checked","onChange","importedProps","pick","errorMessage","getErrorMessage","value","getValue","Boolean","className","label"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,gBAA/B,EAAiDC,cAAjD,QAAsE,mBAAtE;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,CAAP,MAAc,SAAd;;IAEMC,c;;;;;;;;;;;;;;;;;;UAEFC,W,GAAc,UAACC,KAAD,EAAW;AACrB,YAAKC,KAAL,CAAWC,QAAX,CAAoBF,KAAK,CAACG,MAAN,CAAaC,OAAjC;;AACA,UAAK,MAAKH,KAAL,CAAWI,QAAhB,EACA;AACI,cAAKJ,KAAL,CAAWI,QAAX,CAAoBL,KAApB;AACH;AACJ,K;;;;;;;6BAGD;AACI,UAAMM,aAAa,GAAGT,CAAC,CAACU,IAAF,CAAO,KAAKN,KAAZ,EAAmB,CACrC,aADqC,EAErC,SAFqC,EAGrC,OAHqC,EAIrC,UAJqC,EAKrC,eALqC,EAMrC,MANqC,EAOrC,IAPqC,EAQrC,eARqC,EASrC,mBATqC,EAUrC,YAVqC,EAWrC,UAXqC,EAYrC,UAZqC,EAarC,SAbqC,CAAnB,CAAtB,CADJ,CAiBI;;;AACA,UAAMO,YAAY,GAAG,KAAKP,KAAL,CAAWQ,eAAX,EAArB;AACA,UAAMC,KAAK,GAAG,KAAKT,KAAL,CAAWU,QAAX,EAAd;AACA,aACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEC,OAAO,CAACJ,YAAD,CAA3B;AAA2C,QAAA,SAAS,EAAE,KAAKP,KAAL,CAAWY,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EACH,oBAAC,QAAD,oBACQP,aADR;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,OAAO,EAAEI,KAHb;AAII,UAAA,QAAQ,EAAE,KAAKX,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFR;AASI,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWa,KATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAYKF,OAAO,CAACJ,YAAD,CAAP,IACG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,YAAjB,CAbR,CADJ;AAkBH;;;;EAjDwBjB,S;;AAoD7B,eAAeK,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\nimport {Checkbox, FormControl, FormControlLabel, FormHelperText} from '@material-ui/core';\nimport {withFormsy} from 'formsy-react';\nimport _ from '@lodash';\n\nclass CheckboxFormsy extends Component {\n\n    changeValue = (event) => {\n        this.props.setValue(event.target.checked);\n        if ( this.props.onChange )\n        {\n            this.props.onChange(event);\n        }\n    };\n\n    render()\n    {\n        const importedProps = _.pick(this.props, [\n            'checkedIcon',\n            'classes',\n            'color',\n            'disabled',\n            'disableRipple',\n            'icon',\n            'id',\n            'indeterminate',\n            'indeterminateIcon',\n            'inputProps',\n            'inputRef',\n            'onChange',\n            'variant'\n        ]);\n\n        // An error message is returned only if the component is invalid\n        const errorMessage = this.props.getErrorMessage();\n        const value = this.props.getValue();\n        return (\n            <FormControl error={Boolean(errorMessage)} className={this.props.className}>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            {...importedProps}\n                            type='checkbox'\n                            checked={value}\n                            onChange={this.changeValue}\n                        />\n                    }\n                    label={this.props.label}\n                />\n                {Boolean(errorMessage) && (\n                    <FormHelperText>{errorMessage}</FormHelperText>\n                )}\n            </FormControl>\n        );\n    }\n}\n\nexport default withFormsy(CheckboxFormsy);\n"]},"metadata":{},"sourceType":"module"}