{"ast":null,"code":"import _defineProperty from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/autocomplete/IntegrationAutosuggest.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInputComponent(inputProps) {\n  var classes = inputProps.classes,\n      _inputProps$inputRef = inputProps.inputRef,\n      _inputRef = _inputProps$inputRef === void 0 ? function () {} : _inputProps$inputRef,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    InputProps: {\n      inputRef: function inputRef(node) {\n        ref(node);\n\n        _inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(suggestion, _ref) {\n  var query = _ref.query,\n      isHighlighted = _ref.isHighlighted;\n  var matches = match(suggestion.label, query);\n  var parts = parse(suggestion.label, matches);\n  return React.createElement(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, parts.map(function (part, index) {\n    return part.highlight ? React.createElement(\"span\", {\n      key: String(index),\n      style: {\n        fontWeight: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, part.text) : React.createElement(\"strong\", {\n      key: String(index),\n      style: {\n        fontWeight: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, part.text);\n  })));\n}\n\nfunction getSuggestions(value) {\n  var inputValue = deburr(value.trim()).toLowerCase();\n  var inputLength = inputValue.length;\n  var count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(function (suggestion) {\n    var keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: 250,\n      flexGrow: 1\n    },\n    container: {\n      position: 'relative'\n    },\n    suggestionsContainerOpen: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing.unit,\n      left: 0,\n      right: 0\n    },\n    suggestion: {\n      display: 'block'\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    },\n    divider: {\n      height: theme.spacing.unit * 2\n    }\n  };\n};\n\nvar IntegrationAutosuggest =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IntegrationAutosuggest, _React$Component);\n\n  function IntegrationAutosuggest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IntegrationAutosuggest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IntegrationAutosuggest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      single: '',\n      popper: '',\n      suggestions: []\n    };\n\n    _this.handleSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    _this.handleSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event, _ref3) {\n        var newValue = _ref3.newValue;\n\n        _this.setState(_defineProperty({}, name, newValue));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(IntegrationAutosuggest, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var autosuggestProps = {\n        renderInputComponent: renderInputComponent,\n        suggestions: this.state.suggestions,\n        onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion\n      };\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n        inputProps: {\n          classes: classes,\n          placeholder: 'Search a country (start with a)',\n          value: this.state.single,\n          onChange: this.handleChange('single')\n        },\n        theme: {\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        },\n        renderSuggestionsContainer: function renderSuggestionsContainer(options) {\n          return React.createElement(Paper, Object.assign({}, options.containerProps, {\n            square: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }), options.children);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n        inputProps: {\n          classes: classes,\n          label: 'Label',\n          placeholder: 'With Popper',\n          value: this.state.popper,\n          onChange: this.handleChange('popper'),\n          inputRef: function inputRef(node) {\n            _this2.popperNode = node;\n          },\n          InputLabelProps: {\n            shrink: true\n          }\n        },\n        theme: {\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        },\n        renderSuggestionsContainer: function renderSuggestionsContainer(options) {\n          return React.createElement(Popper, {\n            anchorEl: _this2.popperNode,\n            open: Boolean(options.children),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, React.createElement(Paper, Object.assign({\n            square: true\n          }, options.containerProps, {\n            style: {\n              width: _this2.popperNode ? _this2.popperNode.clientWidth : null\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }), options.children));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return IntegrationAutosuggest;\n}(React.Component);\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(IntegrationAutosuggest);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/autocomplete/IntegrationAutosuggest.js"],"names":["React","PropTypes","deburr","Autosuggest","match","parse","TextField","Paper","MenuItem","Popper","withStyles","suggestions","label","renderInputComponent","inputProps","classes","inputRef","ref","other","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","index","highlight","String","fontWeight","text","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","getSuggestionValue","styles","theme","root","height","flexGrow","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","left","right","display","suggestionsList","margin","padding","listStyleType","divider","IntegrationAutosuggest","state","single","popper","handleSuggestionsFetchRequested","setState","handleSuggestionsClearRequested","handleChange","name","event","newValue","props","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","placeholder","onChange","options","containerProps","children","popperNode","InputLabelProps","shrink","Boolean","width","clientWidth","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) =>\n          part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          ),\n        )}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst styles = theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    single: '',\n    popper: '',\n    suggestions: [],\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      getSuggestionValue,\n      renderSuggestion,\n    };\n\n    return (\n      <div className={classes.root}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            placeholder: 'Search a country (start with a)',\n            value: this.state.single,\n            onChange: this.handleChange('single'),\n          }}\n          theme={{\n            container: classes.container,\n            suggestionsContainerOpen: classes.suggestionsContainerOpen,\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n        <div className={classes.divider} />\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            label: 'Label',\n            placeholder: 'With Popper',\n            value: this.state.popper,\n            onChange: this.handleChange('popper'),\n            inputRef: node => {\n              this.popperNode = node;\n            },\n            InputLabelProps: {\n              shrink: true,\n            },\n          }}\n          theme={{\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n              <Paper\n                square\n                {...options.containerProps}\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n              >\n                {options.children}\n              </Paper>\n            </Popper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n"]},"metadata":{},"sourceType":"module"}