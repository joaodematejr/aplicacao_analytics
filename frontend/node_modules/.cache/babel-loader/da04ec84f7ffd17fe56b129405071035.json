{"ast":null,"code":"import axios from 'axios';\nimport { showMessage } from 'app/store/actions/fuse';\nexport var OPEN_CARD_DIALOG = '[SCRUMBOARD APP] OPEN CARD DIALOG';\nexport var CLOSE_CARD_DIALOG = '[SCRUMBOARD APP] CLOSE CARD DIALOG';\nexport var UPDATE_CARD = '[SCRUMBOARD APP] UPDATE CARD';\nexport var CHANGE_CARD = '[SCRUMBOARD APP] CHANGE CARD';\nexport var REMOVE_CARD = '[SCRUMBOARD APP] REMOVE CARD';\nexport var CHIP_CHANGE_CARD = '[SCRUMBOARD APP] CHIP CHANGED CARD';\nexport var NEW_CHIP_CARD = '[SCRUMBOARD APP] NEW CHIP CARD';\nexport var MAKE_COVER_CARD = '[SCRUMBOARD APP] MAKE COVER CARD';\nexport var REMOVE_COVER_CARD = '[SCRUMBOARD APP] REMOVE COVER CARD';\nexport var REMOVE_ATTACHMENT_CARD = '[SCRUMBOARD APP] REMOVE ATTACHMENT CARD';\nexport var REMOVE_DUE_CARD = '[SCRUMBOARD APP] REMOVE DUE CARD';\nexport var TOGGLE_LABEL_CARD = '[SCRUMBOARD APP] TOGGLE LABEL CARD';\nexport var TOGGLE_MEMBER_CARD = '[SCRUMBOARD APP] TOGGLE MEMBER CARD';\nexport var ADD_CHECKLIST_CARD = '[SCRUMBOARD APP] ADD CHECKLIST CARD';\nexport var CHECKLIST_CHANGE_CARD = '[SCRUMBOARD APP] CHECKLIST CHANGE CARD';\nexport var CHECKLIST_REMOVE_CARD = '[SCRUMBOARD APP] CHECKLIST REMOVE CARD';\nexport var COMMENT_ADD_CARD = '[SCRUMBOARD APP] COMMENT ADD CARD';\nexport function openCardDialog(data) {\n  return {\n    type: OPEN_CARD_DIALOG,\n    payload: data\n  };\n}\nexport function closeCardDialog() {\n  return {\n    type: CLOSE_CARD_DIALOG\n  };\n}\nexport function updateCard(boardId, card) {\n  return function (dispatch) {\n    var request = axios.post('/api/scrumboard-app/card/update', {\n      boardId: boardId,\n      card: card\n    });\n    return request.then(function (response) {\n      dispatch(showMessage({\n        message: 'Card Saved',\n        autoHideDuration: 2000,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        }\n      }));\n      return dispatch({\n        type: UPDATE_CARD,\n        payload: card\n      });\n    });\n  };\n}\nexport function removeCard(boardId, cardId) {\n  return function (dispatch) {\n    var request = axios.post('/api/scrumboard-app/card/remove', {\n      boardId: boardId,\n      cardId: cardId\n    });\n    return request.then(function (response) {\n      return dispatch({\n        type: REMOVE_CARD,\n        boardId: boardId,\n        cardId: cardId\n      });\n    });\n  };\n}\nexport function handleChange(event) {\n  return {\n    type: CHANGE_CARD,\n    target: event.target\n  };\n}\nexport function chipChange(name, value) {\n  return {\n    type: CHIP_CHANGE_CARD,\n    name: name,\n    value: value\n  };\n}\nexport function addNewChip(name, value) {\n  return {\n    type: NEW_CHIP_CARD,\n    name: name,\n    value: value\n  };\n}\nexport function makeCover(attachmentId) {\n  return {\n    type: MAKE_COVER_CARD,\n    attachmentId: attachmentId\n  };\n}\nexport function removeCover() {\n  return {\n    type: REMOVE_COVER_CARD\n  };\n}\nexport function removeAttachment(attachmentId) {\n  return {\n    type: REMOVE_ATTACHMENT_CARD,\n    attachmentId: attachmentId\n  };\n}\nexport function removeDue() {\n  return {\n    type: REMOVE_DUE_CARD\n  };\n}\nexport function toggleLabel(labelId) {\n  return {\n    type: TOGGLE_LABEL_CARD,\n    labelId: labelId\n  };\n}\nexport function toggleMember(memberId) {\n  return {\n    type: TOGGLE_MEMBER_CARD,\n    memberId: memberId\n  };\n}\nexport function addCheckList(newList) {\n  return {\n    type: ADD_CHECKLIST_CARD,\n    newList: newList\n  };\n}\nexport function checkListChange(item) {\n  return {\n    type: CHECKLIST_CHANGE_CARD,\n    item: item\n  };\n}\nexport function removeCheckList(id) {\n  return {\n    type: CHECKLIST_REMOVE_CARD,\n    id: id\n  };\n}\nexport function commentAdd(comment) {\n  return {\n    type: COMMENT_ADD_CARD,\n    comment: comment\n  };\n}","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/store/actions/card.actions.js"],"names":["axios","showMessage","OPEN_CARD_DIALOG","CLOSE_CARD_DIALOG","UPDATE_CARD","CHANGE_CARD","REMOVE_CARD","CHIP_CHANGE_CARD","NEW_CHIP_CARD","MAKE_COVER_CARD","REMOVE_COVER_CARD","REMOVE_ATTACHMENT_CARD","REMOVE_DUE_CARD","TOGGLE_LABEL_CARD","TOGGLE_MEMBER_CARD","ADD_CHECKLIST_CARD","CHECKLIST_CHANGE_CARD","CHECKLIST_REMOVE_CARD","COMMENT_ADD_CARD","openCardDialog","data","type","payload","closeCardDialog","updateCard","boardId","card","dispatch","request","post","then","response","message","autoHideDuration","anchorOrigin","vertical","horizontal","removeCard","cardId","handleChange","event","target","chipChange","name","value","addNewChip","makeCover","attachmentId","removeCover","removeAttachment","removeDue","toggleLabel","labelId","toggleMember","memberId","addCheckList","newList","checkListChange","item","removeCheckList","id","commentAdd","comment"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {showMessage} from 'app/store/actions/fuse';\n\nexport const OPEN_CARD_DIALOG = '[SCRUMBOARD APP] OPEN CARD DIALOG';\nexport const CLOSE_CARD_DIALOG = '[SCRUMBOARD APP] CLOSE CARD DIALOG';\nexport const UPDATE_CARD = '[SCRUMBOARD APP] UPDATE CARD';\nexport const CHANGE_CARD = '[SCRUMBOARD APP] CHANGE CARD';\nexport const REMOVE_CARD = '[SCRUMBOARD APP] REMOVE CARD';\nexport const CHIP_CHANGE_CARD = '[SCRUMBOARD APP] CHIP CHANGED CARD';\nexport const NEW_CHIP_CARD = '[SCRUMBOARD APP] NEW CHIP CARD';\nexport const MAKE_COVER_CARD = '[SCRUMBOARD APP] MAKE COVER CARD';\nexport const REMOVE_COVER_CARD = '[SCRUMBOARD APP] REMOVE COVER CARD';\nexport const REMOVE_ATTACHMENT_CARD = '[SCRUMBOARD APP] REMOVE ATTACHMENT CARD';\nexport const REMOVE_DUE_CARD = '[SCRUMBOARD APP] REMOVE DUE CARD';\nexport const TOGGLE_LABEL_CARD = '[SCRUMBOARD APP] TOGGLE LABEL CARD';\nexport const TOGGLE_MEMBER_CARD = '[SCRUMBOARD APP] TOGGLE MEMBER CARD';\nexport const ADD_CHECKLIST_CARD = '[SCRUMBOARD APP] ADD CHECKLIST CARD';\nexport const CHECKLIST_CHANGE_CARD = '[SCRUMBOARD APP] CHECKLIST CHANGE CARD';\nexport const CHECKLIST_REMOVE_CARD = '[SCRUMBOARD APP] CHECKLIST REMOVE CARD';\nexport const COMMENT_ADD_CARD = '[SCRUMBOARD APP] COMMENT ADD CARD';\n\nexport function openCardDialog(data)\n{\n    return {\n        type   : OPEN_CARD_DIALOG,\n        payload: data\n    }\n}\n\nexport function closeCardDialog()\n{\n    return {\n        type: CLOSE_CARD_DIALOG\n    }\n}\n\nexport function updateCard(boardId, card)\n{\n    return (dispatch) => {\n        const request = axios.post('/api/scrumboard-app/card/update', {\n            boardId,\n            card\n        });\n\n        return request.then((response) => {\n            dispatch(showMessage({\n                message         : 'Card Saved',\n                autoHideDuration: 2000,\n                anchorOrigin    : {\n                    vertical  : 'top',\n                    horizontal: 'right'\n                }\n            }));\n\n            return dispatch({\n                type   : UPDATE_CARD,\n                payload: card\n            })\n        });\n    }\n}\n\nexport function removeCard(boardId, cardId)\n{\n    return (dispatch) => {\n        const request = axios.post('/api/scrumboard-app/card/remove', {\n            boardId,\n            cardId\n        });\n\n        return request.then((response) =>\n            dispatch({\n                type: REMOVE_CARD,\n                boardId,\n                cardId\n            })\n        );\n    };\n}\n\nexport function handleChange(event)\n{\n    return {\n        type  : CHANGE_CARD,\n        target: event.target\n    };\n}\n\nexport function chipChange(name, value)\n{\n    return {\n        type: CHIP_CHANGE_CARD,\n        name,\n        value\n    };\n}\n\nexport function addNewChip(name, value)\n{\n    return {\n        type: NEW_CHIP_CARD,\n        name,\n        value\n    };\n}\n\nexport function makeCover(attachmentId)\n{\n    return {\n        type: MAKE_COVER_CARD,\n        attachmentId\n    };\n}\n\nexport function removeCover()\n{\n    return {\n        type: REMOVE_COVER_CARD\n    };\n}\n\nexport function removeAttachment(attachmentId)\n{\n    return {\n        type: REMOVE_ATTACHMENT_CARD,\n        attachmentId\n    };\n}\n\nexport function removeDue()\n{\n    return {\n        type: REMOVE_DUE_CARD\n    };\n}\n\nexport function toggleLabel(labelId)\n{\n    return {\n        type: TOGGLE_LABEL_CARD,\n        labelId\n    };\n}\n\nexport function toggleMember(memberId)\n{\n    return {\n        type: TOGGLE_MEMBER_CARD,\n        memberId\n    };\n}\n\nexport function addCheckList(newList)\n{\n    return {\n        type: ADD_CHECKLIST_CARD,\n        newList\n    };\n}\n\nexport function checkListChange(item)\n{\n    return {\n        type: CHECKLIST_CHANGE_CARD,\n        item\n    };\n}\n\nexport function removeCheckList(id)\n{\n    return {\n        type: CHECKLIST_REMOVE_CARD,\n        id\n    };\n}\n\n\nexport function commentAdd(comment)\n{\n    return {\n        type: COMMENT_ADD_CARD,\n        comment\n    };\n}\n"]},"metadata":{},"sourceType":"module"}