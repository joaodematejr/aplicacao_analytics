{"ast":null,"code":"var _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/NoteListItem.js\";\nimport React from 'react';\nimport { Card, Typography, Icon } from '@material-ui/core';\nimport { FuseAnimate } from '@fuse';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as Actions from './store/actions';\nimport setDescriptionStyle from './setDescriptionStyle';\nimport NoteReminderLabel from './NoteReminderLabel';\nimport NoteLabel from './NoteLabel';\n\nvar NoteListItem = function NoteListItem(_ref) {\n  var className = _ref.className,\n      note = _ref.note,\n      variateDescSize = _ref.variateDescSize,\n      openNoteDialog = _ref.openNoteDialog;\n  return React.createElement(FuseAnimate, {\n    animation: \"transition.fadeIn\",\n    duration: 400,\n    delay: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classNames(\"cursor-pointer\", className),\n    onClick: function onClick() {\n      return openNoteDialog(note.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, note.image && note.image !== \"\" && React.createElement(\"img\", {\n    src: note.image,\n    className: \"w-full block\",\n    alt: \"note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), note.title && note.title !== \"\" && React.createElement(Typography, {\n    className: \"p-16 pb-8 text-14 font-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, note.title), note.description && note.description !== \"\" && React.createElement(Typography, {\n    className: \"py-8 px-16\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(\"w-full break-words\", variateDescSize ? \"font-200\" : \"text-14\"),\n    ref: function ref(el) {\n      setTimeout(function () {\n        return setDescriptionStyle(note.description, el, variateDescSize);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, note.description)), note.checklist && note.checklist.length > 0 && React.createElement(\"ul\", {\n    className: \"py-8 px-16 flex flex-wrap list-reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, note.checklist.map(function (item) {\n    return React.createElement(\"li\", {\n      key: item.id,\n      className: \"flex items-center w-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      color: \"action\",\n      className: \"mr-8 text-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item.checked ? \"check_box_outline\" : \"check_box_outline_blank\"), React.createElement(Typography, {\n      className: classNames(\"truncate\", item.checked && \"line-through\"),\n      color: item.checked ? \"textSecondary\" : \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, item.text));\n  })), (note.labels.length > 0 || note.reminder) && React.createElement(\"div\", {\n    className: \"py-8 px-16 flex flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, note.reminder && React.createElement(NoteReminderLabel, {\n    className: \"mt-4 mr-4\",\n    date: note.reminder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), note.labels.map(function (id) {\n    return React.createElement(NoteLabel, {\n      id: id,\n      key: id,\n      className: \"mt-4 mr-4\",\n      linkable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }))));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openNoteDialog: Actions.openNoteDialog\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(NoteListItem);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/notes/NoteListItem.js"],"names":["React","Card","Typography","Icon","FuseAnimate","bindActionCreators","connect","classNames","Actions","setDescriptionStyle","NoteReminderLabel","NoteLabel","NoteListItem","className","note","variateDescSize","openNoteDialog","id","image","title","description","el","setTimeout","checklist","length","map","item","checked","text","labels","reminder","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,IAA1B,QAAqC,mBAArC;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAwD;AAAA,MAAtDC,SAAsD,QAAtDA,SAAsD;AAAA,MAA3CC,IAA2C,QAA3CA,IAA2C;AAAA,MAArCC,eAAqC,QAArCA,eAAqC;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;AAEzE,SACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,mBAAvB;AAA2C,IAAA,QAAQ,EAAE,GAArD;AAA0D,IAAA,KAAK,EAAE,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAET,UAAU,CAAC,gBAAD,EAAmBM,SAAnB,CAA3B;AAA0D,IAAA,OAAO,EAAE;AAAA,aAAMG,cAAc,CAACF,IAAI,CAACG,EAAN,CAApB;AAAA,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACI,KAAL,KAAe,EAA7B,IACG;AAAK,IAAA,GAAG,EAAEJ,IAAI,CAACI,KAAf;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,GAAG,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EAKKJ,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACK,KAAL,KAAe,EAA7B,IACG,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,6BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,CAACK,KADV,CANR,EAWKL,IAAI,CAACM,WAAL,IAAoBN,IAAI,CAACM,WAAL,KAAqB,EAAzC,IACG,oBAAC,UAAD;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,SAAS,EAAC,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,SAAS,EAAEb,UAAU,CAAC,oBAAD,EAAuBQ,eAAe,GAAG,UAAH,GAAgB,SAAtD,CADzB;AAEI,IAAA,GAAG,EAAE,aAAAM,EAAE,EAAI;AACPC,MAAAA,UAAU,CAAC;AAAA,eAAMb,mBAAmB,CAACK,IAAI,CAACM,WAAN,EAAmBC,EAAnB,EAAuBN,eAAvB,CAAzB;AAAA,OAAD,CAAV;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,IAAI,CAACM,WALV,CAJJ,CAZR,EA0BKN,IAAI,CAACS,SAAL,IAAkBT,IAAI,CAACS,SAAL,CAAeC,MAAf,GAAwB,CAA1C,IACG;AAAI,IAAA,SAAS,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,IAAI,CAACS,SAAL,CAAeE,GAAf,CAAmB,UAAAC,IAAI;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACT,EAAd;AAAkB,MAAA,SAAS,EAAC,0BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CS,IAAI,CAACC,OAAL,GAAe,mBAAf,GAAqC,yBAApF,CADJ,EAEI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEpB,UAAU,CAAC,UAAD,EAAamB,IAAI,CAACC,OAAL,IAAgB,cAA7B,CADzB;AAEI,MAAA,KAAK,EAAED,IAAI,CAACC,OAAL,GAAe,eAAf,GAAiC,SAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKD,IAAI,CAACE,IAJV,CAFJ,CADoB;AAAA,GAAvB,CADL,CA3BR,EA0CK,CAACd,IAAI,CAACe,MAAL,CAAYL,MAAZ,GAAqB,CAArB,IAA0BV,IAAI,CAACgB,QAAhC,KACG;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,IAAI,CAACgB,QAAL,IACG,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,WAA7B;AAAyC,IAAA,IAAI,EAAEhB,IAAI,CAACgB,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EAIKhB,IAAI,CAACe,MAAL,CAAYJ,GAAZ,CAAgB,UAAAR,EAAE;AAAA,WACf,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAEA,EAAf;AAAmB,MAAA,GAAG,EAAEA,EAAxB;AAA4B,MAAA,SAAS,EAAC,WAAtC;AAAkD,MAAA,QAAQ,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAlB,CAJL,CA3CR,CADJ,CADJ;AAyDH,CA3DD;;AA6DA,SAASc,kBAAT,CAA4BC,QAA5B,EACA;AACI,SAAO3B,kBAAkB,CAAC;AACtBW,IAAAA,cAAc,EAAER,OAAO,CAACQ;AADF,GAAD,EAEtBgB,QAFsB,CAAzB;AAGH;;AAED,eAAe1B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCnB,YAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Card, Typography, Icon} from '@material-ui/core';\nimport {FuseAnimate} from '@fuse';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport * as Actions from './store/actions';\nimport setDescriptionStyle from './setDescriptionStyle';\nimport NoteReminderLabel from './NoteReminderLabel';\nimport NoteLabel from './NoteLabel';\n\nconst NoteListItem = ({className, note, variateDescSize, openNoteDialog}) => {\n\n    return (\n        <FuseAnimate animation=\"transition.fadeIn\" duration={400} delay={100}>\n            <Card className={classNames(\"cursor-pointer\", className)} onClick={() => openNoteDialog(note.id)}>\n                {note.image && note.image !== \"\" && (\n                    <img src={note.image} className=\"w-full block\" alt=\"note\"/>\n                )}\n\n                {note.title && note.title !== \"\" && (\n                    <Typography className=\"p-16 pb-8 text-14 font-bold\">\n                        {note.title}\n                    </Typography>\n                )}\n\n                {note.description && note.description !== \"\" && (\n                    <Typography\n                        className=\"py-8 px-16\"\n                        component=\"div\"\n                    >\n                        <div\n                            className={classNames(\"w-full break-words\", variateDescSize ? \"font-200\" : \"text-14\")}\n                            ref={el => {\n                                setTimeout(() => setDescriptionStyle(note.description, el, variateDescSize));\n                            }}>\n                            {note.description}\n                        </div>\n                    </Typography>\n                )}\n\n                {note.checklist && note.checklist.length > 0 && (\n                    <ul className=\"py-8 px-16 flex flex-wrap list-reset\">\n                        {note.checklist.map(item => (\n                            <li key={item.id} className=\"flex items-center w-full\">\n                                <Icon color=\"action\" className=\"mr-8 text-16\">{item.checked ? \"check_box_outline\" : \"check_box_outline_blank\"}</Icon>\n                                <Typography\n                                    className={classNames(\"truncate\", item.checked && \"line-through\")}\n                                    color={item.checked ? \"textSecondary\" : \"default\"}\n                                >\n                                    {item.text}\n                                </Typography>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {(note.labels.length > 0 || note.reminder) && (\n                    <div className=\"py-8 px-16 flex flex-wrap w-full\">\n                        {note.reminder && (\n                            <NoteReminderLabel className=\"mt-4 mr-4\" date={note.reminder}/>\n                        )}\n                        {note.labels.map(id => (\n                            <NoteLabel id={id} key={id} className=\"mt-4 mr-4\" linkable/>\n                        ))}\n                    </div>\n                )}\n            </Card>\n        </FuseAnimate>\n    );\n};\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        openNoteDialog: Actions.openNoteDialog\n    }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(NoteListItem);\n"]},"metadata":{},"sourceType":"module"}