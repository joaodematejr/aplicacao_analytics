{"ast":null,"code":"import _toConsumableArray from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/chat/ChatsSidebar.js\";\nimport { FuseScrollbars, FuseAnimateGroup, FuseUtils } from '@fuse';\nimport { withStyles, AppBar, Avatar, ListItemIcon, List, ListItem, ListItemText, Menu, MenuItem, Typography, Toolbar, Icon, IconButton, Input, Paper } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from \"moment\";\nimport * as Actions from \"./store/actions\";\nimport StatusIcon from \"./StatusIcon\";\nvar statusArr = [{\n  title: 'Online',\n  value: 'online'\n}, {\n  title: 'Away',\n  value: 'away'\n}, {\n  title: 'Do not disturb',\n  value: 'do-not-disturb'\n}, {\n  title: 'Offline',\n  value: 'offline'\n}];\n\nvar styles = function styles(theme) {\n  return {\n    contactListItem: {\n      borderBottom: '1px solid ' + theme.palette.divider,\n      '&.active': {\n        backgroundColor: theme.palette.background.paper\n      }\n    },\n    unreadBadge: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    }\n  };\n};\n\nvar ChatsSidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatsSidebar, _Component);\n\n  function ChatsSidebar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatsSidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatsSidebar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      statusSwitchEl: null,\n      chatsMoreMenuEl: null,\n      searchText: ''\n    };\n\n    _this.handleContactClick = function (contactId) {\n      _this.props.getChat(contactId);\n    };\n\n    _this.chatsMoreMenuClick = function (event) {\n      _this.setState({\n        chatsMoreMenuEl: event.currentTarget\n      });\n    };\n\n    _this.chatsMoreMenuClose = function (event) {\n      _this.setState({\n        chatsMoreMenuEl: null\n      });\n    };\n\n    _this.statusSwitchClick = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      _this.setState({\n        statusSwitchEl: event.currentTarget\n      });\n    };\n\n    _this.statusSwitchClose = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      _this.setState({\n        statusSwitchEl: null\n      });\n    };\n\n    _this.getFilteredArray = function (arr, searchText) {\n      if (searchText.length === 0) {\n        return arr;\n      }\n\n      return FuseUtils.filterArrayByString(arr, searchText);\n    };\n\n    _this.setSearchText = function (event) {\n      _this.setState({\n        searchText: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatsSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          contacts = _this$props.contacts,\n          user = _this$props.user,\n          selectedContactId = _this$props.selectedContactId,\n          openUserSidebar = _this$props.openUserSidebar;\n      var _this$state = this.state,\n          statusSwitchEl = _this$state.statusSwitchEl,\n          chatsMoreMenuEl = _this$state.chatsMoreMenuEl,\n          searchText = _this$state.searchText;\n      var chatListContacts = user && user.chatList ? user.chatList.map(function (_chat) {\n        return _objectSpread({}, _chat, contacts.find(function (_contact) {\n          return _contact.id === _chat.contactId;\n        }));\n      }) : [];\n      var chatListArr = this.getFilteredArray(_toConsumableArray(chatListContacts), searchText);\n      var contactsArr = this.getFilteredArray(_toConsumableArray(contacts), searchText);\n\n      var ContactListItem = function ContactListItem(_ref) {\n        var contact = _ref.contact;\n        return React.createElement(ListItem, {\n          button: true,\n          className: classNames(classes.contactListItem, \"px-16 py-12 min-h-92\", {\n            'active': selectedContactId === contact.id\n          }),\n          onClick: function onClick() {\n            return _this2.handleContactClick(contact.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"relative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"absolute pin-r pin-b -m-4 z-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(StatusIcon, {\n          status: contact.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })), React.createElement(Avatar, {\n          src: contact.avatar,\n          alt: contact.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, !contact.avatar || contact.avatar === '' ? contact.name[0] : '')), React.createElement(ListItemText, {\n          classes: {\n            root: \"min-w-px\",\n            secondary: \"truncate\"\n          },\n          primary: contact.name,\n          secondary: contact.mood,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), contact.chatId && React.createElement(\"div\", {\n          className: \"flex flex-col justify-center items-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, contact.lastMessageTime && React.createElement(Typography, {\n          className: \"whitespace-no-wrap mb-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, moment(contact.lastMessageTime).format('ll')), contact.unread && React.createElement(\"div\", {\n          className: classNames(classes.unreadBadge, \"flex items-center justify-center min-w-24 h-24 rounded-full text-14 text-center\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, contact.unread)));\n      };\n\n      return React.createElement(\"div\", {\n        className: \"flex flex-col flex-auto h-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.contentToolbar,\n        position: \"static\",\n        color: \"default\",\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"flex justify-between items-center px-16 pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, user && React.createElement(\"div\", {\n        className: \"relative w-40 h-40 p-0 cursor-pointer\",\n        onClick: openUserSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        src: user.avatar,\n        alt: user.name,\n        className: \"w-40 h-40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, !user.avatar || user.avatar === '' ? user.name[0] : ''), React.createElement(\"div\", {\n        className: \"absolute pin-r pin-b -m-4 z-10 cursor-pointer\",\n        \"aria-owns\": statusSwitchEl ? 'switch-menu' : null,\n        \"aria-haspopup\": \"true\",\n        onClick: this.statusSwitchClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(StatusIcon, {\n        status: user.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"status-switch\",\n        anchorEl: statusSwitchEl,\n        open: Boolean(statusSwitchEl),\n        onClose: this.statusSwitchClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, statusArr.map(function (status) {\n        return React.createElement(MenuItem, {\n          onClick: _this2.statusSwitchClose,\n          key: status.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(StatusIcon, {\n          status: status.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: status.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }));\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-owns\": chatsMoreMenuEl ? 'chats-more-menu' : null,\n        \"aria-haspopup\": \"true\",\n        onClick: this.chatsMoreMenuClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"more_vert\")), React.createElement(Menu, {\n        id: \"chats-more-menu\",\n        anchorEl: chatsMoreMenuEl,\n        open: Boolean(chatsMoreMenuEl),\n        onClose: this.chatsMoreMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: this.chatsMoreMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Profile\"), React.createElement(MenuItem, {\n        onClick: this.chatsMoreMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Logout\")))), React.createElement(Toolbar, {\n        className: \"px-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"flex p-4 items-center w-full px-8 py-4 rounded-8\",\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"mr-8\",\n        color: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"search\"), React.createElement(Input, {\n        placeholder: \"Search or start new chat\",\n        className: \"flex flex-1\",\n        disableUnderline: true,\n        fullWidth: true,\n        value: searchText,\n        inputProps: {\n          'aria-label': 'Search'\n        },\n        onChange: this.setSearchText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })))), React.createElement(FuseScrollbars, {\n        className: \"overflow-y-auto flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: \"w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, contacts.length > 0 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(FuseAnimateGroup, {\n        enter: {\n          animation: \"transition.expandIn\"\n        },\n        className: \"flex flex-col flex-no-shrink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, chatListArr.length > 0 && React.createElement(Typography, {\n        className: \"font-300 text-20 px-16 py-24\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Chats\"), chatListArr.map(function (contact) {\n        return React.createElement(ContactListItem, {\n          key: contact.id,\n          contact: contact,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        });\n      }), contactsArr.length > 0 && React.createElement(Typography, {\n        className: \"font-300 text-20 px-16 py-24\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Contacts\"), contactsArr.map(function (contact) {\n        return React.createElement(ContactListItem, {\n          key: contact.id,\n          contact: contact,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return ChatsSidebar;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getChat: Actions.getChat,\n    openUserSidebar: Actions.openUserSidebar\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref2) {\n  var chatApp = _ref2.chatApp;\n  return {\n    contacts: chatApp.contacts.entities,\n    selectedContactId: chatApp.contacts.selectedContactId,\n    user: chatApp.user\n  };\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(ChatsSidebar));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/chat/ChatsSidebar.js"],"names":["FuseScrollbars","FuseAnimateGroup","FuseUtils","withStyles","AppBar","Avatar","ListItemIcon","List","ListItem","ListItemText","Menu","MenuItem","Typography","Toolbar","Icon","IconButton","Input","Paper","React","Component","bindActionCreators","connect","classNames","moment","Actions","StatusIcon","statusArr","title","value","styles","theme","contactListItem","borderBottom","palette","divider","backgroundColor","background","paper","unreadBadge","secondary","main","color","contrastText","ChatsSidebar","state","statusSwitchEl","chatsMoreMenuEl","searchText","handleContactClick","contactId","props","getChat","chatsMoreMenuClick","event","setState","currentTarget","chatsMoreMenuClose","statusSwitchClick","preventDefault","stopPropagation","statusSwitchClose","getFilteredArray","arr","length","filterArrayByString","setSearchText","target","classes","contacts","user","selectedContactId","openUserSidebar","chatListContacts","chatList","map","_chat","find","_contact","id","chatListArr","contactsArr","ContactListItem","contact","status","avatar","name","root","mood","chatId","lastMessageTime","format","unread","contentToolbar","Boolean","animation","mapDispatchToProps","dispatch","mapStateToProps","chatApp","entities","withTheme"],"mappings":"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","sourcesContent":["import {FuseScrollbars, FuseAnimateGroup, FuseUtils} from '@fuse';\nimport {withStyles, AppBar, Avatar, ListItemIcon, List, ListItem, ListItemText, Menu, MenuItem, Typography, Toolbar, Icon, IconButton, Input, Paper} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport moment from \"moment\";\nimport * as Actions from \"./store/actions\";\nimport StatusIcon from \"./StatusIcon\";\n\nconst statusArr = [\n    {\n        title: 'Online',\n        value: 'online'\n    },\n    {\n        title: 'Away',\n        value: 'away'\n    },\n    {\n        title: 'Do not disturb',\n        value: 'do-not-disturb'\n    },\n    {\n        title: 'Offline',\n        value: 'offline'\n    }\n];\n\nconst styles = theme => ({\n    contactListItem: {\n        borderBottom: '1px solid ' + theme.palette.divider,\n        '&.active'  : {\n            backgroundColor: theme.palette.background.paper\n        }\n    },\n    unreadBadge    : {\n        backgroundColor: theme.palette.secondary.main,\n        color          : theme.palette.secondary.contrastText\n    }\n});\n\nclass ChatsSidebar extends Component {\n\n    state = {\n        statusSwitchEl : null,\n        chatsMoreMenuEl: null,\n        searchText     : ''\n    };\n\n    handleContactClick = (contactId) => {\n        this.props.getChat(contactId);\n    };\n\n    chatsMoreMenuClick = (event) => {\n        this.setState({chatsMoreMenuEl: event.currentTarget});\n    };\n\n    chatsMoreMenuClose = (event) => {\n        this.setState({chatsMoreMenuEl: null});\n    };\n\n    statusSwitchClick = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({statusSwitchEl: event.currentTarget});\n    };\n\n    statusSwitchClose = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({statusSwitchEl: null});\n    };\n\n\n    getFilteredArray = (arr, searchText) => {\n        if ( searchText.length === 0 )\n        {\n            return arr;\n        }\n        return FuseUtils.filterArrayByString(arr, searchText);\n    };\n\n    setSearchText = event => {\n        this.setState({searchText: event.target.value})\n    };\n\n    render()\n    {\n        const {classes, contacts, user, selectedContactId, openUserSidebar} = this.props;\n        const {statusSwitchEl, chatsMoreMenuEl, searchText} = this.state;\n\n        const chatListContacts = user && user.chatList ? user.chatList.map((_chat) => (\n            {\n                ..._chat,\n                ...contacts.find((_contact) => _contact.id === _chat.contactId)\n            }\n        )) : [];\n        const chatListArr = this.getFilteredArray([...chatListContacts], searchText);\n        const contactsArr = this.getFilteredArray([...contacts], searchText);\n\n        const ContactListItem = ({contact}) => {\n            return (\n                <ListItem\n                    button\n                    className={classNames(classes.contactListItem, \"px-16 py-12 min-h-92\", {'active': (selectedContactId === contact.id)})}\n                    onClick={() => this.handleContactClick(contact.id)}\n                >\n                    <div className=\"relative\">\n\n                        <div className=\"absolute pin-r pin-b -m-4 z-10\">\n                            <StatusIcon status={contact.status}/>\n                        </div>\n\n                        <Avatar src={contact.avatar} alt={contact.name}>\n                            {!contact.avatar || contact.avatar === '' ? contact.name[0] : ''}\n                        </Avatar>\n                    </div>\n\n                    <ListItemText\n                        classes={{\n                            root     : \"min-w-px\",\n                            secondary: \"truncate\"\n                        }}\n                        primary={contact.name}\n                        secondary={contact.mood}\n                    />\n\n                    {contact.chatId && (\n                        <div className=\"flex flex-col justify-center items-end\">\n                            {contact.lastMessageTime && (\n                                <Typography className=\"whitespace-no-wrap mb-8\">\n                                    {moment(contact.lastMessageTime).format('ll')}\n                                </Typography>\n                            )}\n                            {contact.unread && (\n                                <div\n                                    className={classNames(classes.unreadBadge, \"flex items-center justify-center min-w-24 h-24 rounded-full text-14 text-center\")}>{contact.unread}</div>\n                            )}\n                        </div>\n                    )}\n                </ListItem>\n            )\n        };\n\n        return (\n            <div className=\"flex flex-col flex-auto h-full\">\n                <AppBar\n                    className={classes.contentToolbar}\n                    position=\"static\"\n                    color=\"default\"\n                    elevation={1}\n                >\n                    <Toolbar className=\"flex justify-between items-center px-16 pr-4\">\n\n                        {user && (\n                            <div className=\"relative w-40 h-40 p-0 cursor-pointer\" onClick={openUserSidebar}>\n\n                                <Avatar src={user.avatar} alt={user.name} className=\"w-40 h-40\">\n                                    {(!user.avatar || user.avatar === '') ? user.name[0] : ''}\n                                </Avatar>\n\n                                <div\n                                    className=\"absolute pin-r pin-b -m-4 z-10 cursor-pointer\"\n                                    aria-owns={statusSwitchEl ? 'switch-menu' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.statusSwitchClick}\n                                >\n                                    <StatusIcon status={user.status}/>\n                                </div>\n\n                                <Menu\n                                    id=\"status-switch\"\n                                    anchorEl={statusSwitchEl}\n                                    open={Boolean(statusSwitchEl)}\n                                    onClose={this.statusSwitchClose}\n                                >\n                                    {statusArr.map((status) => (\n                                        <MenuItem onClick={this.statusSwitchClose} key={status.value}>\n                                            <ListItemIcon>\n                                                <StatusIcon status={status.value}/>\n                                            </ListItemIcon>\n                                            <ListItemText primary={status.title}/>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </div>\n                        )}\n\n                        <div>\n                            <IconButton\n                                aria-owns={chatsMoreMenuEl ? 'chats-more-menu' : null}\n                                aria-haspopup=\"true\"\n                                onClick={this.chatsMoreMenuClick}\n                            >\n                                <Icon>more_vert</Icon>\n                            </IconButton>\n                            <Menu\n                                id=\"chats-more-menu\"\n                                anchorEl={chatsMoreMenuEl}\n                                open={Boolean(chatsMoreMenuEl)}\n                                onClose={this.chatsMoreMenuClose}\n                            >\n                                <MenuItem onClick={this.chatsMoreMenuClose}>Profile</MenuItem>\n                                <MenuItem onClick={this.chatsMoreMenuClose}>Logout</MenuItem>\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                    <Toolbar className=\"px-16\">\n                        <Paper className=\"flex p-4 items-center w-full px-8 py-4 rounded-8\" elevation={1}>\n\n                            <Icon className=\"mr-8\" color=\"action\">search</Icon>\n\n                            <Input\n                                placeholder=\"Search or start new chat\"\n                                className=\"flex flex-1\"\n                                disableUnderline\n                                fullWidth\n                                value={searchText}\n                                inputProps={{\n                                    'aria-label': 'Search'\n                                }}\n                                onChange={this.setSearchText}\n                            />\n                        </Paper>\n                    </Toolbar>\n                </AppBar>\n                <FuseScrollbars className=\"overflow-y-auto flex-1\">\n                    <List className=\"w-full\">\n                        {contacts.length > 0 && (\n                            <React.Fragment>\n                                <FuseAnimateGroup\n                                    enter={{\n                                        animation: \"transition.expandIn\"\n                                    }}\n                                    className=\"flex flex-col flex-no-shrink\"\n                                >\n                                    {chatListArr.length > 0 && (\n                                        <Typography\n                                            className=\"font-300 text-20 px-16 py-24\"\n                                            color=\"secondary\"\n                                        >\n                                            Chats\n                                        </Typography>\n                                    )}\n\n                                    {chatListArr.map(contact => (\n                                        <ContactListItem key={contact.id} contact={contact}/>\n                                    ))}\n\n                                    {contactsArr.length > 0 && (\n                                        <Typography\n                                            className=\"font-300 text-20 px-16 py-24\"\n                                            color=\"secondary\"\n                                        >\n                                            Contacts\n                                        </Typography>\n                                    )}\n\n                                    {contactsArr.map(contact => (\n                                        <ContactListItem key={contact.id} contact={contact}/>\n                                    ))}\n                                </FuseAnimateGroup>\n                            </React.Fragment>\n                        )}\n                    </List>\n                </FuseScrollbars>\n            </div>\n        )\n    };\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getChat        : Actions.getChat,\n        openUserSidebar: Actions.openUserSidebar\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        contacts         : chatApp.contacts.entities,\n        selectedContactId: chatApp.contacts.selectedContactId,\n        user             : chatApp.user\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(ChatsSidebar));\n"]},"metadata":{},"sourceType":"module"}