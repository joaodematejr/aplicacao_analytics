{"ast":null,"code":"import _defineProperty from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/progress/CircularIntegration.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    wrapper: {\n      margin: theme.spacing.unit,\n      position: 'relative'\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n};\n\nvar CircularIntegration =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CircularIntegration, _React$Component);\n\n  function CircularIntegration() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CircularIntegration);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CircularIntegration)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      success: false\n    };\n\n    _this.handleButtonClick = function () {\n      if (!_this.state.loading) {\n        _this.setState({\n          success: false,\n          loading: true\n        }, function () {\n          _this.timer = setTimeout(function () {\n            _this.setState({\n              loading: false,\n              success: true\n            });\n          }, 2000);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CircularIntegration, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          success = _this$state.success;\n      var classes = this.props.classes;\n      var buttonClassname = classNames(_defineProperty({}, classes.buttonSuccess, success));\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        color: \"primary\",\n        className: buttonClassname,\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, success ? React.createElement(CheckIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }) : React.createElement(SaveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), loading && React.createElement(CircularProgress, {\n        size: 68,\n        className: classes.fabProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: buttonClassname,\n        disabled: loading,\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Accept terms\"), loading && React.createElement(CircularProgress, {\n        size: 24,\n        className: classes.buttonProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CircularIntegration;\n}(React.Component);\n\nCircularIntegration.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CircularIntegration);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/progress/CircularIntegration.js"],"names":["React","PropTypes","classNames","withStyles","CircularProgress","green","Button","Fab","CheckIcon","SaveIcon","styles","theme","root","display","alignItems","wrapper","margin","spacing","unit","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","CircularIntegration","state","loading","success","handleButtonClick","setState","timer","setTimeout","clearTimeout","classes","props","buttonClassname","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing.unit,\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nclass CircularIntegration extends React.Component {\n  state = {\n    loading: false,\n    success: false,\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  handleButtonClick = () => {\n    if (!this.state.loading) {\n      this.setState(\n        {\n          success: false,\n          loading: true,\n        },\n        () => {\n          this.timer = setTimeout(() => {\n            this.setState({\n              loading: false,\n              success: true,\n            });\n          }, 2000);\n        },\n      );\n    }\n  };\n\n  render() {\n    const { loading, success } = this.state;\n    const { classes } = this.props;\n    const buttonClassname = classNames({\n      [classes.buttonSuccess]: success,\n    });\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.wrapper}>\n          <Fab color=\"primary\" className={buttonClassname} onClick={this.handleButtonClick}>\n            {success ? <CheckIcon /> : <SaveIcon />}\n          </Fab>\n          {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n        </div>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClassname}\n            disabled={loading}\n            onClick={this.handleButtonClick}\n          >\n            Accept terms\n          </Button>\n          {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nCircularIntegration.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIntegration);\n"]},"metadata":{},"sourceType":"module"}