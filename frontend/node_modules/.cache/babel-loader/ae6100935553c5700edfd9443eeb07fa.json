{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/chat/Chat.js\";\nimport React, { Component } from 'react';\nimport { Avatar, Paper, Typography, withStyles, TextField, IconButton, Icon } from '@material-ui/core';\nimport { FuseScrollbars } from '@fuse';\nimport classNames from 'classnames';\nimport moment from 'moment/moment';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport _ from '@lodash';\nimport * as Actions from './store/actions';\n\nvar styles = function styles(theme) {\n  return {\n    messageRow: {\n      '&.contact': {\n        '& .bubble': {\n          backgroundColor: theme.palette.primary.main,\n          color: theme.palette.primary.contrastText,\n          borderTopLeftRadius: 5,\n          borderBottomLeftRadius: 5,\n          borderTopRightRadius: 20,\n          borderBottomRightRadius: 20,\n          '& .time': {\n            marginLeft: 12\n          }\n        },\n        '&.first-of-group': {\n          '& .bubble': {\n            borderTopLeftRadius: 20\n          }\n        },\n        '&.last-of-group': {\n          '& .bubble': {\n            borderBottomLeftRadius: 20\n          }\n        }\n      },\n      '&.me': {\n        paddingLeft: 40,\n        '& .avatar': {\n          order: 2,\n          margin: '0 0 0 16px'\n        },\n        '& .bubble': {\n          marginLeft: 'auto',\n          backgroundColor: theme.palette.grey[300],\n          color: theme.palette.getContrastText(theme.palette.grey[300]),\n          borderTopLeftRadius: 20,\n          borderBottomLeftRadius: 20,\n          borderTopRightRadius: 5,\n          borderBottomRightRadius: 5,\n          '& .time': {\n            justifyContent: 'flex-end',\n            right: 0,\n            marginRight: 12\n          }\n        },\n        '&.first-of-group': {\n          '& .bubble': {\n            borderTopRightRadius: 20\n          }\n        },\n        '&.last-of-group': {\n          '& .bubble': {\n            borderBottomRightRadius: 20\n          }\n        }\n      },\n      '&.contact + .me, &.me + .contact': {\n        paddingTop: 20,\n        marginTop: 20\n      },\n      '&.first-of-group': {\n        '& .bubble': {\n          borderTopLeftRadius: 20,\n          paddingTop: 13\n        }\n      },\n      '&.last-of-group': {\n        '& .bubble': {\n          borderBottomLeftRadius: 20,\n          paddingBottom: 13,\n          '& .time': {\n            display: 'flex'\n          }\n        }\n      }\n    }\n  };\n};\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messageText: ''\n    };\n\n    _this.shouldShowContactAvatar = function (item, i) {\n      return item.who === _this.props.selectedContactId && (_this.props.chat.dialog[i + 1] && _this.props.chat.dialog[i + 1].who !== _this.props.selectedContactId || !_this.props.chat.dialog[i + 1]);\n    };\n\n    _this.isFirstMessageOfGroup = function (item, i) {\n      return i === 0 || _this.props.chat.dialog[i - 1] && _this.props.chat.dialog[i - 1].who !== item.who;\n    };\n\n    _this.isLastMessageOfGroup = function (item, i) {\n      return i === _this.props.chat.dialog.length - 1 || _this.props.chat.dialog[i + 1] && _this.props.chat.dialog[i + 1].who !== item.who;\n    };\n\n    _this.onInputChange = function (ev) {\n      _this.setState({\n        messageText: ev.target.value\n      });\n    };\n\n    _this.onMessageSubmit = function (ev) {\n      ev.preventDefault();\n\n      if (_this.state.messageText === '') {\n        return;\n      }\n\n      _this.props.sendMessage(_this.state.messageText, _this.props.chat.id, _this.props.user.id).then(function () {\n        _this.setState({\n          messageText: ''\n        });\n\n        _this.scrollToBottom();\n      });\n    };\n\n    _this.scrollToBottom = function () {\n      _this.chatScroll.scrollTop = _this.chatScroll.scrollHeight;\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps) {\n      if (this.props.chat) {\n        this.scrollToBottom();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.chat && !_.isEqual(prevProps.chat, this.props.chat)) {\n        this.scrollToBottom();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          chat = _this$props.chat,\n          contacts = _this$props.contacts,\n          user = _this$props.user,\n          className = _this$props.className;\n      var messageText = this.state.messageText;\n      return React.createElement(\"div\", {\n        className: classNames(\"flex flex-col relative\", className),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(FuseScrollbars, {\n        containerRef: function containerRef(ref) {\n          _this2.chatScroll = ref;\n        },\n        className: \"flex flex-1 flex-col overflow-y-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, chat && chat.dialog.length > 0 ? React.createElement(\"div\", {\n        className: \"flex flex-col pt-16 pl-56 pr-16 pb-40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, chat.dialog.map(function (item, i) {\n        var contact = item.who === user.id ? user : contacts.find(function (_contact) {\n          return _contact.id === item.who;\n        });\n        return React.createElement(\"div\", {\n          key: item.time,\n          className: classNames(classes.messageRow, \"flex flex-col flex-no-grow flex-no-shrink items-start justify-end relative pr-16 pb-4 pl-16\", {\n            'me': item.who === user.id\n          }, {\n            'contact': item.who !== user.id\n          }, {\n            'first-of-group': _this2.isFirstMessageOfGroup(item, i)\n          }, {\n            'last-of-group': _this2.isLastMessageOfGroup(item, i)\n          }, i + 1 === chat.dialog.length && \"pb-96\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, _this2.shouldShowContactAvatar(item, i) && React.createElement(Avatar, {\n          className: \"avatar absolute pin-l m-0 -ml-32\",\n          src: contact.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"bubble flex relative items-center justify-center p-12 max-w-full\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"leading-tight whitespace-pre-wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, item.message), React.createElement(Typography, {\n          className: \"time absolute hidden w-full text-11 mt-8 -mb-24 pin-l pin-b whitespace-no-wrap\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, moment(item.time).format('MMMM Do YYYY, h:mm:ss a'))));\n      })) : React.createElement(\"div\", {\n        className: \"flex flex-col flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex flex-col flex-1 items-center justify-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-128\",\n        color: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"chat\")), React.createElement(Typography, {\n        className: \"px-16 pb-24 text-center\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Start a conversation by typing your message below.\"))), chat && React.createElement(\"form\", {\n        onSubmit: this.onMessageSubmit,\n        className: \"absolute pin-b pin-r pin-l py-16 px-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"flex items-center relative rounded-24\",\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: false,\n        id: \"message-input\",\n        className: \"flex-1\",\n        InputProps: {\n          disableUnderline: true,\n          classes: {\n            root: \"flex flex-grow flex-no-shrink ml-16 mr-48 my-8\",\n            input: \"\"\n          },\n          placeholder: \"Type your message\"\n        },\n        InputLabelProps: {\n          shrink: false,\n          className: classes.bootstrapFormLabel\n        },\n        onChange: this.onInputChange,\n        value: messageText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        className: \"absolute pin-r pin-t\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-24\",\n        color: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"send\")))));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    sendMessage: Actions.sendMessage\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var chatApp = _ref.chatApp;\n  return {\n    contacts: chatApp.contacts.entities,\n    selectedContactId: chatApp.contacts.selectedContactId,\n    chat: chatApp.chat,\n    user: chatApp.user\n  };\n}\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Chat));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/chat/Chat.js"],"names":["React","Component","Avatar","Paper","Typography","withStyles","TextField","IconButton","Icon","FuseScrollbars","classNames","moment","bindActionCreators","connect","_","Actions","styles","theme","messageRow","backgroundColor","palette","primary","main","color","contrastText","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginLeft","paddingLeft","order","margin","grey","getContrastText","justifyContent","right","marginRight","paddingTop","marginTop","paddingBottom","display","Chat","state","messageText","shouldShowContactAvatar","item","i","who","props","selectedContactId","chat","dialog","isFirstMessageOfGroup","isLastMessageOfGroup","length","onInputChange","ev","setState","target","value","onMessageSubmit","preventDefault","sendMessage","id","user","then","scrollToBottom","chatScroll","scrollTop","scrollHeight","prevProps","isEqual","classes","contacts","className","ref","map","contact","find","_contact","time","avatar","message","format","disableUnderline","root","input","placeholder","shrink","bootstrapFormLabel","mapDispatchToProps","dispatch","mapStateToProps","chatApp","entities"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Avatar, Paper, Typography, withStyles, TextField, IconButton, Icon} from '@material-ui/core';\nimport {FuseScrollbars} from '@fuse';\nimport classNames from 'classnames';\nimport moment from 'moment/moment';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport _ from '@lodash';\nimport * as Actions from './store/actions';\n\nconst styles = theme => ({\n    messageRow: {\n        '&.contact'                       : {\n            '& .bubble'       : {\n                backgroundColor        : theme.palette.primary.main,\n                color                  : theme.palette.primary.contrastText,\n                borderTopLeftRadius    : 5,\n                borderBottomLeftRadius : 5,\n                borderTopRightRadius   : 20,\n                borderBottomRightRadius: 20,\n                '& .time'              : {\n                    marginLeft: 12\n                }\n            },\n            '&.first-of-group': {\n                '& .bubble': {\n                    borderTopLeftRadius: 20\n                }\n            },\n            '&.last-of-group' : {\n                '& .bubble': {\n                    borderBottomLeftRadius: 20\n                }\n            }\n        },\n        '&.me'                            : {\n            paddingLeft: 40,\n\n            '& .avatar'       : {\n                order : 2,\n                margin: '0 0 0 16px'\n            },\n            '& .bubble'       : {\n                marginLeft             : 'auto',\n                backgroundColor        : theme.palette.grey[300],\n                color                  : theme.palette.getContrastText(theme.palette.grey[300]),\n                borderTopLeftRadius    : 20,\n                borderBottomLeftRadius : 20,\n                borderTopRightRadius   : 5,\n                borderBottomRightRadius: 5,\n                '& .time'              : {\n                    justifyContent: 'flex-end',\n                    right         : 0,\n                    marginRight   : 12\n                }\n            },\n            '&.first-of-group': {\n                '& .bubble': {\n                    borderTopRightRadius: 20\n                }\n            },\n\n            '&.last-of-group': {\n                '& .bubble': {\n                    borderBottomRightRadius: 20\n                }\n            }\n        },\n        '&.contact + .me, &.me + .contact': {\n            paddingTop: 20,\n            marginTop : 20\n        },\n        '&.first-of-group'                : {\n            '& .bubble': {\n                borderTopLeftRadius: 20,\n                paddingTop         : 13\n            }\n        },\n        '&.last-of-group'                 : {\n            '& .bubble': {\n                borderBottomLeftRadius: 20,\n                paddingBottom         : 13,\n                '& .time'             : {\n                    display: 'flex'\n                }\n            }\n        }\n    }\n});\n\nclass Chat extends Component {\n\n    state = {\n        messageText: ''\n    };\n\n    componentDidMount(prevProps)\n    {\n        if ( this.props.chat )\n        {\n            this.scrollToBottom();\n        }\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        if ( this.props.chat && !_.isEqual(prevProps.chat, this.props.chat) )\n        {\n            this.scrollToBottom();\n        }\n    }\n\n    shouldShowContactAvatar = (item, i) => {\n        return (\n            item.who === this.props.selectedContactId &&\n            ((this.props.chat.dialog[i + 1] && this.props.chat.dialog[i + 1].who !== this.props.selectedContactId) || !this.props.chat.dialog[i + 1])\n        );\n    };\n\n    isFirstMessageOfGroup = (item, i) => {\n        return (i === 0 || (this.props.chat.dialog[i - 1] && this.props.chat.dialog[i - 1].who !== item.who));\n    };\n\n    isLastMessageOfGroup = (item, i) => {\n        return (i === this.props.chat.dialog.length - 1 || (this.props.chat.dialog[i + 1] && this.props.chat.dialog[i + 1].who !== item.who));\n    };\n\n    onInputChange = (ev) => {\n        this.setState({messageText: ev.target.value});\n    };\n\n    onMessageSubmit = (ev) => {\n        ev.preventDefault();\n        if ( this.state.messageText === '' )\n        {\n            return;\n        }\n        this.props.sendMessage(this.state.messageText, this.props.chat.id, this.props.user.id)\n            .then(() => {\n                this.setState({messageText: ''});\n                this.scrollToBottom();\n            });\n    };\n\n    scrollToBottom = () => {\n        this.chatScroll.scrollTop = this.chatScroll.scrollHeight;\n    };\n\n    render()\n    {\n        const {classes, chat, contacts, user, className} = this.props;\n        const {messageText} = this.state;\n        return (\n            <div className={classNames(\"flex flex-col relative\", className)}>\n                <FuseScrollbars\n                    containerRef={(ref) => {\n                        this.chatScroll = ref\n                    }}\n                    className=\"flex flex-1 flex-col overflow-y-auto\"\n                >\n                    {chat && chat.dialog.length > 0 ?\n                        (\n                            <div className=\"flex flex-col pt-16 pl-56 pr-16 pb-40\">\n                                {chat.dialog.map((item, i) => {\n                                    const contact = item.who === user.id ? user : contacts.find(_contact => _contact.id === item.who);\n                                    return (\n                                        <div\n                                            key={item.time}\n                                            className={classNames(\n                                                classes.messageRow,\n                                                \"flex flex-col flex-no-grow flex-no-shrink items-start justify-end relative pr-16 pb-4 pl-16\",\n                                                {'me': item.who === user.id},\n                                                {'contact': item.who !== user.id},\n                                                {'first-of-group': this.isFirstMessageOfGroup(item, i)},\n                                                {'last-of-group': this.isLastMessageOfGroup(item, i)},\n                                                (i + 1) === chat.dialog.length && \"pb-96\"\n                                            )}\n                                        >\n                                            {this.shouldShowContactAvatar(item, i) && (\n                                                <Avatar className=\"avatar absolute pin-l m-0 -ml-32\" src={contact.avatar}/>\n                                            )}\n                                            <div className=\"bubble flex relative items-center justify-center p-12 max-w-full\">\n                                                <div className=\"leading-tight whitespace-pre-wrap\">{item.message}</div>\n                                                <Typography className=\"time absolute hidden w-full text-11 mt-8 -mb-24 pin-l pin-b whitespace-no-wrap\"\n                                                            color=\"textSecondary\">{moment(item.time).format('MMMM Do YYYY, h:mm:ss a')}</Typography>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        ) : (\n                            <div className=\"flex flex-col flex-1\">\n                                <div className=\"flex flex-col flex-1 items-center justify-center\">\n                                    <Icon className=\"text-128\" color=\"disabled\">chat</Icon>\n                                </div>\n                                <Typography className=\"px-16 pb-24 text-center\" color=\"textSecondary\">\n                                    Start a conversation by typing your message below.\n                                </Typography>\n                            </div>\n                        )\n                    }\n\n                </FuseScrollbars>\n                {chat && (\n                    <form onSubmit={this.onMessageSubmit} className=\"absolute pin-b pin-r pin-l py-16 px-8\">\n                        <Paper className=\"flex items-center relative rounded-24\" elevation={1}>\n                            <TextField\n                                autoFocus={false}\n                                id=\"message-input\"\n                                className=\"flex-1\"\n                                InputProps={{\n                                    disableUnderline: true,\n                                    classes         : {\n                                        root : \"flex flex-grow flex-no-shrink ml-16 mr-48 my-8\",\n                                        input: \"\"\n                                    },\n                                    placeholder     : \"Type your message\"\n                                }}\n                                InputLabelProps={{\n                                    shrink   : false,\n                                    className: classes.bootstrapFormLabel\n                                }}\n                                onChange={this.onInputChange}\n                                value={messageText}\n                            />\n                            <IconButton className=\"absolute pin-r pin-t\" type=\"submit\">\n                                <Icon className=\"text-24\" color=\"action\">send</Icon>\n                            </IconButton>\n                        </Paper>\n                    </form>\n                )}\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        sendMessage: Actions.sendMessage\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        contacts         : chatApp.contacts.entities,\n        selectedContactId: chatApp.contacts.selectedContactId,\n        chat             : chatApp.chat,\n        user             : chatApp.user\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Chat));\n"]},"metadata":{},"sourceType":"module"}