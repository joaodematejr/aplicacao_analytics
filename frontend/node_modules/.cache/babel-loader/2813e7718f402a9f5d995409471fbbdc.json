{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/@fuse/components/FuseAuthorization/FuseAuthorization.js\";\nimport React, { Component } from 'react';\nimport { matchRoutes } from 'react-router-config';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppContext from 'app/AppContext';\n\nvar FuseAuthorization =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FuseAuthorization, _Component);\n\n  function FuseAuthorization(props, context) {\n    var _this;\n\n    _classCallCheck(this, FuseAuthorization);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FuseAuthorization).call(this, props));\n    var routes = context.routes;\n    _this.state = {\n      accessGranted: true,\n      routes: routes\n    };\n    return _this;\n  }\n\n  _createClass(FuseAuthorization, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.accessGranted) {\n        this.redirectRoute(this.props);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.state.accessGranted) {\n        this.redirectRoute(this.props);\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextState.accessGranted !== this.state.accessGranted;\n    }\n  }, {\n    key: \"redirectRoute\",\n    value: function redirectRoute(props) {\n      var location = props.location,\n          user = props.user,\n          history = props.history;\n      var pathname = location.pathname,\n          state = location.state;\n      /*\n      User is guest\n      Redirect to Login Page\n      */\n\n      if (user.role === 'guest') {\n        history.push({\n          pathname: '/login',\n          state: {\n            redirectUrl: pathname\n          }\n        });\n      }\n      /*\n      User is member\n      User must be on unAuthorized page or just logged in\n      Redirect to dashboard or redirectUrl\n      */\n      else {\n          var redirectUrl = state && state.redirectUrl ? state.redirectUrl : '/';\n          history.push({\n            pathname: redirectUrl\n          });\n        }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var accessGranted = this.state.accessGranted; // console.info('Fuse Authorization rendered', accessGranted);\n\n      return accessGranted ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, children) : null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var location = props.location,\n          user = props.user;\n      var pathname = location.pathname;\n      var matched = matchRoutes(state.routes, pathname)[0];\n      var accessGranted = matched && matched.route.auth && matched.route.auth.length > 0 ? matched.route.auth.includes(user.role) : true;\n      return {\n        accessGranted: accessGranted\n      };\n    }\n  }]);\n\n  return FuseAuthorization;\n}(Component);\n\nFuseAuthorization.contextType = AppContext;\nexport default withRouter(connect()(FuseAuthorization));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/@fuse/components/FuseAuthorization/FuseAuthorization.js"],"names":["React","Component","matchRoutes","withRouter","connect","AppContext","FuseAuthorization","props","context","routes","state","accessGranted","redirectRoute","nextProps","nextState","location","user","history","pathname","role","push","redirectUrl","children","matched","route","auth","length","includes","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { matchRoutes } from 'react-router-config';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppContext from 'app/AppContext';\n\nclass FuseAuthorization extends Component {\n\n    constructor(props, context) {\n        super(props);\n        const { routes } = context;\n        this.state = {\n            accessGranted: true,\n            routes\n        };\n    }\n\n    componentDidMount() {\n        if (!this.state.accessGranted) {\n            this.redirectRoute(this.props);\n        }\n    }\n\n    componentDidUpdate() {\n        if (!this.state.accessGranted) {\n            this.redirectRoute(this.props);\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { location, user } = props;\n        const { pathname } = location;\n\n        const matched = matchRoutes(state.routes, pathname)[0];\n\n        const accessGranted = (matched && matched.route.auth && matched.route.auth.length > 0) ? matched.route.auth.includes(user.role) : true;\n\n        return {\n            accessGranted\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextState.accessGranted !== this.state.accessGranted;\n    }\n\n    redirectRoute(props) {\n        const { location, user, history } = props;\n        const { pathname, state } = location;\n        /*\n        User is guest\n        Redirect to Login Page\n        */\n        if (user.role === 'guest') {\n            history.push({\n                pathname: '/login',\n                state: { redirectUrl: pathname }\n            });\n        }\n        /*\n        User is member\n        User must be on unAuthorized page or just logged in\n        Redirect to dashboard or redirectUrl\n        */\n        else {\n            const redirectUrl = state && state.redirectUrl ? state.redirectUrl : '/';\n\n            history.push({\n                pathname: redirectUrl\n            });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n        const { accessGranted } = this.state;\n        // console.info('Fuse Authorization rendered', accessGranted);\n        return accessGranted ? <React.Fragment>{children}</React.Fragment> : null;\n    }\n}\n\n\nFuseAuthorization.contextType = AppContext;\n\nexport default withRouter(connect()(FuseAuthorization));\n"]},"metadata":{},"sourceType":"module"}