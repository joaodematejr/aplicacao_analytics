{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nvar styles = function styles(theme) {\n  return {\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: 'fit-content'\n    },\n    formControl: {\n      marginTop: theme.spacing.unit * 2,\n      minWidth: 120\n    },\n    formControlLabel: {\n      marginTop: theme.spacing.unit\n    }\n  };\n};\n\nvar MaxWidthDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MaxWidthDialog, _React$Component);\n\n  function MaxWidthDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MaxWidthDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MaxWidthDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      fullWidth: true,\n      maxWidth: 'sm'\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleMaxWidthChange = function (event) {\n      _this.setState({\n        maxWidth: event.target.value\n      });\n    };\n\n    _this.handleFullWidthChange = function (event) {\n      _this.setState({\n        fullWidth: event.target.checked\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MaxWidthDialog, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Open max-width dialog\"), React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Optional sizes\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"You can set my maximum width and whether to adapt or not.\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"max-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"maxWidth\"), React.createElement(Select, {\n        value: this.state.maxWidth,\n        onChange: this.handleMaxWidthChange,\n        inputProps: {\n          name: 'max-width',\n          id: 'max-width'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"false\"), React.createElement(MenuItem, {\n        value: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"xs\"), React.createElement(MenuItem, {\n        value: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"sm\"), React.createElement(MenuItem, {\n        value: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"md\"), React.createElement(MenuItem, {\n        value: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"lg\"), React.createElement(MenuItem, {\n        value: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"xl\"))), React.createElement(FormControlLabel, {\n        className: classes.formControlLabel,\n        control: React.createElement(Switch, {\n          checked: this.state.fullWidth,\n          onChange: this.handleFullWidthChange,\n          value: \"fullWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }),\n        label: \"Full width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }]);\n\n  return MaxWidthDialog;\n}(React.Component);\n\nMaxWidthDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MaxWidthDialog);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js"],"names":["React","PropTypes","withStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","styles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","unit","minWidth","formControlLabel","MaxWidthDialog","state","open","fullWidth","maxWidth","handleClickOpen","setState","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","classes","props","name","id","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing.unit * 2,\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing.unit,\n  },\n});\n\nclass MaxWidthDialog extends React.Component {\n  state = {\n    open: false,\n    fullWidth: true,\n    maxWidth: 'sm',\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleMaxWidthChange = event => {\n    this.setState({ maxWidth: event.target.value });\n  };\n\n  handleFullWidthChange = event => {\n    this.setState({ fullWidth: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open max-width dialog\n        </Button>\n        <Dialog\n          fullWidth={this.state.fullWidth}\n          maxWidth={this.state.maxWidth}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"max-width-dialog-title\"\n        >\n          <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              You can set my maximum width and whether to adapt or not.\n            </DialogContentText>\n            <form className={classes.form} noValidate>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n                <Select\n                  value={this.state.maxWidth}\n                  onChange={this.handleMaxWidthChange}\n                  inputProps={{\n                    name: 'max-width',\n                    id: 'max-width',\n                  }}\n                >\n                  <MenuItem value={false}>false</MenuItem>\n                  <MenuItem value=\"xs\">xs</MenuItem>\n                  <MenuItem value=\"sm\">sm</MenuItem>\n                  <MenuItem value=\"md\">md</MenuItem>\n                  <MenuItem value=\"lg\">lg</MenuItem>\n                  <MenuItem value=\"xl\">xl</MenuItem>\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                className={classes.formControlLabel}\n                control={\n                  <Switch\n                    checked={this.state.fullWidth}\n                    onChange={this.handleFullWidthChange}\n                    value=\"fullWidth\"\n                  />\n                }\n                label=\"Full width\"\n              />\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n}\n\nMaxWidthDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaxWidthDialog);\n"]},"metadata":{},"sourceType":"module"}