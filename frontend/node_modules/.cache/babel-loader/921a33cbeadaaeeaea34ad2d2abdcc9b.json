{"ast":null,"code":"import _toConsumableArray from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/todo/TodoDialog.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button, Dialog, DialogActions, DialogContent, FormControl, Chip, Icon, IconButton, Typography, Toolbar, AppBar, Avatar, Checkbox, Menu, MenuItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\nimport { FuseUtils } from '@fuse';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport moment from 'moment/moment';\nimport _ from '@lodash';\nimport * as Actions from './store/actions';\nvar newTodoState = {\n  'id': '',\n  'title': '',\n  'notes': '',\n  'startDate': new Date(),\n  'dueDate': new Date(),\n  'completed': false,\n  'starred': false,\n  'important': false,\n  'deleted': false,\n  'labels': []\n};\n\nvar TodoDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoDialog, _Component);\n\n  function TodoDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      form: _objectSpread({}, newTodoState),\n      labelMenuEl: null\n    };\n\n    _this.handleChange = function (event) {\n      var form = _.set(_objectSpread({}, _this.state.form), event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value);\n\n      _this.setState({\n        form: form\n      });\n    };\n\n    _this.closeTodoDialog = function () {\n      _this.props.todoDialog.type === 'edit' ? _this.props.closeEditTodoDialog() : _this.props.closeNewTodoDialog();\n    };\n\n    _this.handleLabelMenuOpen = function (event) {\n      _this.setState({\n        labelMenuEl: event.currentTarget\n      });\n    };\n\n    _this.handleLabelMenuClose = function (event) {\n      _this.setState({\n        labelMenuEl: null\n      });\n    };\n\n    _this.handleToggleImportant = function () {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, {\n          important: !_this.state.form.important\n        })\n      });\n    };\n\n    _this.handleToggleStarred = function () {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, {\n          starred: !_this.state.form.starred\n        })\n      });\n    };\n\n    _this.handleToggleLabel = function (event, id) {\n      event.stopPropagation();\n\n      _this.setState({\n        form: _.set(_objectSpread({}, _this.state.form, {\n          labels: _this.state.form.labels.includes(id) ? _this.state.form.labels.filter(function (labelId) {\n            return labelId !== id;\n          }) : [].concat(_toConsumableArray(_this.state.form.labels), [id])\n        }))\n      });\n    };\n\n    _this.toggleCompleted = function () {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, {\n          completed: !_this.state.form.completed\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      /**\n       * After Dialog Open\n       */\n      if (!prevProps.todoDialog.props.open && this.props.todoDialog.props.open) {\n        /**\n         * Dialog type: 'edit'\n         * Update State\n         */\n        if (this.props.todoDialog.type === 'edit' && this.props.todoDialog.data && !_.isEqual(this.props.todoDialog.data, prevState)) {\n          this.setState({\n            form: _objectSpread({}, this.props.todoDialog.data)\n          });\n        }\n        /**\n         * Dialog type: 'new'\n         * Update State\n         */\n\n\n        if (this.props.todoDialog.type === 'new' && !_.isEqual(newTodoState, prevState)) {\n          this.setState({\n            form: _objectSpread({}, newTodoState, {\n              id: FuseUtils.generateGUID()\n            })\n          });\n        }\n      }\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var title = this.state.form.title;\n      return title.length > 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          todoDialog = _this$props.todoDialog,\n          addTodo = _this$props.addTodo,\n          updateTodo = _this$props.updateTodo,\n          removeTodo = _this$props.removeTodo,\n          labels = _this$props.labels;\n      var _this$state = this.state,\n          form = _this$state.form,\n          labelMenuEl = _this$state.labelMenuEl;\n      var startDate, dueDate;\n\n      if (form) {\n        startDate = moment(form.startDate).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n        dueDate = moment(form.dueDate).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n      }\n\n      return React.createElement(Dialog, Object.assign({}, todoDialog.props, {\n        onClose: this.closeTodoDialog,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(AppBar, {\n        position: \"static\",\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"flex w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, todoDialog.type === 'new' ? 'New Todo' : 'Edit Todo'))), React.createElement(DialogContent, {\n        classes: {\n          root: \"p-0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex items-center justify-between p-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        tabIndex: -1,\n        checked: form.completed,\n        onChange: this.toggleCompleted,\n        onClick: function onClick(ev) {\n          return ev.stopPropagation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex items-center justify-start\",\n        \"aria-label\": \"Toggle star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.handleToggleImportant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, form.important ? React.createElement(Icon, {\n        style: {\n          color: red[500]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"error\") : React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"error_outline\")), React.createElement(IconButton, {\n        onClick: this.handleToggleStarred,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, form.starred ? React.createElement(Icon, {\n        style: {\n          color: amber[500]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"star\") : React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"star_outline\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-owns\": labelMenuEl ? 'label-menu' : null,\n        \"aria-haspopup\": \"true\",\n        onClick: this.handleLabelMenuOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"label\")), React.createElement(Menu, {\n        id: \"label-menu\",\n        anchorEl: labelMenuEl,\n        open: Boolean(labelMenuEl),\n        onClose: this.handleLabelMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, labels.length > 0 && labels.map(function (label) {\n        return React.createElement(MenuItem, {\n          onClick: function onClick(ev) {\n            return _this2.handleToggleLabel(ev, label.id);\n          },\n          key: label.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          className: \"mr-0\",\n          color: \"action\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, form.labels.includes(label.id) ? 'check_box' : 'check_box_outline_blank')), React.createElement(ListItemText, {\n          primary: label.title,\n          disableTypography: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }), React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          className: \"mr-0\",\n          style: {\n            color: label.color\n          },\n          color: \"action\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"label\")));\n      }))))), React.createElement(Divider, {\n        className: \"mx-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })), form.labels.length > 0 && React.createElement(\"div\", {\n        className: \"flex flex-wrap  px-16 sm:px-24 mb-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, form.labels.map(function (label) {\n        return React.createElement(Chip, {\n          avatar: React.createElement(Avatar, {\n            classes: {\n              colorDefault: \"bg-transparent\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            className: \"text-20\",\n            style: {\n              color: _.find(labels, {\n                id: label\n              }).color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }, \"label\")),\n          label: _.find(labels, {\n            id: label\n          }).title,\n          onDelete: function onDelete(ev) {\n            return _this2.handleToggleLabel(ev, label);\n          },\n          className: \"mr-8 my-8\",\n          classes: {\n            label: \"pl-4\"\n          },\n          key: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"px-16 sm:px-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: \"mt-8 mb-16\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Title\",\n        autoFocus: true,\n        name: \"title\",\n        value: form.title,\n        onChange: this.handleChange,\n        required: true,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        className: \"mt-8 mb-16\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Notes\",\n        name: \"notes\",\n        multiline: true,\n        rows: \"6\",\n        value: form.notes,\n        onChange: this.handleChange,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"startDate\",\n        label: \"Start Date\",\n        type: \"datetime-local\",\n        className: \"mt-8 mb-16 mr-8\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          max: dueDate\n        },\n        value: startDate,\n        onChange: this.handleChange,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"dueDate\",\n        label: \"Due Date\",\n        type: \"datetime-local\",\n        className: \"mt-8 mb-16 ml-8\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          min: startDate\n        },\n        value: dueDate,\n        onChange: this.handleChange,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })))), todoDialog.type === 'new' ? React.createElement(DialogActions, {\n        className: \"justify-between pl-8 sm:pl-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          addTodo(_this2.state.form);\n\n          _this2.closeTodoDialog();\n        },\n        disabled: !this.canBeSubmitted(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Add\")) : React.createElement(DialogActions, {\n        className: \"justify-between pl-8 sm:pl-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          updateTodo(_this2.state.form);\n\n          _this2.closeTodoDialog();\n        },\n        disabled: !this.canBeSubmitted(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Save\"), React.createElement(IconButton, {\n        className: \"min-w-auto\",\n        onClick: function onClick() {\n          removeTodo(_this2.state.form.id);\n\n          _this2.closeTodoDialog();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"delete\"))));\n    }\n  }]);\n\n  return TodoDialog;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    closeEditTodoDialog: Actions.closeEditTodoDialog,\n    closeNewTodoDialog: Actions.closeNewTodoDialog,\n    addTodo: Actions.addTodo,\n    updateTodo: Actions.updateTodo,\n    removeTodo: Actions.removeTodo\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var todoApp = _ref.todoApp;\n  return {\n    todoDialog: todoApp.todos.todoDialog,\n    labels: todoApp.labels\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoDialog);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/todo/TodoDialog.js"],"names":["React","Component","TextField","Button","Dialog","DialogActions","DialogContent","FormControl","Chip","Icon","IconButton","Typography","Toolbar","AppBar","Avatar","Checkbox","Menu","MenuItem","ListItemIcon","ListItemText","Divider","amber","red","FuseUtils","bindActionCreators","connect","moment","_","Actions","newTodoState","Date","TodoDialog","state","form","labelMenuEl","handleChange","event","set","target","name","type","checked","value","setState","closeTodoDialog","props","todoDialog","closeEditTodoDialog","closeNewTodoDialog","handleLabelMenuOpen","currentTarget","handleLabelMenuClose","handleToggleImportant","important","handleToggleStarred","starred","handleToggleLabel","id","stopPropagation","labels","includes","filter","labelId","toggleCompleted","completed","prevProps","prevState","snapshot","open","data","isEqual","generateGUID","title","length","addTodo","updateTodo","removeTodo","startDate","dueDate","format","HTML5_FMT","DATETIME_LOCAL_SECONDS","root","ev","color","Boolean","map","label","colorDefault","find","notes","shrink","max","min","canBeSubmitted","mapDispatchToProps","dispatch","mapStateToProps","todoApp","todos"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n    TextField,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    FormControl,\n    Chip,\n    Icon,\n    IconButton,\n    Typography,\n    Toolbar,\n    AppBar,\n    Avatar,\n    Checkbox,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n    ListItemText,\n    Divider\n} from '@material-ui/core';\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\nimport {FuseUtils} from '@fuse';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport moment from 'moment/moment';\nimport _ from '@lodash';\nimport * as Actions from './store/actions';\n\nconst newTodoState = {\n    'id'       : '',\n    'title'    : '',\n    'notes'    : '',\n    'startDate': new Date(),\n    'dueDate'  : new Date(),\n    'completed': false,\n    'starred'  : false,\n    'important': false,\n    'deleted'  : false,\n    'labels'   : []\n};\n\nclass TodoDialog extends Component {\n\n    state = {\n        form       : {...newTodoState},\n        labelMenuEl: null\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        /**\n         * After Dialog Open\n         */\n        if ( !prevProps.todoDialog.props.open && this.props.todoDialog.props.open )\n        {\n            /**\n             * Dialog type: 'edit'\n             * Update State\n             */\n            if ( this.props.todoDialog.type === 'edit' &&\n                this.props.todoDialog.data &&\n                !_.isEqual(this.props.todoDialog.data, prevState) )\n            {\n                this.setState({form: {...this.props.todoDialog.data}});\n            }\n\n            /**\n             * Dialog type: 'new'\n             * Update State\n             */\n            if ( this.props.todoDialog.type === 'new' &&\n                !_.isEqual(newTodoState, prevState) )\n            {\n                this.setState({\n                    form: {\n                        ...newTodoState,\n                        id: FuseUtils.generateGUID()\n                    }\n                });\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        const form = _.set({...this.state.form}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value);\n        this.setState({form});\n    };\n\n    closeTodoDialog = () => {\n        this.props.todoDialog.type === 'edit' ? this.props.closeEditTodoDialog() : this.props.closeNewTodoDialog();\n    };\n\n    handleLabelMenuOpen = (event) => {\n        this.setState({labelMenuEl: event.currentTarget});\n    };\n\n    handleLabelMenuClose = (event) => {\n        this.setState({labelMenuEl: null});\n    };\n\n    handleToggleImportant = () => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                important: !this.state.form.important\n            }\n        });\n    };\n\n    handleToggleStarred = () => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                starred: !this.state.form.starred\n            }\n        });\n    };\n\n    handleToggleLabel = (event, id) => {\n        event.stopPropagation();\n        this.setState({\n            form: _.set({\n                ...this.state.form,\n                labels: this.state.form.labels.includes(id) ? this.state.form.labels.filter(labelId => labelId !== id) : [...this.state.form.labels, id]\n            })\n        });\n    };\n\n    toggleCompleted = () => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                completed: !this.state.form.completed\n            }\n        })\n    };\n\n    canBeSubmitted()\n    {\n        const {title} = this.state.form;\n        return (\n            title.length > 0\n        );\n    }\n\n    render()\n    {\n        const {todoDialog, addTodo, updateTodo, removeTodo, labels} = this.props;\n        const {form, labelMenuEl} = this.state;\n        let startDate, dueDate;\n\n        if ( form )\n        {\n            startDate = moment(form.startDate).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n            dueDate = moment(form.dueDate).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n        }\n\n        return (\n            <Dialog {...todoDialog.props} onClose={this.closeTodoDialog} fullWidth maxWidth=\"sm\">\n\n                <AppBar position=\"static\" elevation={1}>\n                    <Toolbar className=\"flex w-full\">\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                            {todoDialog.type === 'new' ? 'New Todo' : 'Edit Todo'}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <DialogContent classes={{root: \"p-0\"}}>\n\n                    <div className=\"mb-16\">\n                        <div className=\"flex items-center justify-between p-12\">\n\n                            <div className=\"flex\">\n                                <Checkbox\n                                    tabIndex={-1}\n                                    checked={form.completed}\n                                    onChange={this.toggleCompleted}\n                                    onClick={(ev) => ev.stopPropagation()}\n                                />\n                            </div>\n\n                            <div className=\"flex items-center justify-start\" aria-label=\"Toggle star\">\n                                <IconButton onClick={this.handleToggleImportant}>\n                                    {form.important ? (\n                                        <Icon style={{color: red[500]}}>error</Icon>\n                                    ) : (\n                                        <Icon>error_outline</Icon>\n                                    )}\n                                </IconButton>\n\n                                <IconButton onClick={this.handleToggleStarred}>\n                                    {form.starred ? (\n                                        <Icon style={{color: amber[500]}}>star</Icon>\n                                    ) : (\n                                        <Icon>star_outline</Icon>\n                                    )}\n                                </IconButton>\n                                <div>\n                                    <IconButton\n                                        aria-owns={labelMenuEl ? 'label-menu' : null}\n                                        aria-haspopup=\"true\"\n                                        onClick={this.handleLabelMenuOpen}\n                                    >\n                                        <Icon>label</Icon>\n                                    </IconButton>\n                                    <Menu\n                                        id=\"label-menu\"\n                                        anchorEl={labelMenuEl}\n                                        open={Boolean(labelMenuEl)}\n                                        onClose={this.handleLabelMenuClose}\n                                    >\n                                        {labels.length > 0 && labels.map((label) => (\n                                            <MenuItem onClick={(ev) => this.handleToggleLabel(ev, label.id)} key={label.id}>\n                                                <ListItemIcon>\n                                                    <Icon className=\"mr-0\" color=\"action\">\n                                                        {form.labels.includes(label.id) ? 'check_box' : 'check_box_outline_blank'}\n                                                    </Icon>\n                                                </ListItemIcon>\n                                                <ListItemText primary={label.title} disableTypography={true}/>\n                                                <ListItemIcon>\n                                                    <Icon className=\"mr-0\" style={{color: label.color}} color=\"action\">\n                                                        label\n                                                    </Icon>\n                                                </ListItemIcon>\n                                            </MenuItem>\n                                        ))}\n                                    </Menu>\n                                </div>\n                            </div>\n                        </div>\n                        <Divider className=\"mx-24\"/>\n                    </div>\n\n                    {form.labels.length > 0 && (\n                        <div className=\"flex flex-wrap  px-16 sm:px-24 mb-16\">\n                            {form.labels.map(label => (\n                                <Chip\n                                    avatar={(\n                                        <Avatar\n                                            classes={{colorDefault: \"bg-transparent\"}}>\n                                            <Icon\n                                                className=\"text-20\"\n                                                style={{color: _.find(labels, {id: label}).color}}\n                                            >\n                                                label\n                                            </Icon>\n                                        </Avatar>\n                                    )}\n                                    label={_.find(labels, {id: label}).title}\n                                    onDelete={(ev) => this.handleToggleLabel(ev, label)}\n                                    className=\"mr-8 my-8\"\n                                    classes={{label: \"pl-4\"}}\n                                    key={label}\n                                />\n                            ))}\n                        </div>\n                    )}\n\n                    <div className=\"px-16 sm:px-24\">\n                        <FormControl className=\"mt-8 mb-16\" required fullWidth>\n                            <TextField\n                                label=\"Title\"\n                                autoFocus\n                                name=\"title\"\n                                value={form.title}\n                                onChange={this.handleChange}\n                                required\n                                variant=\"outlined\"\n                            />\n                        </FormControl>\n\n                        <FormControl className=\"mt-8 mb-16\" required fullWidth>\n                            <TextField\n                                label=\"Notes\"\n                                name=\"notes\"\n                                multiline\n                                rows=\"6\"\n                                value={form.notes}\n                                onChange={this.handleChange}\n                                variant=\"outlined\"\n                            />\n                        </FormControl>\n                        <div className=\"flex\">\n                            <TextField\n                                name=\"startDate\"\n                                label=\"Start Date\"\n                                type=\"datetime-local\"\n                                className=\"mt-8 mb-16 mr-8\"\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                inputProps={{\n                                    max: dueDate\n                                }}\n                                value={startDate}\n                                onChange={this.handleChange}\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                type=\"datetime-local\"\n                                className=\"mt-8 mb-16 ml-8\"\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                inputProps={{\n                                    min: startDate\n                                }}\n                                value={dueDate}\n                                onChange={this.handleChange}\n                                variant=\"outlined\"\n                            />\n                        </div>\n                    </div>\n\n                </DialogContent>\n\n                {todoDialog.type === 'new' ? (\n                    <DialogActions className=\"justify-between pl-8 sm:pl-16\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                addTodo(this.state.form);\n                                this.closeTodoDialog();\n                            }}\n                            disabled={!this.canBeSubmitted()}\n                        >\n                            Add\n                        </Button>\n                    </DialogActions>\n                ) : (\n                    <DialogActions className=\"justify-between pl-8 sm:pl-16\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                updateTodo(this.state.form);\n                                this.closeTodoDialog();\n                            }}\n                            disabled={!this.canBeSubmitted()}\n                        >\n                            Save\n                        </Button>\n                        <IconButton\n                            className=\"min-w-auto\"\n                            onClick={() => {\n                                removeTodo(this.state.form.id);\n                                this.closeTodoDialog();\n                            }}\n                        >\n                            <Icon>delete</Icon>\n                        </IconButton>\n                    </DialogActions>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeEditTodoDialog: Actions.closeEditTodoDialog,\n        closeNewTodoDialog : Actions.closeNewTodoDialog,\n        addTodo            : Actions.addTodo,\n        updateTodo         : Actions.updateTodo,\n        removeTodo         : Actions.removeTodo\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        todoDialog: todoApp.todos.todoDialog,\n        labels    : todoApp.labels\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoDialog);\n"]},"metadata":{},"sourceType":"module"}