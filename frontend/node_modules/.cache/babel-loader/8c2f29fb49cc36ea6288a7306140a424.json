{"ast":null,"code":"import _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/randomizedLine.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nvar initialState = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, Graph);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Graph)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = initialState;\n    return _this2;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      setInterval(function () {\n        var oldDataSet = _this.state.datasets[0];\n        var newData = [];\n\n        for (var x = 0; x < _this.state.labels.length; x++) {\n          newData.push(Math.floor(Math.random() * 100));\n        }\n\n        var newDataSet = _objectSpread({}, oldDataSet);\n\n        newDataSet.data = newData;\n\n        var newState = _objectSpread({}, initialState, {\n          datasets: [newDataSet]\n        });\n\n        _this.setState(newState);\n      }, 5000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Line, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nvar RandomizedDataLineExample =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(RandomizedDataLineExample, _Component2);\n\n  function RandomizedDataLineExample() {\n    _classCallCheck(this, RandomizedDataLineExample);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RandomizedDataLineExample).apply(this, arguments));\n  }\n\n  _createClass(RandomizedDataLineExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"flex flex-col items-center w-full max-w-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Random Animated Line Example\"), React.createElement(Graph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RandomizedDataLineExample;\n}(Component);\n\nexport default RandomizedDataLineExample;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/randomizedLine.js"],"names":["React","Component","Line","initialState","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","Graph","state","_this","setInterval","oldDataSet","newData","x","length","push","Math","floor","random","newDataSet","newState","setState","RandomizedDataLineExample"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAI,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADO;AAEjBC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,KAAK,EAAsB,kBAD/B;AAEIC,IAAAA,IAAI,EAAuB,KAF/B;AAGIC,IAAAA,WAAW,EAAgB,GAH/B;AAIIC,IAAAA,eAAe,EAAY,sBAJ/B;AAKIC,IAAAA,WAAW,EAAgB,oBAL/B;AAMIC,IAAAA,cAAc,EAAa,MAN/B;AAOIC,IAAAA,UAAU,EAAiB,EAP/B;AAQIC,IAAAA,gBAAgB,EAAW,GAR/B;AASIC,IAAAA,eAAe,EAAY,OAT/B;AAUIC,IAAAA,gBAAgB,EAAW,oBAV/B;AAWIC,IAAAA,oBAAoB,EAAO,MAX/B;AAYIC,IAAAA,gBAAgB,EAAW,CAZ/B;AAaIC,IAAAA,gBAAgB,EAAW,CAb/B;AAcIC,IAAAA,yBAAyB,EAAE,oBAd/B;AAeIC,IAAAA,qBAAqB,EAAM,qBAf/B;AAgBIC,IAAAA,qBAAqB,EAAM,CAhB/B;AAiBIC,IAAAA,WAAW,EAAgB,CAjB/B;AAkBIC,IAAAA,cAAc,EAAa,EAlB/B;AAmBIC,IAAAA,IAAI,EAAuB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAnB/B,GADM;AAFO,CAArB;;IA2BMC,K;;;;;;;;;;;;;;;;;WAEFC,K,GAAQvB,Y;;;;;;wCAGR;AACI,UAAMwB,KAAK,GAAG,IAAd;;AAEAC,MAAAA,WAAW,CAAC,YAAY;AACpB,YAAMC,UAAU,GAAGF,KAAK,CAACD,KAAN,CAAYrB,QAAZ,CAAqB,CAArB,CAAnB;AACA,YAAMyB,OAAO,GAAG,EAAhB;;AAEA,aAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGJ,KAAK,CAACD,KAAN,CAAYtB,MAAZ,CAAmB4B,MAAxC,EAAgDD,CAAC,EAAjD,EACA;AACID,UAAAA,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACH;;AAED,YAAMC,UAAU,qBACTR,UADS,CAAhB;;AAIAQ,QAAAA,UAAU,CAACb,IAAX,GAAkBM,OAAlB;;AAEA,YAAMQ,QAAQ,qBACPnC,YADO;AAEVE,UAAAA,QAAQ,EAAE,CAACgC,UAAD;AAFA,UAAd;;AAKAV,QAAAA,KAAK,CAACY,QAAN,CAAeD,QAAf;AACH,OArBU,EAqBR,IArBQ,CAAX;AAsBH;;;6BAGD;AACI,aACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EArCezB,S;;IAwCduC,yB;;;;;;;;;;;;;6BAEF;AACI,aACI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EATmCvC,S;;AAYxC,eAAeuC,yBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst initialState = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label                    : 'My First dataset',\n            fill                     : false,\n            lineTension              : 0.1,\n            backgroundColor          : 'rgba(75,192,192,0.4)',\n            borderColor              : 'rgba(75,192,192,1)',\n            borderCapStyle           : 'butt',\n            borderDash               : [],\n            borderDashOffset         : 0.0,\n            borderJoinStyle          : 'miter',\n            pointBorderColor         : 'rgba(75,192,192,1)',\n            pointBackgroundColor     : '#fff',\n            pointBorderWidth         : 1,\n            pointHoverRadius         : 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\n            pointHoverBorderWidth    : 2,\n            pointRadius              : 1,\n            pointHitRadius           : 10,\n            data                     : [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nclass Graph extends Component {\n\n    state = initialState;\n\n    componentDidMount()\n    {\n        const _this = this;\n\n        setInterval(function () {\n            const oldDataSet = _this.state.datasets[0];\n            const newData = [];\n\n            for ( let x = 0; x < _this.state.labels.length; x++ )\n            {\n                newData.push(Math.floor(Math.random() * 100));\n            }\n\n            const newDataSet = {\n                ...oldDataSet\n            };\n\n            newDataSet.data = newData;\n\n            const newState = {\n                ...initialState,\n                datasets: [newDataSet]\n            };\n\n            _this.setState(newState);\n        }, 5000);\n    }\n\n    render()\n    {\n        return (\n            <Line data={this.state}/>\n        );\n    }\n}\n\nclass RandomizedDataLineExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Random Animated Line Example</h2>\n                <Graph/>\n            </div>\n        );\n    }\n}\n\nexport default RandomizedDataLineExample;\n"]},"metadata":{},"sourceType":"module"}