{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/dynamic-doughnut.js\";\nimport React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nvar getState = function getState() {\n  return {\n    labels: ['Red', 'Green', 'Yellow'],\n    datasets: [{\n      data: [getRandomInt(50, 200), getRandomInt(100, 150), getRandomInt(150, 250)],\n      backgroundColor: ['#CCC', '#36A2EB', '#FFCE56'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n    }]\n  };\n};\n\nvar DynamicDoughnutExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DynamicDoughnutExample, _Component);\n\n  function DynamicDoughnutExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DynamicDoughnutExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DynamicDoughnutExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = getState();\n    return _this;\n  }\n\n  _createClass(DynamicDoughnutExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.setState(getState());\n      }, 5000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"flex flex-col items-center w-full max-w-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Dynamicly refreshed Doughnut Example\"), React.createElement(Doughnut, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DynamicDoughnutExample;\n}(Component);\n\nexport default DynamicDoughnutExample;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/dynamic-doughnut.js"],"names":["React","Component","Doughnut","getRandomInt","min","max","Math","floor","random","getState","labels","datasets","data","backgroundColor","hoverBackgroundColor","DynamicDoughnutExample","state","setInterval","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EACA;AACI,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AAED,IAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AACpBC,IAAAA,MAAM,EAAI,CACN,KADM,EAEN,OAFM,EAGN,QAHM,CADU;AAMpBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,IAAI,EAAkB,CAACT,YAAY,CAAC,EAAD,EAAK,GAAL,CAAb,EAAwBA,YAAY,CAAC,GAAD,EAAM,GAAN,CAApC,EAAgDA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA5D,CAD1B;AAEIU,MAAAA,eAAe,EAAO,CAClB,MADkB,EAElB,SAFkB,EAGlB,SAHkB,CAF1B;AAOIC,MAAAA,oBAAoB,EAAE,CAClB,SADkB,EAElB,SAFkB,EAGlB,SAHkB;AAP1B,KADM;AANU,GAAP;AAAA,CAAjB;;IAuBMC,sB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQP,QAAQ,E;;;;;;wCAGhB;AAAA;;AACIQ,MAAAA,WAAW,CAAC,YAAM;AACd,QAAA,MAAI,CAACC,QAAL,CAAcT,QAAQ,EAAtB;AACH,OAFU,EAER,IAFQ,CAAX;AAGH;;;6BAGD;AACI,aACI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKO,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAnBgCf,S;;AAsBrC,eAAec,sBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\nfunction getRandomInt(min, max)\n{\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getState = () => ({\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow'\n    ],\n    datasets: [\n        {\n            data                : [getRandomInt(50, 200), getRandomInt(100, 150), getRandomInt(150, 250)],\n            backgroundColor     : [\n                '#CCC',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n    ]\n});\n\nclass DynamicDoughnutExample extends Component {\n\n    state = getState();\n\n    componentDidMount()\n    {\n        setInterval(() => {\n            this.setState(getState());\n        }, 5000);\n    }\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Dynamicly refreshed Doughnut Example</h2>\n                <Doughnut data={this.state}/>\n            </div>\n        );\n    }\n}\n\nexport default DynamicDoughnutExample\n"]},"metadata":{},"sourceType":"module"}