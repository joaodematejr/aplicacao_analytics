{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/board/dialogs/card/BoardCardDialog.js\";\nimport React, { Component } from 'react';\nimport { withStyles, TextField, Dialog, DialogContent, DialogTitle, Icon, IconButton, Typography, Toolbar, AppBar, Avatar, InputAdornment, Tooltip, List } from '@material-ui/core';\nimport * as Actions from 'app/main/apps/scrumboard/store/actions/index';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { FuseChipSelect } from '@fuse/index';\nimport LabelModel from 'app/main/apps/scrumboard/model/LabelModel';\nimport CardAttachment from './attachment/CardAttachment';\nimport DueMenu from './toolbar/DueMenu';\nimport LabelsMenu from './toolbar/LabelsMenu';\nimport MembersMenu from './toolbar/MembersMenu';\nimport CheckListMenu from './toolbar/CheckListMenu';\nimport OptionsMenu from './toolbar/OptionsMenu';\nimport CardChecklist from './checklist/CardChecklist';\nimport CardActivity from './activity/CardActivity';\nimport CardComment from './comment/CardComment';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport moment from 'moment';\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      color: theme.palette.text.primary\n    }\n  };\n};\n\nvar BoardCardDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoardCardDialog, _Component);\n\n  function BoardCardDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BoardCardDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BoardCardDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dueMenu: null\n    };\n    _this.updateCard = _.debounce(function (boardId, card) {\n      _this.props.updateCard(boardId, card);\n    }, 600);\n    return _this;\n  }\n\n  _createClass(BoardCardDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.card && this.props.card && !_.isEqual(prevProps.card, this.props.card)) {\n        this.updateCard(this.props.board.id, this.props.card);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          card = _this$props.card,\n          classes = _this$props.classes,\n          removeCard = _this$props.removeCard,\n          closeCardDialog = _this$props.closeCardDialog,\n          board = _this$props.board,\n          addLabel = _this$props.addLabel,\n          handleChange = _this$props.handleChange,\n          chipChange = _this$props.chipChange,\n          removeAttachment = _this$props.removeAttachment,\n          removeDue = _this$props.removeDue,\n          toggleLabel = _this$props.toggleLabel,\n          toggleMember = _this$props.toggleMember,\n          addCheckList = _this$props.addCheckList,\n          checkListChange = _this$props.checkListChange,\n          removeCheckList = _this$props.removeCheckList,\n          commentAdd = _this$props.commentAdd,\n          makeCover = _this$props.makeCover,\n          removeCover = _this$props.removeCover,\n          addNewChip = _this$props.addNewChip;\n      var list = card ? _.find(board.lists, function (_list) {\n        return _list.idCards.includes(card.id);\n      }) : null;\n      var dueDate = card && card.due ? moment(card.due).format(moment.HTML5_FMT.DATE) : \"\";\n      return React.createElement(Dialog, {\n        classes: {\n          paper: classNames(classes.paper, \"max-w-lg w-full m-24\")\n        },\n        onClose: closeCardDialog,\n        open: Boolean(card),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, card && React.createElement(DialogTitle, {\n        component: \"div\",\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"flex w-full overflow-x-auto px-8 sm:px-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(DueMenu, {\n        onDueChange: handleChange,\n        onRemoveDue: removeDue,\n        due: card.due,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(LabelsMenu, {\n        onToggleLabel: toggleLabel,\n        labels: board.labels,\n        idLabels: card.idLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(MembersMenu, {\n        onToggleMember: toggleMember,\n        members: board.members,\n        idMembers: card.idMembers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"attachment\")), React.createElement(CheckListMenu, {\n        onAddCheckList: addCheckList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(OptionsMenu, {\n        onRemoveCard: function onRemoveCard() {\n          return removeCard(board.id, card.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        color: \"inherit\",\n        onClick: closeCardDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"close\"))))), card && React.createElement(DialogContent, {\n        className: \"p-16 sm:p-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex flex-col sm:flex-row sm:justify-between justify-center items-center mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-16 sm:mb-0 flex items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, board.name), React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"chevron_right\"), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, list && list.name)), card.due && React.createElement(TextField, {\n        label: \"Due date\",\n        type: \"date\",\n        name: \"due\",\n        value: dueDate,\n        onChange: handleChange,\n        placeholder: \" Choose a due date\",\n        className: \"w-full sm:w-auto\",\n        InputLabelProps: {\n          shrink: true\n        },\n        variant: \"outlined\",\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            color: \"action\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"today\"))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex items-center mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Title\",\n        type: \"text\",\n        name: \"name\",\n        value: card.name,\n        onChange: handleChange,\n        variant: \"outlined\",\n        fullWidth: true,\n        required: true,\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, card.subscribed && React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, \"remove_red_eye\"))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"w-full mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Description\",\n        name: \"description\",\n        multiline: true,\n        rows: \"4\",\n        value: card.description,\n        onChange: handleChange,\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex flex-col sm:flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, card.idLabels.length > 0 && React.createElement(\"div\", {\n        className: \"flex-1 mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex items-center mt-16 mb-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20 mr-8\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"label\"), React.createElement(Typography, {\n        className: \"font-600 text-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Labels\")), React.createElement(FuseChipSelect, {\n        className: card.idMembers.length > 0 && 'sm:mr-8',\n        value: card.idLabels.map(function (labelId) {\n          return {\n            value: labelId,\n            label: _.find(board.labels, {\n              id: labelId\n            }).name,\n            class: _.find(board.labels, {\n              id: labelId\n            }).class\n          };\n        }),\n        onChange: function onChange(value) {\n          return chipChange('idLabels', value);\n        },\n        placeholder: \"Select multiple Labels\",\n        isMulti: true,\n        textFieldProps: {\n          variant: \"outlined\"\n        },\n        options: board.labels.map(function (label) {\n          return {\n            value: label.id,\n            label: label.name,\n            class: label.class\n          };\n        }),\n        onCreateOption: function onCreateOption(name) {\n          // Create New Label\n          var newLabel = new LabelModel({\n            name: name\n          }); // Ad new Label to board(redux store and server)\n\n          addLabel(newLabel); // Trigger handle chip change\n\n          addNewChip('idLabels', newLabel.id);\n          return newLabel.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), card.idMembers.length > 0 && React.createElement(\"div\", {\n        className: \"flex-1 mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex items-center mt-16 mb-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20 mr-8\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"supervisor_account\"), React.createElement(Typography, {\n        className: \"font-600 text-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Members\")), React.createElement(FuseChipSelect, {\n        className: card.idLabels.length > 0 && 'sm:ml-8',\n        value: card.idMembers.map(function (memberId) {\n          var member = _.find(board.members, {\n            id: memberId\n          });\n\n          return {\n            value: member.id,\n            label: React.createElement(Tooltip, {\n              title: member.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 235\n              },\n              __self: this\n            }, React.createElement(Avatar, {\n              className: \"-ml-12 w-32 h-32\",\n              src: member.avatar,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 235\n              },\n              __self: this\n            }))\n          };\n        }),\n        onChange: function onChange(value) {\n          return chipChange('idMembers', value);\n        },\n        placeholder: \"Select multiple Members\",\n        isMulti: true,\n        textFieldProps: {\n          variant: \"outlined\"\n        },\n        options: board.members.map(function (member) {\n          return {\n            value: member.id,\n            label: React.createElement(\"span\", {\n              className: \"flex items-center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 248\n              },\n              __self: this\n            }, React.createElement(Avatar, {\n              className: \"w-32 h-32 mr-8\",\n              src: member.avatar,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 248\n              },\n              __self: this\n            }), member.name)\n          };\n        }),\n        variant: \"fixed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }))), card.attachments.length > 0 && React.createElement(\"div\", {\n        className: \"mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex items-center mt-16 mb-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20 mr-8\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"attachment\"), React.createElement(Typography, {\n        className: \"font-600 text-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Attachments\")), React.createElement(\"div\", {\n        className: \"flex flex-col sm:flex-row flex-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, card.attachments.map(function (item) {\n        return React.createElement(CardAttachment, {\n          item: item,\n          card: card,\n          makeCover: makeCover,\n          removeCover: removeCover,\n          removeAttachment: removeAttachment,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        });\n      }))), card.checklists.map(function (checklist) {\n        return React.createElement(CardChecklist, {\n          key: checklist.id,\n          checklist: checklist,\n          onCheckListChange: checkListChange,\n          onRemoveCheckList: function onRemoveCheckList() {\n            return removeCheckList(checklist.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: \"mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex items-center mt-16 mb-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20 mr-8\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"comment\"), React.createElement(Typography, {\n        className: \"font-600 text-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Comment\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(CardComment, {\n        members: board.members,\n        onCommentAdd: commentAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }))), card.activities.length > 0 && React.createElement(\"div\", {\n        className: \"mb-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex items-center mt-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20 mr-8\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"list\"), React.createElement(Typography, {\n        className: \"font-600 text-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Activity\")), React.createElement(List, {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, card.activities.map(function (item) {\n        return React.createElement(CardActivity, {\n          item: item,\n          key: item.id,\n          members: board.members,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return BoardCardDialog;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    closeCardDialog: Actions.closeCardDialog,\n    updateCard: Actions.updateCard,\n    removeCard: Actions.removeCard,\n    handleChange: Actions.handleChange,\n    addLabel: Actions.addLabel,\n    chipChange: Actions.chipChange,\n    makeCover: Actions.makeCover,\n    removeCover: Actions.removeCover,\n    removeAttachment: Actions.removeAttachment,\n    removeDue: Actions.removeDue,\n    toggleLabel: Actions.toggleLabel,\n    toggleMember: Actions.toggleMember,\n    addCheckList: Actions.addCheckList,\n    checkListChange: Actions.checkListChange,\n    removeCheckList: Actions.removeCheckList,\n    addNewChip: Actions.addNewChip,\n    commentAdd: Actions.commentAdd\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var scrumboardApp = _ref.scrumboardApp;\n  return {\n    card: scrumboardApp.card,\n    board: scrumboardApp.board\n  };\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(BoardCardDialog));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/board/dialogs/card/BoardCardDialog.js"],"names":["React","Component","withStyles","TextField","Dialog","DialogContent","DialogTitle","Icon","IconButton","Typography","Toolbar","AppBar","Avatar","InputAdornment","Tooltip","List","Actions","bindActionCreators","connect","FuseChipSelect","LabelModel","CardAttachment","DueMenu","LabelsMenu","MembersMenu","CheckListMenu","OptionsMenu","CardChecklist","CardActivity","CardComment","classNames","_","moment","styles","theme","paper","color","palette","text","primary","BoardCardDialog","state","dueMenu","updateCard","debounce","boardId","card","props","prevProps","prevState","snapshot","isEqual","board","id","classes","removeCard","closeCardDialog","addLabel","handleChange","chipChange","removeAttachment","removeDue","toggleLabel","toggleMember","addCheckList","checkListChange","removeCheckList","commentAdd","makeCover","removeCover","addNewChip","list","find","lists","_list","idCards","includes","dueDate","due","format","HTML5_FMT","DATE","Boolean","labels","idLabels","members","idMembers","name","shrink","endAdornment","subscribed","description","length","map","labelId","value","label","class","variant","newLabel","memberId","member","avatar","attachments","item","checklists","checklist","activities","mapDispatchToProps","dispatch","mapStateToProps","scrumboardApp","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles, TextField, Dialog, DialogContent, DialogTitle, Icon, IconButton, Typography, Toolbar, AppBar, Avatar, InputAdornment, Tooltip, List} from '@material-ui/core';\nimport * as Actions from 'app/main/apps/scrumboard/store/actions/index';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {FuseChipSelect} from '@fuse/index';\nimport LabelModel from 'app/main/apps/scrumboard/model/LabelModel';\nimport CardAttachment from './attachment/CardAttachment';\nimport DueMenu from './toolbar/DueMenu';\nimport LabelsMenu from './toolbar/LabelsMenu';\nimport MembersMenu from './toolbar/MembersMenu';\nimport CheckListMenu from './toolbar/CheckListMenu';\nimport OptionsMenu from './toolbar/OptionsMenu';\nimport CardChecklist from './checklist/CardChecklist';\nimport CardActivity from './activity/CardActivity';\nimport CardComment from './comment/CardComment';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport moment from 'moment';\n\nconst styles = theme => ({\n    paper: {\n        color: theme.palette.text.primary\n    }\n});\n\nclass BoardCardDialog extends Component {\n\n    state = {\n        dueMenu: null\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if ( prevProps.card &&\n            this.props.card &&\n            !_.isEqual(prevProps.card, this.props.card)\n        )\n        {\n            this.updateCard(this.props.board.id, this.props.card);\n        }\n    }\n\n    updateCard = _.debounce((boardId, card) => {\n        this.props.updateCard(boardId, card);\n    }, 600);\n\n    render()\n    {\n        const {card, classes, removeCard, closeCardDialog, board, addLabel, handleChange, chipChange, removeAttachment, removeDue, toggleLabel, toggleMember, addCheckList, checkListChange, removeCheckList, commentAdd, makeCover, removeCover, addNewChip} = this.props;\n        const list = card ? _.find(board.lists, (_list) => _list.idCards.includes(card.id)) : null;\n        const dueDate = card && card.due ? moment(card.due).format(moment.HTML5_FMT.DATE) : \"\";\n\n        return (\n            <Dialog\n                classes={{\n                    paper: classNames(classes.paper, \"max-w-lg w-full m-24\")\n                }}\n                onClose={closeCardDialog}\n                open={Boolean(card)}\n            >\n\n                {card && (\n                    <DialogTitle component=\"div\" className=\"p-0\">\n                        <AppBar position=\"static\" elevation={1}>\n                            <Toolbar className=\"flex w-full overflow-x-auto px-8 sm:px-16\">\n                                <div className=\"flex flex-1\">\n\n                                    <DueMenu\n                                        onDueChange={handleChange}\n                                        onRemoveDue={removeDue}\n                                        due={card.due}\n                                    />\n\n                                    <LabelsMenu\n                                        onToggleLabel={toggleLabel}\n                                        labels={board.labels}\n                                        idLabels={card.idLabels}\n                                    />\n\n                                    <MembersMenu\n                                        onToggleMember={toggleMember}\n                                        members={board.members}\n                                        idMembers={card.idMembers}\n                                    />\n\n                                    <IconButton color=\"inherit\">\n                                        <Icon>attachment</Icon>\n                                    </IconButton>\n\n                                    <CheckListMenu\n                                        onAddCheckList={addCheckList}\n                                    />\n\n                                    <OptionsMenu\n                                        onRemoveCard={() => removeCard(board.id, card.id)}\n                                    />\n\n                                </div>\n                                <IconButton color=\"inherit\" onClick={closeCardDialog}>\n                                    <Icon>close</Icon>\n                                </IconButton>\n                            </Toolbar>\n                        </AppBar>\n                    </DialogTitle>\n                )}\n\n                {card && (\n                    <DialogContent className=\"p-16 sm:p-24\">\n\n                        <div className=\"flex flex-col sm:flex-row sm:justify-between justify-center items-center mb-24\">\n                            <div className=\"mb-16 sm:mb-0 flex items-center\">\n                                <Typography>{board.name}</Typography>\n                                <Icon className=\"text-20\" color=\"inherit\">chevron_right</Icon>\n                                <Typography>{list && list.name}</Typography>\n                            </div>\n\n                            {card.due && (\n                                <TextField\n                                    label=\"Due date\"\n                                    type=\"date\"\n                                    name=\"due\"\n                                    value={dueDate}\n                                    onChange={handleChange}\n                                    placeholder=\" Choose a due date\"\n                                    className=\"w-full sm:w-auto\"\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                    variant=\"outlined\"\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Icon color=\"action\">today</Icon>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n                            )}\n                        </div>\n\n                        <div className=\"flex items-center mb-24\">\n                            <TextField\n                                label=\"Title\"\n                                type=\"text\"\n                                name=\"name\"\n                                value={card.name}\n                                onChange={handleChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            {card.subscribed && (\n                                                <Icon className=\"text-20\" color=\"action\">remove_red_eye</Icon>\n                                            )}\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                        </div>\n\n                        <div className=\"w-full mb-24\">\n                            <TextField\n                                label=\"Description\"\n                                name=\"description\"\n                                multiline\n                                rows=\"4\"\n                                value={card.description}\n                                onChange={handleChange}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </div>\n\n                        <div className=\"flex flex-col sm:flex-row\">\n                            {card.idLabels.length > 0 && (\n                                <div className=\"flex-1 mb-24\">\n                                    <div className=\"flex items-center mt-16 mb-12\">\n                                        <Icon className=\"text-20 mr-8\" color=\"inherit\">label</Icon>\n                                        <Typography className=\"font-600 text-16\">Labels</Typography>\n                                    </div>\n                                    <FuseChipSelect\n                                        className={card.idMembers.length > 0 && 'sm:mr-8'}\n                                        value={\n                                            card.idLabels.map(labelId => ({\n                                                value: labelId,\n                                                label: _.find(board.labels, {id: labelId}).name,\n                                                class: _.find(board.labels, {id: labelId}).class\n                                            }))\n                                        }\n                                        onChange={(value) => chipChange('idLabels', value)}\n                                        placeholder=\"Select multiple Labels\"\n                                        isMulti\n                                        textFieldProps={{\n                                            variant: \"outlined\"\n                                        }}\n                                        options={board.labels.map((label) => (\n                                            {\n                                                value: label.id,\n                                                label: label.name,\n                                                class: label.class\n                                            }\n                                        ))}\n                                        onCreateOption={(name) => {\n                                            // Create New Label\n                                            const newLabel = new LabelModel({name});\n\n                                            // Ad new Label to board(redux store and server)\n                                            addLabel(newLabel);\n\n                                            // Trigger handle chip change\n                                            addNewChip('idLabels', newLabel.id);\n\n                                            return newLabel.id;\n                                        }}\n                                    />\n                                </div>\n                            )}\n\n                            {card.idMembers.length > 0 && (\n                                <div className=\"flex-1 mb-24\">\n                                    <div className=\"flex items-center mt-16 mb-12\">\n                                        <Icon className=\"text-20 mr-8\" color=\"inherit\">supervisor_account</Icon>\n                                        <Typography className=\"font-600 text-16\">Members</Typography>\n                                    </div>\n                                    <FuseChipSelect\n                                        className={card.idLabels.length > 0 && 'sm:ml-8'}\n                                        value={\n                                            card.idMembers.map(memberId => {\n                                                const member = _.find(board.members, {id: memberId});\n                                                return {\n                                                    value: member.id,\n                                                    label: (<Tooltip title={member.name}><Avatar className=\"-ml-12 w-32 h-32\" src={member.avatar}/></Tooltip>)\n                                                }\n                                            })\n                                        }\n                                        onChange={(value) => chipChange('idMembers', value)}\n                                        placeholder=\"Select multiple Members\"\n                                        isMulti\n                                        textFieldProps={{\n                                            variant: \"outlined\"\n                                        }}\n                                        options={board.members.map((member) => (\n                                            {\n                                                value: member.id,\n                                                label: (<span className=\"flex items-center\"><Avatar className=\"w-32 h-32 mr-8\" src={member.avatar}/>{member.name}</span>)\n                                            }\n                                        ))}\n                                        variant=\"fixed\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n\n                        {card.attachments.length > 0 && (\n                            <div className=\"mb-24\">\n                                <div className=\"flex items-center mt-16 mb-12\">\n                                    <Icon className=\"text-20 mr-8\" color=\"inherit\">attachment</Icon>\n                                    <Typography className=\"font-600 text-16\">Attachments</Typography>\n                                </div>\n                                <div className=\"flex flex-col sm:flex-row flex-wrap\">\n                                    {card.attachments.map(item => (\n                                            <CardAttachment\n                                                item={item}\n                                                card={card}\n                                                makeCover={makeCover}\n                                                removeCover={removeCover}\n                                                removeAttachment={removeAttachment}\n                                                key={item.id}\n                                            />\n                                        )\n                                    )}\n                                </div>\n                            </div>\n                        )}\n\n                        {card.checklists.map(checklist => (\n                            <CardChecklist\n                                key={checklist.id}\n                                checklist={checklist}\n                                onCheckListChange={checkListChange}\n                                onRemoveCheckList={() => removeCheckList(checklist.id)}\n                            />\n                        ))}\n\n                        <div className=\"mb-24\">\n                            <div className=\"flex items-center mt-16 mb-12\">\n                                <Icon className=\"text-20 mr-8\" color=\"inherit\">comment</Icon>\n                                <Typography className=\"font-600 text-16\">Comment</Typography>\n                            </div>\n                            <div>\n                                <CardComment\n                                    members={board.members}\n                                    onCommentAdd={commentAdd}\n                                />\n                            </div>\n                        </div>\n\n                        {card.activities.length > 0 && (\n                            <div className=\"mb-24\">\n                                <div className=\"flex items-center mt-16\">\n                                    <Icon className=\"text-20 mr-8\" color=\"inherit\">list</Icon>\n                                    <Typography className=\"font-600 text-16\">Activity</Typography>\n                                </div>\n                                <List className=\"\">\n                                    {card.activities.map(item => (\n                                            <CardActivity\n                                                item={item}\n                                                key={item.id}\n                                                members={board.members}\n                                            />\n                                        )\n                                    )}\n                                </List>\n                            </div>\n                        )}\n                    </DialogContent>\n                )}\n            </Dialog>\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeCardDialog : Actions.closeCardDialog,\n        updateCard      : Actions.updateCard,\n        removeCard      : Actions.removeCard,\n        handleChange    : Actions.handleChange,\n        addLabel        : Actions.addLabel,\n        chipChange      : Actions.chipChange,\n        makeCover       : Actions.makeCover,\n        removeCover     : Actions.removeCover,\n        removeAttachment: Actions.removeAttachment,\n        removeDue       : Actions.removeDue,\n        toggleLabel     : Actions.toggleLabel,\n        toggleMember    : Actions.toggleMember,\n        addCheckList    : Actions.addCheckList,\n        checkListChange : Actions.checkListChange,\n        removeCheckList : Actions.removeCheckList,\n        addNewChip      : Actions.addNewChip,\n        commentAdd      : Actions.commentAdd\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        card : scrumboardApp.card,\n        board: scrumboardApp.board\n    }\n}\n\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(BoardCardDialog));\n"]},"metadata":{},"sourceType":"module"}