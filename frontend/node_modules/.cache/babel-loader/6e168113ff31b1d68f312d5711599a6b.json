{"ast":null,"code":"import axios from 'axios';\nexport var GET_EVENTS = '[CALENDAR APP] GET EVENTS';\nexport var OPEN_NEW_EVENT_DIALOG = '[CALENDAR APP] OPEN NEW EVENT DIALOG';\nexport var CLOSE_NEW_EVENT_DIALOG = '[CALENDAR APP] CLOSE NEW EVENT DIALOG';\nexport var OPEN_EDIT_EVENT_DIALOG = '[CALENDAR APP] OPEN EDIT EVENT DIALOG';\nexport var CLOSE_EDIT_EVENT_DIALOG = '[CALENDAR APP] CLOSE EDIT EVENT DIALOG';\nexport var ADD_EVENT = '[CALENDAR APP] ADD EVENT';\nexport var UPDATE_EVENT = '[CALENDAR APP] UPDATE EVENT';\nexport var REMOVE_EVENT = '[CALENDAR APP] REMOVE EVENT';\nexport function getEvents() {\n  var request = axios.get('/api/calendar-app/events');\n  return function (dispatch) {\n    return request.then(function (response) {\n      return dispatch({\n        type: GET_EVENTS,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function openNewEventDialog(data) {\n  return {\n    type: OPEN_NEW_EVENT_DIALOG,\n    data: data\n  };\n}\nexport function closeNewEventDialog() {\n  return {\n    type: CLOSE_NEW_EVENT_DIALOG\n  };\n}\nexport function openEditEventDialog(data) {\n  return {\n    type: OPEN_EDIT_EVENT_DIALOG,\n    data: data\n  };\n}\nexport function closeEditEventDialog() {\n  return {\n    type: CLOSE_EDIT_EVENT_DIALOG\n  };\n}\nexport function addEvent(newEvent) {\n  return function (dispatch, getState) {\n    var request = axios.post('/api/calendar-app/add-event', {\n      newEvent: newEvent\n    });\n    return request.then(function (response) {\n      return Promise.all([dispatch({\n        type: ADD_EVENT\n      })]).then(function () {\n        return dispatch(getEvents());\n      });\n    });\n  };\n}\nexport function updateEvent(event) {\n  return function (dispatch, getState) {\n    var request = axios.post('/api/calendar-app/update-event', {\n      event: event\n    });\n    return request.then(function (response) {\n      return Promise.all([dispatch({\n        type: UPDATE_EVENT\n      })]).then(function () {\n        return dispatch(getEvents());\n      });\n    });\n  };\n}\nexport function removeEvent(eventId) {\n  return function (dispatch, getState) {\n    var request = axios.post('/api/calendar-app/remove-event', {\n      eventId: eventId\n    });\n    return request.then(function (response) {\n      return Promise.all([dispatch({\n        type: REMOVE_EVENT\n      })]).then(function () {\n        return dispatch(getEvents());\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/calendar/store/actions/events.actions.js"],"names":["axios","GET_EVENTS","OPEN_NEW_EVENT_DIALOG","CLOSE_NEW_EVENT_DIALOG","OPEN_EDIT_EVENT_DIALOG","CLOSE_EDIT_EVENT_DIALOG","ADD_EVENT","UPDATE_EVENT","REMOVE_EVENT","getEvents","request","get","dispatch","then","response","type","payload","data","openNewEventDialog","closeNewEventDialog","openEditEventDialog","closeEditEventDialog","addEvent","newEvent","getState","post","Promise","all","updateEvent","event","removeEvent","eventId"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const GET_EVENTS = '[CALENDAR APP] GET EVENTS';\nexport const OPEN_NEW_EVENT_DIALOG = '[CALENDAR APP] OPEN NEW EVENT DIALOG';\nexport const CLOSE_NEW_EVENT_DIALOG = '[CALENDAR APP] CLOSE NEW EVENT DIALOG';\nexport const OPEN_EDIT_EVENT_DIALOG = '[CALENDAR APP] OPEN EDIT EVENT DIALOG';\nexport const CLOSE_EDIT_EVENT_DIALOG = '[CALENDAR APP] CLOSE EDIT EVENT DIALOG';\nexport const ADD_EVENT = '[CALENDAR APP] ADD EVENT';\nexport const UPDATE_EVENT = '[CALENDAR APP] UPDATE EVENT';\nexport const REMOVE_EVENT = '[CALENDAR APP] REMOVE EVENT';\n\nexport function getEvents()\n{\n    const request = axios.get('/api/calendar-app/events');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_EVENTS,\n                payload: response.data\n            })\n        );\n}\n\n\nexport function openNewEventDialog(data)\n{\n    return {\n        type: OPEN_NEW_EVENT_DIALOG,\n        data\n    }\n}\n\nexport function closeNewEventDialog()\n{\n    return {\n        type: CLOSE_NEW_EVENT_DIALOG\n    }\n}\n\nexport function openEditEventDialog(data)\n{\n    return {\n        type: OPEN_EDIT_EVENT_DIALOG,\n        data\n    }\n}\n\nexport function closeEditEventDialog()\n{\n    return {\n        type: CLOSE_EDIT_EVENT_DIALOG\n    }\n}\n\n\nexport function addEvent(newEvent)\n{\n    return (dispatch, getState) => {\n\n        const request = axios.post('/api/calendar-app/add-event', {\n            newEvent\n        });\n\n        return request.then((response) =>\n            Promise.all([\n                dispatch({\n                    type: ADD_EVENT\n                })\n            ]).then(() => dispatch(getEvents()))\n        );\n    };\n}\n\nexport function updateEvent(event)\n{\n    return (dispatch, getState) => {\n\n        const request = axios.post('/api/calendar-app/update-event', {\n            event\n        });\n\n        return request.then((response) =>\n            Promise.all([\n                dispatch({\n                    type: UPDATE_EVENT\n                })\n            ]).then(() => dispatch(getEvents()))\n        );\n    };\n}\n\nexport function removeEvent(eventId)\n{\n    return (dispatch, getState) => {\n\n        const request = axios.post('/api/calendar-app/remove-event', {\n            eventId\n        });\n\n        return request.then((response) =>\n            Promise.all([\n                dispatch({\n                    type: REMOVE_EVENT\n                })\n            ]).then(() => dispatch(getEvents()))\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}