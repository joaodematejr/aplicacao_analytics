{"ast":null,"code":"import _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/mail/mails/MailListItem.js\";\nimport React from 'react';\nimport { withStyles, Avatar, Typography, Checkbox, ListItem } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport * as Actions from '../store/actions/index';\nimport MailChip from '../MailChip';\n\nvar pathToRegexp = require('path-to-regexp');\n\nvar styles = function styles(theme) {\n  return {\n    mailItem: {\n      borderBottom: '1px solid  ' + theme.palette.divider,\n      '&.unread': {\n        background: 'rgba(0,0,0,0.03)'\n      },\n      '&.selected': {\n        '&::after': {\n          content: '\"\"',\n          position: 'absolute',\n          left: 0,\n          display: 'block',\n          height: '100%',\n          width: 3,\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n    avatar: {\n      backgroundColor: theme.palette.primary[500]\n    }\n  };\n};\n\nvar MailListItem = function MailListItem(_ref) {\n  var mail = _ref.mail,\n      labels = _ref.labels,\n      classes = _ref.classes,\n      match = _ref.match,\n      history = _ref.history,\n      selectedMailIds = _ref.selectedMailIds,\n      toggleInSelectedMails = _ref.toggleInSelectedMails;\n  var toPath = pathToRegexp.compile(match.path);\n  var checked = selectedMailIds.length > 0 && selectedMailIds.find(function (id) {\n    return id === mail.id;\n  }) !== undefined;\n  return React.createElement(ListItem, {\n    dense: true,\n    button: true,\n    onClick: function onClick() {\n      return history.push(toPath(_objectSpread({}, match.params, {\n        mailId: mail.id\n      })));\n    },\n    className: classNames(classes.mailItem, checked && \"selected\", !mail.read && \"unread\", \"py-16 pl-0 pr-8 sm:pl-8 sm:pr-24\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    tabIndex: -1,\n    disableRipple: true,\n    checked: checked,\n    onChange: function onChange() {\n      return toggleInSelectedMails(mail.id);\n    },\n    onClick: function onClick(ev) {\n      return ev.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"flex flex-1 flex-col relative overflow-hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex items-center justify-between px-16 pb-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, mail.from.avatar ? React.createElement(Avatar, {\n    className: \"mr-8\",\n    alt: mail.from.name,\n    src: mail.from.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : React.createElement(Avatar, {\n    className: classNames(classes.avatar, \"mr-8\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, mail.from.name[0]), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, mail.from.name)), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, mail.time)), React.createElement(\"div\", {\n    className: \"flex flex-col px-16 py-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: \"truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, mail.subject), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: \"truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, _.truncate(mail.message.replace(/<(?:.|\\n)*?>/gm, ''), {\n    'length': 180\n  }))), React.createElement(\"div\", {\n    className: \"flex justify-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, labels && mail.labels.map(function (label) {\n    return React.createElement(MailChip, {\n      className: \"mr-4\",\n      title: _.find(labels, {\n        id: label\n      }).title,\n      color: _.find(labels, {\n        id: label\n      }).color,\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }))));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleInSelectedMails: Actions.toggleInSelectedMails\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref2) {\n  var mailApp = _ref2.mailApp;\n  return {\n    selectedMailIds: mailApp.mails.selectedMailIds,\n    labels: mailApp.labels\n  };\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, mapDispatchToProps)(MailListItem)));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/mail/mails/MailListItem.js"],"names":["React","withStyles","Avatar","Typography","Checkbox","ListItem","withRouter","bindActionCreators","connect","classNames","_","Actions","MailChip","pathToRegexp","require","styles","theme","mailItem","borderBottom","palette","divider","background","content","position","left","display","height","width","backgroundColor","primary","main","avatar","MailListItem","mail","labels","classes","match","history","selectedMailIds","toggleInSelectedMails","toPath","compile","path","checked","length","find","id","undefined","push","params","mailId","read","ev","stopPropagation","from","name","time","subject","truncate","message","replace","map","label","title","color","mapDispatchToProps","dispatch","mapStateToProps","mailApp","mails","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withStyles, Avatar, Typography, Checkbox, ListItem} from '@material-ui/core';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport * as Actions from '../store/actions/index';\nimport MailChip from '../MailChip';\n\nconst pathToRegexp = require('path-to-regexp');\n\nconst styles = theme => ({\n    mailItem: {\n        borderBottom: '1px solid  ' + theme.palette.divider,\n\n        '&.unread'  : {\n            background: 'rgba(0,0,0,0.03)'\n        },\n        '&.selected': {\n            '&::after': {\n                content        : '\"\"',\n                position       : 'absolute',\n                left           : 0,\n                display        : 'block',\n                height         : '100%',\n                width          : 3,\n                backgroundColor: theme.palette.primary.main\n            }\n        }\n    },\n    avatar  : {\n        backgroundColor: theme.palette.primary[500]\n    }\n});\n\nconst MailListItem = ({mail, labels, classes, match, history, selectedMailIds, toggleInSelectedMails}) => {\n\n    const toPath = pathToRegexp.compile(match.path);\n    const checked = selectedMailIds.length > 0 && selectedMailIds.find(id => id === mail.id) !== undefined;\n\n    return (\n        <ListItem\n            dense\n            button\n            onClick={() => history.push(toPath(\n                {\n                    ...match.params,\n                    mailId: mail.id\n                }\n            ))}\n            className={classNames(classes.mailItem, checked && \"selected\", !mail.read && \"unread\", \"py-16 pl-0 pr-8 sm:pl-8 sm:pr-24\")}>\n\n            <Checkbox\n                tabIndex={-1}\n                disableRipple\n                checked={checked}\n                onChange={() => toggleInSelectedMails(mail.id)}\n                onClick={(ev) => ev.stopPropagation()}\n            />\n\n            <div className=\"flex flex-1 flex-col relative overflow-hidden\">\n\n                <div className=\"flex items-center justify-between px-16 pb-8\">\n                    <div className=\"flex items-center\">\n                        {mail.from.avatar ? (\n                            <Avatar className=\"mr-8\" alt={mail.from.name} src={mail.from.avatar}/>\n                        ) : (\n                            <Avatar className={classNames(classes.avatar, \"mr-8\")}>\n                                {mail.from.name[0]}\n                            </Avatar>\n                        )}\n                        <Typography variant=\"subtitle1\">{mail.from.name}</Typography>\n                    </div>\n                    <Typography variant=\"subtitle1\">{mail.time}</Typography>\n                </div>\n\n                <div className=\"flex flex-col px-16 py-0\">\n                    <Typography className=\"truncate\">{mail.subject}</Typography>\n                    <Typography color=\"textSecondary\" className=\"truncate\">{_.truncate(mail.message.replace(/<(?:.|\\n)*?>/gm, ''), {'length': 180})}</Typography>\n                </div>\n\n                <div className=\"flex justify-end\">\n                    {labels && mail.labels.map(label => (\n                        <MailChip className=\"mr-4\" title={_.find(labels, {id: label}).title} color={_.find(labels, {id: label}).color} key={label}/>\n                    ))}\n                </div>\n            </div>\n        </ListItem>\n    );\n};\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        toggleInSelectedMails: Actions.toggleInSelectedMails\n    }, dispatch);\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        selectedMailIds: mailApp.mails.selectedMailIds,\n        labels         : mailApp.labels\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(MailListItem)));\n"]},"metadata":{},"sourceType":"module"}