{"ast":null,"code":"import _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/calendar/EventDialog.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button, Dialog, DialogActions, DialogContent, Icon, IconButton, Typography, Toolbar, AppBar, FormControlLabel, Switch } from '@material-ui/core';\nimport FuseUtils from '@fuse/FuseUtils';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport _ from '@lodash';\nimport moment from 'moment';\nimport * as Actions from './store/actions';\nvar defaultEventState = {\n  id: FuseUtils.generateGUID(),\n  title: '',\n  allDay: true,\n  start: new Date(),\n  end: new Date(),\n  desc: ''\n};\n\nvar EventDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventDialog, _Component);\n\n  function EventDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EventDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EventDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, defaultEventState);\n\n    _this.handleChange = function (event) {\n      _this.setState(_.set(_objectSpread({}, _this.state), event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n    };\n\n    _this.closeComposeDialog = function () {\n      _this.props.eventDialog.type === 'edit' ? _this.props.closeEditEventDialog() : _this.props.closeNewEventDialog();\n    };\n\n    return _this;\n  }\n\n  _createClass(EventDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      /**\n       * After Dialog Open\n       */\n      if (!prevProps.eventDialog.props.open && this.props.eventDialog.props.open) {\n        /**\n         * Dialog type: 'edit'\n         * Update State\n         */\n        if (this.props.eventDialog.type === 'edit' && this.props.eventDialog.data && !_.isEqual(this.props.eventDialog.data, prevState)) {\n          this.setState(_objectSpread({}, this.props.eventDialog.data));\n        }\n        /**\n         * Dialog type: 'new'\n         * Update State\n         */\n\n\n        if (this.props.eventDialog.type === 'new') {\n          this.setState(_objectSpread({}, defaultEventState, this.props.eventDialog.data));\n        }\n      }\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var title = this.state.title;\n      return title.length > 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          eventDialog = _this$props.eventDialog,\n          addEvent = _this$props.addEvent,\n          updateEvent = _this$props.updateEvent,\n          removeEvent = _this$props.removeEvent;\n      var start = moment(this.state.start).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n      var end = moment(this.state.end).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n      return React.createElement(Dialog, Object.assign({}, eventDialog.props, {\n        onClose: this.closeComposeDialog,\n        fullWidth: true,\n        maxWidth: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(AppBar, {\n        position: \"static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"flex w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, eventDialog.type === 'new' ? 'New Event' : 'Edit Event'))), React.createElement(DialogContent, {\n        classes: {\n          root: \"p-16 pb-0 sm:p-24 sm:pb-0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"title\",\n        label: \"Title\",\n        className: \"mt-8 mb-16\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          max: end\n        },\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.handleChange,\n        variant: \"outlined\",\n        autoFocus: true,\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        className: \"mt-8 mb-16\",\n        label: \"All Day\",\n        control: React.createElement(Switch, {\n          checked: this.state.allDay,\n          id: \"allDay\",\n          name: \"allDay\",\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"start\",\n        name: \"start\",\n        label: \"Start\",\n        type: \"datetime-local\",\n        className: \"mt-8 mb-16\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          max: end\n        },\n        value: start,\n        onChange: this.handleChange,\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"end\",\n        name: \"end\",\n        label: \"End\",\n        type: \"datetime-local\",\n        className: \"mt-8 mb-16\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          min: start\n        },\n        value: end,\n        onChange: this.handleChange,\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"mt-8 mb-16\",\n        id: \"desc\",\n        label: \"Description\",\n        type: \"text\",\n        name: \"desc\",\n        value: this.state.desc,\n        onChange: this.handleChange,\n        multiline: true,\n        rows: 5,\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), eventDialog.type === 'new' ? React.createElement(DialogActions, {\n        className: \"justify-between pl-8 sm:pl-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          addEvent(_this2.state);\n\n          _this2.closeComposeDialog();\n        },\n        disabled: !this.canBeSubmitted(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Add\")) : React.createElement(DialogActions, {\n        className: \"justify-between pl-8 sm:pl-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          updateEvent(_this2.state);\n\n          _this2.closeComposeDialog();\n        },\n        disabled: !this.canBeSubmitted(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \" Save\"), React.createElement(IconButton, {\n        onClick: function onClick() {\n          removeEvent(_this2.state.id);\n\n          _this2.closeComposeDialog();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"delete\"))));\n    }\n  }]);\n\n  return EventDialog;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    closeEditEventDialog: Actions.closeEditEventDialog,\n    closeNewEventDialog: Actions.closeNewEventDialog,\n    addEvent: Actions.addEvent,\n    updateEvent: Actions.updateEvent,\n    removeEvent: Actions.removeEvent\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var calendarApp = _ref.calendarApp;\n  return {\n    eventDialog: calendarApp.events.eventDialog\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDialog);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/calendar/EventDialog.js"],"names":["React","Component","TextField","Button","Dialog","DialogActions","DialogContent","Icon","IconButton","Typography","Toolbar","AppBar","FormControlLabel","Switch","FuseUtils","bindActionCreators","connect","_","moment","Actions","defaultEventState","id","generateGUID","title","allDay","start","Date","end","desc","EventDialog","state","handleChange","event","setState","set","target","name","type","checked","value","closeComposeDialog","props","eventDialog","closeEditEventDialog","closeNewEventDialog","prevProps","prevState","snapshot","open","data","isEqual","length","addEvent","updateEvent","removeEvent","format","HTML5_FMT","DATETIME_LOCAL_SECONDS","root","shrink","max","min","canBeSubmitted","mapDispatchToProps","dispatch","mapStateToProps","calendarApp","events"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {TextField, Button, Dialog, DialogActions, DialogContent, Icon, IconButton, Typography, Toolbar, AppBar, FormControlLabel, Switch} from '@material-ui/core';\nimport FuseUtils from '@fuse/FuseUtils';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport _ from '@lodash';\nimport moment from 'moment';\nimport * as Actions from './store/actions';\n\nconst defaultEventState = {\n    id    : FuseUtils.generateGUID(),\n    title : '',\n    allDay: true,\n    start : new Date(),\n    end   : new Date(),\n    desc  : ''\n};\n\nclass EventDialog extends Component {\n\n    state = {...defaultEventState};\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        /**\n         * After Dialog Open\n         */\n        if ( !prevProps.eventDialog.props.open && this.props.eventDialog.props.open )\n        {\n            /**\n             * Dialog type: 'edit'\n             * Update State\n             */\n            if ( this.props.eventDialog.type === 'edit' &&\n                this.props.eventDialog.data &&\n                !_.isEqual(this.props.eventDialog.data, prevState) )\n            {\n                this.setState({...this.props.eventDialog.data});\n            }\n\n            /**\n             * Dialog type: 'new'\n             * Update State\n             */\n            if ( this.props.eventDialog.type === 'new' )\n            {\n                this.setState({...defaultEventState, ...this.props.eventDialog.data});\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState(_.set({...this.state}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n    };\n\n    closeComposeDialog = () => {\n        this.props.eventDialog.type === 'edit' ? this.props.closeEditEventDialog() : this.props.closeNewEventDialog();\n    };\n\n    canBeSubmitted()\n    {\n        const {title} = this.state;\n        return (\n            title.length > 0\n        );\n    }\n\n    render()\n    {\n        const {eventDialog, addEvent, updateEvent, removeEvent} = this.props;\n        const start = moment(this.state.start).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n        const end = moment(this.state.end).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n\n        return (\n            <Dialog {...eventDialog.props} onClose={this.closeComposeDialog} fullWidth maxWidth=\"xs\">\n\n                <AppBar position=\"static\">\n                    <Toolbar className=\"flex w-full\">\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                            {eventDialog.type === 'new' ? 'New Event' : 'Edit Event'}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <DialogContent classes={{root: \"p-16 pb-0 sm:p-24 sm:pb-0\"}}>\n\n                    <TextField\n                        id=\"title\"\n                        label=\"Title\"\n                        className=\"mt-8 mb-16\"\n                        InputLabelProps={{\n                            shrink: true\n                        }}\n                        inputProps={{\n                            max: end\n                        }}\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        variant=\"outlined\"\n                        autoFocus\n                        required\n                        fullWidth\n                    />\n\n                    <FormControlLabel\n                        className=\"mt-8 mb-16\"\n                        label=\"All Day\"\n                        control={\n                            <Switch\n                                checked={this.state.allDay}\n                                id=\"allDay\" name=\"allDay\" onChange={this.handleChange}\n                            />\n                        }/>\n\n                    <TextField\n                        id=\"start\"\n                        name=\"start\"\n                        label=\"Start\"\n                        type=\"datetime-local\"\n                        className=\"mt-8 mb-16\"\n                        InputLabelProps={{\n                            shrink: true\n                        }}\n                        inputProps={{\n                            max: end\n                        }}\n                        value={start}\n                        onChange={this.handleChange}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        id=\"end\"\n                        name=\"end\"\n                        label=\"End\"\n                        type=\"datetime-local\"\n                        className=\"mt-8 mb-16\"\n                        InputLabelProps={{\n                            shrink: true\n                        }}\n                        inputProps={{\n                            min: start\n                        }}\n                        value={end}\n                        onChange={this.handleChange}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        className=\"mt-8 mb-16\"\n                        id=\"desc\" label=\"Description\"\n                        type=\"text\"\n                        name=\"desc\"\n                        value={this.state.desc}\n                        onChange={this.handleChange}\n                        multiline rows={5}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n\n                {eventDialog.type === 'new' ? (\n                    <DialogActions className=\"justify-between pl-8 sm:pl-16\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                addEvent(this.state);\n                                this.closeComposeDialog();\n                            }}\n                            disabled={!this.canBeSubmitted()}\n                        >\n                            Add\n                        </Button>\n                    </DialogActions>\n                ) : (\n                    <DialogActions className=\"justify-between pl-8 sm:pl-16\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                updateEvent(this.state);\n                                this.closeComposeDialog();\n                            }}\n                            disabled={!this.canBeSubmitted()}\n                        > Save\n                        </Button>\n                        <IconButton\n                            onClick={() => {\n                                removeEvent(this.state.id);\n                                this.closeComposeDialog();\n                            }}\n                        >\n                            <Icon>delete</Icon>\n                        </IconButton>\n                    </DialogActions>\n                )}\n            </Dialog>\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeEditEventDialog: Actions.closeEditEventDialog,\n        closeNewEventDialog : Actions.closeNewEventDialog,\n        addEvent            : Actions.addEvent,\n        updateEvent         : Actions.updateEvent,\n        removeEvent         : Actions.removeEvent\n    }, dispatch);\n}\n\nfunction mapStateToProps({calendarApp})\n{\n    return {\n        eventDialog: calendarApp.events.eventDialog\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDialog);\n"]},"metadata":{},"sourceType":"module"}