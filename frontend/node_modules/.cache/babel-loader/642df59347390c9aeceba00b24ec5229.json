{"ast":null,"code":"import _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/crazyLine.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport FuseUtils from '@fuse/FuseUtils';\nvar initialState = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    backgroundColor: 'rgba(255,99,132,0.2)',\n    borderColor: 'rgba(255,99,132,1)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, Graph);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Graph)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = initialState;\n    return _this2;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      setInterval(function () {\n        var oldDataSet = _this.state.datasets[0];\n        var newData = [];\n\n        for (var x = 0; x < _this.state.labels.length; x++) {\n          newData.push(Math.floor(Math.random() * 100));\n        }\n\n        var newDataSet = _objectSpread({}, oldDataSet);\n\n        newDataSet.data = newData;\n        newDataSet.backgroundColor = FuseUtils.randomMatColor();\n        newDataSet.borderColor = FuseUtils.randomMatColor();\n        newDataSet.hoverBackgroundColor = FuseUtils.randomMatColor();\n        newDataSet.hoverBorderColor = FuseUtils.randomMatColor();\n\n        var newState = _objectSpread({}, initialState, {\n          datasets: [newDataSet]\n        });\n\n        _this.setState(newState);\n      }, 5000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Bar, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nvar CrazyDataLineExample =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(CrazyDataLineExample, _Component2);\n\n  function CrazyDataLineExample() {\n    _classCallCheck(this, CrazyDataLineExample);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CrazyDataLineExample).apply(this, arguments));\n  }\n\n  _createClass(CrazyDataLineExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"flex flex-col items-center w-full max-w-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"You can even make crazy graphs like this!\"), React.createElement(Graph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CrazyDataLineExample;\n}(Component);\n\nexport default CrazyDataLineExample;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/third-party/react-chartjs-2/examples/crazyLine.js"],"names":["React","Component","Bar","FuseUtils","initialState","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Graph","state","_this","setInterval","oldDataSet","newData","x","length","push","Math","floor","random","newDataSet","randomMatColor","newState","setState","CrazyDataLineExample"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAI,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADO;AAEjBC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,KAAK,EAAiB,kBAD1B;AAEIC,IAAAA,eAAe,EAAO,sBAF1B;AAGIC,IAAAA,WAAW,EAAW,oBAH1B;AAIIC,IAAAA,WAAW,EAAW,CAJ1B;AAKIC,IAAAA,oBAAoB,EAAE,sBAL1B;AAMIC,IAAAA,gBAAgB,EAAM,oBAN1B;AAOIC,IAAAA,IAAI,EAAkB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAP1B,GADM;AAFO,CAArB;;IAeMC,K;;;;;;;;;;;;;;;;;WAEFC,K,GAAQX,Y;;;;;;wCAGR;AAEI,UAAMY,KAAK,GAAG,IAAd;;AAEAC,MAAAA,WAAW,CAAC,YAAY;AACpB,YAAMC,UAAU,GAAGF,KAAK,CAACD,KAAN,CAAYT,QAAZ,CAAqB,CAArB,CAAnB;AACA,YAAMa,OAAO,GAAG,EAAhB;;AAEA,aAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGJ,KAAK,CAACD,KAAN,CAAYV,MAAZ,CAAmBgB,MAAxC,EAAgDD,CAAC,EAAjD,EACA;AACID,UAAAA,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACH;;AAED,YAAMC,UAAU,qBACTR,UADS,CAAhB;;AAIAQ,QAAAA,UAAU,CAACb,IAAX,GAAkBM,OAAlB;AACAO,QAAAA,UAAU,CAAClB,eAAX,GAA6BL,SAAS,CAACwB,cAAV,EAA7B;AACAD,QAAAA,UAAU,CAACjB,WAAX,GAAyBN,SAAS,CAACwB,cAAV,EAAzB;AACAD,QAAAA,UAAU,CAACf,oBAAX,GAAkCR,SAAS,CAACwB,cAAV,EAAlC;AACAD,QAAAA,UAAU,CAACd,gBAAX,GAA8BT,SAAS,CAACwB,cAAV,EAA9B;;AAEA,YAAMC,QAAQ,qBACPxB,YADO;AAEVE,UAAAA,QAAQ,EAAE,CAACoB,UAAD;AAFA,UAAd;;AAKAV,QAAAA,KAAK,CAACa,QAAN,CAAeD,QAAf;AACH,OAzBU,EAyBR,IAzBQ,CAAX;AA0BH;;;6BAGD;AACI,aACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKb,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EA1Ced,S;;IA6Cd6B,oB;;;;;;;;;;;;;6BAGF;AACI,aACI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAV8B7B,S;;AAanC,eAAe6B,oBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport FuseUtils from '@fuse/FuseUtils'\n\nconst initialState = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label               : 'My First dataset',\n            backgroundColor     : 'rgba(255,99,132,0.2)',\n            borderColor         : 'rgba(255,99,132,1)',\n            borderWidth         : 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor    : 'rgba(255,99,132,1)',\n            data                : [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nclass Graph extends Component {\n\n    state = initialState;\n\n    componentDidMount()\n    {\n\n        const _this = this;\n\n        setInterval(function () {\n            const oldDataSet = _this.state.datasets[0];\n            const newData = [];\n\n            for ( let x = 0; x < _this.state.labels.length; x++ )\n            {\n                newData.push(Math.floor(Math.random() * 100));\n            }\n\n            const newDataSet = {\n                ...oldDataSet\n            };\n\n            newDataSet.data = newData;\n            newDataSet.backgroundColor = FuseUtils.randomMatColor();\n            newDataSet.borderColor = FuseUtils.randomMatColor();\n            newDataSet.hoverBackgroundColor = FuseUtils.randomMatColor();\n            newDataSet.hoverBorderColor = FuseUtils.randomMatColor();\n\n            const newState = {\n                ...initialState,\n                datasets: [newDataSet]\n            };\n\n            _this.setState(newState);\n        }, 5000);\n    }\n\n    render()\n    {\n        return (\n            <Bar data={this.state}/>\n        );\n    }\n}\n\nclass CrazyDataLineExample extends Component {\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>You can even make crazy graphs like this!</h2>\n                <Graph/>\n            </div>\n        );\n    }\n}\n\nexport default CrazyDataLineExample;\n"]},"metadata":{},"sourceType":"module"}