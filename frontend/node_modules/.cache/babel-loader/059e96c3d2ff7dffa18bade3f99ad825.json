{"ast":null,"code":"import _toConsumableArray from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/fuse-layouts/shared-components/quickPanel/QuickPanel.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Divider, Drawer, Icon, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, ListSubheader, Switch, Typography } from '@material-ui/core';\nimport { FuseScrollbars } from '@fuse';\nimport moment from 'moment';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as Actions from './store/actions/index';\nimport withReducer from 'app/store/withReducer';\nimport reducer from './store/reducers';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: 280\n    }\n  };\n};\n\nvar QuickPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuickPanel, _Component);\n\n  function QuickPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuickPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuickPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: ['notifications']\n    };\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var checked = _this.state.checked;\n        var currentIndex = checked.indexOf(value);\n\n        var newChecked = _toConsumableArray(checked);\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        _this.setState({\n          checked: newChecked\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(QuickPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getQuickPanelData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          toggleQuickPanel = _this$props.toggleQuickPanel,\n          data = _this$props.data;\n      return React.createElement(Drawer, {\n        classes: {\n          paper: classes.root\n        },\n        open: state,\n        anchor: \"right\",\n        onClose: toggleQuickPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(FuseScrollbars, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ListSubheader, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Today\"), React.createElement(\"div\", {\n        className: \"mb-0 py-16 px-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"mb-12 text-32\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, moment().format('dddd')), React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"leading-none text-32\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, moment().format('DD')), React.createElement(Typography, {\n        className: \"leading-none text-16\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"th\"), React.createElement(Typography, {\n        className: \"leading-none text-32\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, moment().format('MMMM')))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(ListSubheader, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Events\"), data && data.events.map(function (event) {\n        return React.createElement(ListItem, {\n          key: event.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: event.title,\n          secondary: event.detail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ListSubheader, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Notes\"), data && data.notes.map(function (note) {\n        return React.createElement(ListItem, {\n          key: note.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: note.title,\n          secondary: note.detail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ListSubheader, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Quick Settings\"), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"notifications\")), React.createElement(ListItemText, {\n        primary: \"Notifications\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        color: \"primary\",\n        onChange: this.handleToggle('notifications'),\n        checked: this.state.checked.indexOf('notifications') !== -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"cloud\")), React.createElement(ListItemText, {\n        primary: \"Cloud Sync\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        color: \"secondary\",\n        onChange: this.handleToggle('cloudSync'),\n        checked: this.state.checked.indexOf('cloudSync') !== -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"brightness_high\")), React.createElement(ListItemText, {\n        primary: \"Retro Thrusters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        color: \"primary\",\n        onChange: this.handleToggle('retroThrusters'),\n        checked: this.state.checked.indexOf('retroThrusters') !== -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return QuickPanel;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleQuickPanel: Actions.toggleQuickPanel,\n    getQuickPanelData: Actions.getQuickPanelData\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var quickPanel = _ref.quickPanel;\n  return {\n    state: quickPanel.state,\n    data: quickPanel.data\n  };\n}\n\nexport default withReducer('quickPanel', reducer)(withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(QuickPanel)));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/fuse-layouts/shared-components/quickPanel/QuickPanel.js"],"names":["React","Component","withStyles","Divider","Drawer","Icon","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","ListSubheader","Switch","Typography","FuseScrollbars","moment","bindActionCreators","connect","Actions","withReducer","reducer","styles","theme","root","width","QuickPanel","state","checked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","props","getQuickPanelData","classes","toggleQuickPanel","data","paper","format","events","map","event","id","title","detail","notes","note","mapDispatchToProps","dispatch","mapStateToProps","quickPanel","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles, Divider, Drawer, Icon, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, ListSubheader, Switch, Typography} from '@material-ui/core';\nimport {FuseScrollbars} from '@fuse';\nimport moment from 'moment';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as Actions from './store/actions/index'\nimport withReducer from 'app/store/withReducer';\nimport reducer from './store/reducers';\n\nconst styles = theme => ({\n    root: {\n        width: 280\n    }\n});\n\nclass QuickPanel extends Component {\n\n    state = {\n        checked: ['notifications']\n    };\n\n    handleToggle = value => () => {\n        const {checked} = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if ( currentIndex === -1 )\n        {\n            newChecked.push(value);\n        }\n        else\n        {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n            checked: newChecked\n        });\n    };\n\n    componentDidMount()\n    {\n        this.props.getQuickPanelData();\n    }\n\n    render()\n    {\n        const {classes, state, toggleQuickPanel, data} = this.props;\n        return (\n            <Drawer\n                classes={{paper: classes.root}}\n                open={state}\n                anchor=\"right\"\n                onClose={toggleQuickPanel}\n            >\n                <FuseScrollbars>\n\n                    <ListSubheader component=\"div\">Today</ListSubheader>\n\n                    <div className=\"mb-0 py-16 px-24\">\n                        <Typography className=\"mb-12 text-32\" color=\"textSecondary\">\n                            {moment().format('dddd')}\n                        </Typography>\n                        <div className=\"flex\">\n                            <Typography className=\"leading-none text-32\" color=\"textSecondary\">{moment().format('DD')}</Typography>\n                            <Typography className=\"leading-none text-16\" color=\"textSecondary\">th</Typography>\n                            <Typography className=\"leading-none text-32\" color=\"textSecondary\">{moment().format('MMMM')}</Typography>\n                        </div>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <ListSubheader component=\"div\">Events</ListSubheader>\n                        {data && data.events.map(event => (\n                            <ListItem key={event.id}>\n                                <ListItemText\n                                    primary={event.title}\n                                    secondary={event.detail}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider/>\n                    <List>\n                        <ListSubheader component=\"div\">Notes</ListSubheader>\n                        {data && data.notes.map(note => (\n                            <ListItem key={note.id}>\n                                <ListItemText\n                                    primary={note.title}\n                                    secondary={note.detail}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider/>\n                    <List>\n                        <ListSubheader component=\"div\">Quick Settings</ListSubheader>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon>notifications</Icon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Notifications\"/>\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    color=\"primary\"\n                                    onChange={this.handleToggle('notifications')}\n                                    checked={this.state.checked.indexOf('notifications') !== -1}\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon>cloud</Icon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Cloud Sync\"/>\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    color=\"secondary\"\n                                    onChange={this.handleToggle('cloudSync')}\n                                    checked={this.state.checked.indexOf('cloudSync') !== -1}\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon>brightness_high</Icon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Retro Thrusters\"/>\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    color=\"primary\"\n                                    onChange={this.handleToggle('retroThrusters')}\n                                    checked={this.state.checked.indexOf('retroThrusters') !== -1}\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    </List>\n                </FuseScrollbars>\n            </Drawer>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        toggleQuickPanel : Actions.toggleQuickPanel,\n        getQuickPanelData: Actions.getQuickPanelData\n    }, dispatch);\n}\n\nfunction mapStateToProps({quickPanel})\n{\n    return {\n        state: quickPanel.state,\n        data : quickPanel.data\n    }\n}\n\nexport default withReducer('quickPanel', reducer)(withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(QuickPanel)));\n"]},"metadata":{},"sourceType":"module"}