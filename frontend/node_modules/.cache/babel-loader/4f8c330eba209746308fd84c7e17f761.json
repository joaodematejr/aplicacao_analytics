{"ast":null,"code":"import _defineProperty from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/selection-controls/CustomizedSwitches.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nvar styles = function styles(theme) {\n  return {\n    colorSwitchBase: {\n      color: purple[300],\n      '&$colorChecked': {\n        color: purple[500],\n        '& + $colorBar': {\n          backgroundColor: purple[500]\n        }\n      }\n    },\n    colorBar: {},\n    colorChecked: {},\n    iOSSwitchBase: {\n      '&$iOSChecked': {\n        color: theme.palette.common.white,\n        '& + $iOSBar': {\n          backgroundColor: '#52d869'\n        }\n      },\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n        easing: theme.transitions.easing.sharp\n      })\n    },\n    iOSChecked: {\n      transform: 'translateX(15px)',\n      '& + $iOSBar': {\n        opacity: 1,\n        border: 'none'\n      }\n    },\n    iOSBar: {\n      borderRadius: 13,\n      width: 42,\n      height: 26,\n      marginTop: -13,\n      marginLeft: -21,\n      border: 'solid 1px',\n      borderColor: theme.palette.grey[400],\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border'])\n    },\n    iOSIcon: {\n      width: 24,\n      height: 24\n    },\n    iOSIconChecked: {\n      boxShadow: theme.shadows[1]\n    }\n  };\n};\n\nvar CustomizedSwitches =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomizedSwitches, _React$Component);\n\n  function CustomizedSwitches() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomizedSwitches);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomizedSwitches)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checkedA: true,\n      checkedB: true\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomizedSwitches, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedA,\n          onChange: this.handleChange('checkedA'),\n          value: \"checkedA\",\n          classes: {\n            switchBase: classes.colorSwitchBase,\n            checked: classes.colorChecked,\n            bar: classes.colorBar\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        label: \"Custom color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          classes: {\n            switchBase: classes.iOSSwitchBase,\n            bar: classes.iOSBar,\n            icon: classes.iOSIcon,\n            iconChecked: classes.iOSIconChecked,\n            checked: classes.iOSChecked\n          },\n          disableRipple: true,\n          checked: this.state.checkedB,\n          onChange: this.handleChange('checkedB'),\n          value: \"checkedB\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }),\n        label: \"iOS style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomizedSwitches;\n}(React.Component);\n\nCustomizedSwitches.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedSwitches);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/frontend/src/app/main/components/material-ui/material-ui-examples/selection-controls/CustomizedSwitches.js"],"names":["React","PropTypes","withStyles","purple","FormGroup","FormControlLabel","Switch","styles","theme","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","iOSSwitchBase","palette","common","white","transition","transitions","create","duration","shortest","easing","sharp","iOSChecked","transform","opacity","border","iOSBar","borderRadius","width","height","marginTop","marginLeft","borderColor","grey","iOSIcon","iOSIconChecked","boxShadow","shadows","CustomizedSwitches","state","checkedA","checkedB","handleChange","name","event","setState","target","checked","classes","props","switchBase","bar","icon","iconChecked","Component","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAEP,MAAM,CAAC,GAAD,CADE;AAEf,wBAAkB;AAChBO,QAAAA,KAAK,EAAEP,MAAM,CAAC,GAAD,CADG;AAEhB,yBAAiB;AACfQ,UAAAA,eAAe,EAAER,MAAM,CAAC,GAAD;AADR;AAFD;AAFH,KADM;AAUvBS,IAAAA,QAAQ,EAAE,EAVa;AAWvBC,IAAAA,YAAY,EAAE,EAXS;AAYvBC,IAAAA,aAAa,EAAE;AACb,sBAAgB;AACdJ,QAAAA,KAAK,EAAEF,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBC,KADd;AAEd,uBAAe;AACbN,UAAAA,eAAe,EAAE;AADJ;AAFD,OADH;AAObO,MAAAA,UAAU,EAAEV,KAAK,CAACW,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAChDC,QAAAA,QAAQ,EAAEb,KAAK,CAACW,WAAN,CAAkBE,QAAlB,CAA2BC,QADW;AAEhDC,QAAAA,MAAM,EAAEf,KAAK,CAACW,WAAN,CAAkBI,MAAlB,CAAyBC;AAFe,OAAtC;AAPC,KAZQ;AAwBvBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE,kBADD;AAEV,qBAAe;AACbC,QAAAA,OAAO,EAAE,CADI;AAEbC,QAAAA,MAAM,EAAE;AAFK;AAFL,KAxBW;AA+BvBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,SAAS,EAAE,CAAC,EAJN;AAKNC,MAAAA,UAAU,EAAE,CAAC,EALP;AAMNN,MAAAA,MAAM,EAAE,WANF;AAONO,MAAAA,WAAW,EAAE3B,KAAK,CAACO,OAAN,CAAcqB,IAAd,CAAmB,GAAnB,CAPP;AAQNzB,MAAAA,eAAe,EAAEH,KAAK,CAACO,OAAN,CAAcqB,IAAd,CAAmB,EAAnB,CARX;AASNT,MAAAA,OAAO,EAAE,CATH;AAUNT,MAAAA,UAAU,EAAEV,KAAK,CAACW,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,kBAAD,EAAqB,QAArB,CAAzB;AAVN,KA/Be;AA2CvBiB,IAAAA,OAAO,EAAE;AACPN,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,MAAM,EAAE;AAFD,KA3Cc;AA+CvBM,IAAAA,cAAc,EAAE;AACdC,MAAAA,SAAS,EAAE/B,KAAK,CAACgC,OAAN,CAAc,CAAd;AADG;AA/CO,GAAL;AAAA,CAApB;;IAoDMC,kB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAKRC,Y,GAAe,UAAAC,IAAI;AAAA,aAAI,UAAAC,KAAK,EAAI;AAC9B,cAAKC,QAAL,qBAAiBF,IAAjB,EAAwBC,KAAK,CAACE,MAAN,CAAaC,OAArC;AACD,OAFkB;AAAA,K;;;;;;;6BAIV;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAGP,aACE,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EACL,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,QADtB;AAEE,UAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkB,UAAlB,CAFZ;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,OAAO,EAAE;AACPQ,YAAAA,UAAU,EAAEF,OAAO,CAAC1C,eADb;AAEPyC,YAAAA,OAAO,EAAEC,OAAO,CAACtC,YAFV;AAGPyC,YAAAA,GAAG,EAAEH,OAAO,CAACvC;AAHN,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaE,QAAA,KAAK,EAAC,cAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAgBE,oBAAC,gBAAD;AACE,QAAA,OAAO,EACL,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE;AACPyC,YAAAA,UAAU,EAAEF,OAAO,CAACrC,aADb;AAEPwC,YAAAA,GAAG,EAAEH,OAAO,CAACtB,MAFN;AAGP0B,YAAAA,IAAI,EAAEJ,OAAO,CAACd,OAHP;AAIPmB,YAAAA,WAAW,EAAEL,OAAO,CAACb,cAJd;AAKPY,YAAAA,OAAO,EAAEC,OAAO,CAAC1B;AALV,WADX;AAQE,UAAA,aAAa,MARf;AASE,UAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWE,QATtB;AAUE,UAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkB,UAAlB,CAVZ;AAWE,UAAA,KAAK,EAAC,UAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBE,QAAA,KAAK,EAAC,WAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,CADF;AAqCD;;;;EAlD8B7C,KAAK,CAACyD,S;;AAqDvChB,kBAAkB,CAACiB,SAAnB,GAA+B;AAC7BP,EAAAA,OAAO,EAAElD,SAAS,CAAC0D,MAAV,CAAiBC;AADG,CAA/B;AAIA,eAAe1D,UAAU,CAACK,MAAD,CAAV,CAAmBkC,kBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  colorSwitchBase: {\n    color: purple[300],\n    '&$colorChecked': {\n      color: purple[500],\n      '& + $colorBar': {\n        backgroundColor: purple[500],\n      },\n    },\n  },\n  colorBar: {},\n  colorChecked: {},\n  iOSSwitchBase: {\n    '&$iOSChecked': {\n      color: theme.palette.common.white,\n      '& + $iOSBar': {\n        backgroundColor: '#52d869',\n      },\n    },\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  iOSChecked: {\n    transform: 'translateX(15px)',\n    '& + $iOSBar': {\n      opacity: 1,\n      border: 'none',\n    },\n  },\n  iOSBar: {\n    borderRadius: 13,\n    width: 42,\n    height: 26,\n    marginTop: -13,\n    marginLeft: -21,\n    border: 'solid 1px',\n    borderColor: theme.palette.grey[400],\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  iOSIcon: {\n    width: 24,\n    height: 24,\n  },\n  iOSIconChecked: {\n    boxShadow: theme.shadows[1],\n  },\n});\n\nclass CustomizedSwitches extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedA}\n              onChange={this.handleChange('checkedA')}\n              value=\"checkedA\"\n              classes={{\n                switchBase: classes.colorSwitchBase,\n                checked: classes.colorChecked,\n                bar: classes.colorBar,\n              }}\n            />\n          }\n          label=\"Custom color\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                switchBase: classes.iOSSwitchBase,\n                bar: classes.iOSBar,\n                icon: classes.iOSIcon,\n                iconChecked: classes.iOSIconChecked,\n                checked: classes.iOSChecked,\n              }}\n              disableRipple\n              checked={this.state.checkedB}\n              onChange={this.handleChange('checkedB')}\n              value=\"checkedB\"\n            />\n          }\n          label=\"iOS style\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCustomizedSwitches.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedSwitches);\n"]},"metadata":{},"sourceType":"module"}