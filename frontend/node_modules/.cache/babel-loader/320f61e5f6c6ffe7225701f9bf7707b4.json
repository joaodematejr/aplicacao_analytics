{"ast":null,"code":"import axios from 'axios';\nimport history from 'history.js';\nimport BoardModel from '../../model/BoardModel';\nexport var GET_BOARDS = '[SCRUMBOARD APP] GET BOARDS';\nexport var RESET_BOARDS = '[SCRUMBOARD APP] RESET BOARDS';\nexport var NEW_BOARD = '[SCRUMBOARD APP] NEW BOARD';\nexport function getBoards() {\n  var request = axios.get('/api/scrumboard-app/boards');\n  return function (dispatch) {\n    return request.then(function (response) {\n      return dispatch({\n        type: GET_BOARDS,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function resetBoards() {\n  return {\n    type: RESET_BOARDS\n  };\n}\nexport function newBoard(board) {\n  var request = axios.post('/api/scrumboard-app/board/new', {\n    board: board || new BoardModel()\n  });\n  return function (dispatch) {\n    return request.then(function (response) {\n      var board = response.data;\n      history.push({\n        pathname: '/apps/scrumboard/boards/' + board.id + '/' + board.handle\n      });\n      return dispatch({\n        type: NEW_BOARD,\n        board: board\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/store/actions/boards.actions.js"],"names":["axios","history","BoardModel","GET_BOARDS","RESET_BOARDS","NEW_BOARD","getBoards","request","get","dispatch","then","response","type","payload","data","resetBoards","newBoard","board","post","push","pathname","id","handle"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAO,IAAMC,UAAU,GAAG,6BAAnB;AACP,OAAO,IAAMC,YAAY,GAAG,+BAArB;AACP,OAAO,IAAMC,SAAS,GAAG,4BAAlB;AAEP,OAAO,SAASC,SAAT,GACP;AACI,MAAMC,OAAO,GAAGP,KAAK,CAACQ,GAAN,CAAU,4BAAV,CAAhB;AAEA,SAAO,UAACC,QAAD;AAAA,WACHF,OAAO,CAACG,IAAR,CAAa,UAACC,QAAD;AAAA,aACTF,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAKT,UADJ;AAELU,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CADC;AAAA,KAAb,CADG;AAAA,GAAP;AAOH;AAED,OAAO,SAASC,WAAT,GACP;AACI,SAAO;AACHH,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH;AAED,OAAO,SAASY,QAAT,CAAkBC,KAAlB,EACP;AACI,MAAMV,OAAO,GAAGP,KAAK,CAACkB,IAAN,CAAW,+BAAX,EAA4C;AACxDD,IAAAA,KAAK,EAAEA,KAAK,IAAI,IAAIf,UAAJ;AADwC,GAA5C,CAAhB;AAIA,SAAO,UAACO,QAAD;AAAA,WACHF,OAAO,CAACG,IAAR,CAAa,UAACC,QAAD,EAAc;AACnB,UAAMM,KAAK,GAAGN,QAAQ,CAACG,IAAvB;AACAb,MAAAA,OAAO,CAACkB,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAE,6BAA6BH,KAAK,CAACI,EAAnC,GAAwC,GAAxC,GAA8CJ,KAAK,CAACK;AADrD,OAAb;AAGA,aAAOb,QAAQ,CAAC;AACZG,QAAAA,IAAI,EAAEP,SADM;AAEZY,QAAAA,KAAK,EAALA;AAFY,OAAD,CAAf;AAIH,KATL,CADG;AAAA,GAAP;AAYH","sourcesContent":["import axios from 'axios';\nimport history from 'history.js';\nimport BoardModel from '../../model/BoardModel';\n\nexport const GET_BOARDS = '[SCRUMBOARD APP] GET BOARDS';\nexport const RESET_BOARDS = '[SCRUMBOARD APP] RESET BOARDS';\nexport const NEW_BOARD = '[SCRUMBOARD APP] NEW BOARD';\n\nexport function getBoards()\n{\n    const request = axios.get('/api/scrumboard-app/boards');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_BOARDS,\n                payload: response.data\n            })\n        );\n}\n\nexport function resetBoards()\n{\n    return {\n        type: RESET_BOARDS\n    }\n}\n\nexport function newBoard(board)\n{\n    const request = axios.post('/api/scrumboard-app/board/new', {\n        board: board || new BoardModel()\n    });\n\n    return (dispatch) =>\n        request.then((response) => {\n                const board = response.data;\n                history.push({\n                    pathname: '/apps/scrumboard/boards/' + board.id + '/' + board.handle\n                });\n                return dispatch({\n                    type: NEW_BOARD,\n                    board\n                })\n            }\n        );\n}\n"]},"metadata":{},"sourceType":"module"}