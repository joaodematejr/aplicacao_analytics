{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/fuse-layouts/shared-components/SettingsPanel.js\";\nimport React, { Component } from 'react';\nimport { Button, Typography, Dialog, Icon, IconButton, Slide, withStyles } from '@material-ui/core';\nimport { FuseScrollbars, FuseSettings } from '@fuse';\nimport { red } from '@material-ui/core/colors';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"left\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      position: 'absolute',\n      right: 0,\n      top: 160,\n      minWidth: 48,\n      width: 48,\n      height: 48,\n      opacity: .9,\n      padding: 0,\n      borderBottomRightRadius: 0,\n      borderTopRightRadius: 0,\n      zIndex: 999,\n      color: theme.palette.getContrastText(red[500]),\n      backgroundColor: red[500],\n      '&:hover': {\n        backgroundColor: red[500],\n        opacity: 1\n      }\n    },\n    '@keyframes rotating': {\n      from: {\n        transform: 'rotate(0deg)'\n      },\n      to: {\n        transform: 'rotate(360deg)'\n      }\n    },\n    buttonIcon: {\n      animation: 'rotating 3s linear infinite'\n    },\n    dialogPaper: {\n      position: 'fixed',\n      width: 380,\n      maxWidth: '90vw',\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      top: 0,\n      height: '100%',\n      minHeight: '100%',\n      bottom: 0,\n      right: 0,\n      margin: 0,\n      zIndex: 1000,\n      borderRadius: 0\n    }\n  };\n};\n\nvar SettingsPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SettingsPanel, _Component);\n\n  function SettingsPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SettingsPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SettingsPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsPanel, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"fuse-settings\",\n        className: classes.button,\n        variant: \"contained\",\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.buttonIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"settings\")), React.createElement(Dialog, {\n        TransitionComponent: Transition,\n        \"aria-labelledby\": \"settings-panel\",\n        \"aria-describedby\": \"settings\",\n        open: this.state.open,\n        keepMounted: true,\n        onClose: this.handleClose,\n        BackdropProps: {\n          invisible: true\n        },\n        classes: {\n          paper: classes.dialogPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FuseScrollbars, {\n        className: \"p-24 sm:p-32\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"fixed pin-t pin-r z-10\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"close\")), React.createElement(Typography, {\n        className: \"mb-32\",\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Theme Settings\"), React.createElement(FuseSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SettingsPanel;\n}(Component);\n\nexport default withStyles(styles)(SettingsPanel);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/fuse-layouts/shared-components/SettingsPanel.js"],"names":["React","Component","Button","Typography","Dialog","Icon","IconButton","Slide","withStyles","FuseScrollbars","FuseSettings","red","Transition","props","styles","theme","button","position","right","top","minWidth","width","height","opacity","padding","borderBottomRightRadius","borderTopRightRadius","zIndex","color","palette","getContrastText","backgroundColor","from","transform","to","buttonIcon","animation","dialogPaper","maxWidth","background","paper","boxShadow","shadows","minHeight","bottom","margin","borderRadius","SettingsPanel","state","open","handleOpen","setState","handleClose","classes","invisible"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Typography, Dialog, Icon, IconButton, Slide, withStyles} from '@material-ui/core';\nimport {FuseScrollbars, FuseSettings} from '@fuse';\nimport {red} from '@material-ui/core/colors';\n\nfunction Transition(props)\n{\n    return <Slide direction=\"left\" {...props} />;\n}\n\nconst styles = theme => ({\n    button               : {\n        position               : 'absolute',\n        right                  : 0,\n        top                    : 160,\n        minWidth               : 48,\n        width                  : 48,\n        height                 : 48,\n        opacity                : .9,\n        padding                : 0,\n        borderBottomRightRadius: 0,\n        borderTopRightRadius   : 0,\n        zIndex                 : 999,\n        color                  : theme.palette.getContrastText(red[500]),\n        backgroundColor        : red[500],\n        '&:hover'              : {\n            backgroundColor: red[500],\n            opacity        : 1\n        }\n    },\n    '@keyframes rotating': {\n        from: {\n            transform: 'rotate(0deg)'\n        },\n        to  : {\n            transform: 'rotate(360deg)'\n        }\n    },\n    buttonIcon           : {\n        animation: 'rotating 3s linear infinite'\n    },\n    dialogPaper          : {\n        position       : 'fixed',\n        width          : 380,\n        maxWidth       : '90vw',\n        backgroundColor: theme.palette.background.paper,\n        boxShadow      : theme.shadows[5],\n        top            : 0,\n        height         : '100%',\n        minHeight      : '100%',\n        bottom         : 0,\n        right          : 0,\n        margin         : 0,\n        zIndex         : 1000,\n        borderRadius   : 0\n    }\n});\n\nclass SettingsPanel extends Component {\n\n    state = {\n        open: false\n    };\n\n    handleOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        return (\n            <React.Fragment>\n                <Button id=\"fuse-settings\" className={classes.button} variant=\"contained\" onClick={this.handleOpen}>\n                    <Icon className={classes.buttonIcon}>settings</Icon>\n                </Button>\n\n                <Dialog\n                    TransitionComponent={Transition}\n                    aria-labelledby=\"settings-panel\"\n                    aria-describedby=\"settings\"\n                    open={this.state.open}\n                    keepMounted\n                    onClose={this.handleClose}\n                    BackdropProps={{invisible: true}}\n                    classes={{\n                        paper: classes.dialogPaper\n                    }}\n                >\n                    <FuseScrollbars className=\"p-24 sm:p-32\">\n                        <IconButton className=\"fixed pin-t pin-r z-10\" onClick={this.handleClose}>\n                            <Icon>close</Icon>\n                        </IconButton>\n\n                        <Typography className=\"mb-32\" variant=\"h6\">Theme Settings</Typography>\n\n                        <FuseSettings/>\n\n                    </FuseScrollbars>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SettingsPanel);\n"]},"metadata":{},"sourceType":"module"}