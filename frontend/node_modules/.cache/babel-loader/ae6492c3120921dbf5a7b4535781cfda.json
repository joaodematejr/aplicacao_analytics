{"ast":null,"code":"import _toConsumableArray from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Actions from '../actions';\nimport _ from '@lodash';\nvar initialState = {\n  entities: [],\n  searchText: '',\n  selectedContactIds: [],\n  routeParams: {},\n  contactDialog: {\n    type: 'new',\n    props: {\n      open: false\n    },\n    data: null\n  }\n};\n\nvar contactsReducer = function contactsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.GET_CONTACTS:\n      {\n        return _objectSpread({}, state, {\n          entities: _.keyBy(action.payload, 'id'),\n          routeParams: action.routeParams\n        });\n      }\n\n    case Actions.SET_SEARCH_TEXT:\n      {\n        return _objectSpread({}, state, {\n          searchText: action.searchText\n        });\n      }\n\n    case Actions.TOGGLE_IN_SELECTED_CONTACTS:\n      {\n        var contactId = action.contactId;\n\n        var selectedContactIds = _toConsumableArray(state.selectedContactIds);\n\n        if (selectedContactIds.find(function (id) {\n          return id === contactId;\n        }) !== undefined) {\n          selectedContactIds = selectedContactIds.filter(function (id) {\n            return id !== contactId;\n          });\n        } else {\n          selectedContactIds = [].concat(_toConsumableArray(selectedContactIds), [contactId]);\n        }\n\n        return _objectSpread({}, state, {\n          selectedContactIds: selectedContactIds\n        });\n      }\n\n    case Actions.SELECT_ALL_CONTACTS:\n      {\n        var arr = Object.keys(state.entities).map(function (k) {\n          return state.entities[k];\n        });\n\n        var _selectedContactIds = arr.map(function (contact) {\n          return contact.id;\n        });\n\n        return _objectSpread({}, state, {\n          selectedContactIds: _selectedContactIds\n        });\n      }\n\n    case Actions.DESELECT_ALL_CONTACTS:\n      {\n        return _objectSpread({}, state, {\n          selectedContactIds: []\n        });\n      }\n\n    case Actions.OPEN_NEW_CONTACT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          contactDialog: {\n            type: 'new',\n            props: {\n              open: true\n            },\n            data: null\n          }\n        });\n      }\n\n    case Actions.CLOSE_NEW_CONTACT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          contactDialog: {\n            type: 'new',\n            props: {\n              open: false\n            },\n            data: null\n          }\n        });\n      }\n\n    case Actions.OPEN_EDIT_CONTACT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          contactDialog: {\n            type: 'edit',\n            props: {\n              open: true\n            },\n            data: action.data\n          }\n        });\n      }\n\n    case Actions.CLOSE_EDIT_CONTACT_DIALOG:\n      {\n        return _objectSpread({}, state, {\n          contactDialog: {\n            type: 'edit',\n            props: {\n              open: false\n            },\n            data: null\n          }\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default contactsReducer;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/contacts/store/reducers/contacts.reducer.js"],"names":["Actions","_","initialState","entities","searchText","selectedContactIds","routeParams","contactDialog","type","props","open","data","contactsReducer","state","action","GET_CONTACTS","keyBy","payload","SET_SEARCH_TEXT","TOGGLE_IN_SELECTED_CONTACTS","contactId","find","id","undefined","filter","SELECT_ALL_CONTACTS","arr","Object","keys","map","k","contact","DESELECT_ALL_CONTACTS","OPEN_NEW_CONTACT_DIALOG","CLOSE_NEW_CONTACT_DIALOG","OPEN_EDIT_CONTACT_DIALOG","CLOSE_EDIT_CONTACT_DIALOG"],"mappings":"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","sourcesContent":["import * as Actions from '../actions';\nimport _ from '@lodash';\n\nconst initialState = {\n    entities          : [],\n    searchText        : '',\n    selectedContactIds: [],\n    routeParams       : {},\n    contactDialog     : {\n        type : 'new',\n        props: {\n            open: false\n        },\n        data : null\n    }\n};\n\nconst contactsReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_CONTACTS:\n        {\n            return {\n                ...state,\n                entities   : _.keyBy(action.payload, 'id'),\n                routeParams: action.routeParams\n            };\n        }\n        case Actions.SET_SEARCH_TEXT:\n        {\n            return {\n                ...state,\n                searchText: action.searchText\n            };\n        }\n        case Actions.TOGGLE_IN_SELECTED_CONTACTS:\n        {\n\n            const contactId = action.contactId;\n\n            let selectedContactIds = [...state.selectedContactIds];\n\n            if ( selectedContactIds.find(id => id === contactId) !== undefined )\n            {\n                selectedContactIds = selectedContactIds.filter(id => id !== contactId);\n            }\n            else\n            {\n                selectedContactIds = [...selectedContactIds, contactId];\n            }\n\n            return {\n                ...state,\n                selectedContactIds: selectedContactIds\n            };\n        }\n        case Actions.SELECT_ALL_CONTACTS:\n        {\n            const arr = Object.keys(state.entities).map(k => state.entities[k]);\n\n            const selectedContactIds = arr.map(contact => contact.id);\n\n            return {\n                ...state,\n                selectedContactIds: selectedContactIds\n            };\n        }\n        case Actions.DESELECT_ALL_CONTACTS:\n        {\n            return {\n                ...state,\n                selectedContactIds: []\n            };\n        }\n        case Actions.OPEN_NEW_CONTACT_DIALOG:\n        {\n            return {\n                ...state,\n                contactDialog: {\n                    type : 'new',\n                    props: {\n                        open: true\n                    },\n                    data : null\n                }\n            };\n        }\n        case Actions.CLOSE_NEW_CONTACT_DIALOG:\n        {\n            return {\n                ...state,\n                contactDialog: {\n                    type : 'new',\n                    props: {\n                        open: false\n                    },\n                    data : null\n                }\n            };\n        }\n        case Actions.OPEN_EDIT_CONTACT_DIALOG:\n        {\n            return {\n                ...state,\n                contactDialog: {\n                    type : 'edit',\n                    props: {\n                        open: true\n                    },\n                    data : action.data\n                }\n            };\n        }\n        case Actions.CLOSE_EDIT_CONTACT_DIALOG:\n        {\n            return {\n                ...state,\n                contactDialog: {\n                    type : 'edit',\n                    props: {\n                        open: false\n                    },\n                    data : null\n                }\n            };\n        }\n        default:\n        {\n            return state;\n        }\n    }\n};\n\nexport default contactsReducer;\n"]},"metadata":{},"sourceType":"module"}