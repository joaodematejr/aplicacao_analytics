{"ast":null,"code":"var _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/todo/TodoListItem.js\";\nimport React from 'react';\nimport { withStyles, IconButton, Icon, Typography, Checkbox, ListItem } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport amber from '@material-ui/core/colors/amber';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport * as Actions from './store/actions';\nimport TodoChip from './TodoChip';\n\nvar styles = function styles(theme) {\n  return {\n    todoItem: {\n      '&.completed': {\n        background: 'rgba(0,0,0,0.03)',\n        '& .todo-title, & .todo-notes': {\n          textDecoration: 'line-through'\n        }\n      }\n    }\n  };\n};\n\nvar TodoListItem = function TodoListItem(_ref) {\n  var todo = _ref.todo,\n      labels = _ref.labels,\n      classes = _ref.classes,\n      openEditTodoDialog = _ref.openEditTodoDialog,\n      toggleImportant = _ref.toggleImportant,\n      toggleStarred = _ref.toggleStarred,\n      toggleCompleted = _ref.toggleCompleted;\n  return React.createElement(ListItem, {\n    onClick: function onClick(ev) {\n      ev.preventDefault();\n      openEditTodoDialog(todo);\n    },\n    dense: true,\n    button: true,\n    className: classNames(classes.todoItem, {\n      \"completed\": todo.completed\n    }, \"border-solid border-b-1 py-16  px-0 sm:px-8\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    tabIndex: -1,\n    disableRipple: true,\n    checked: todo.completed,\n    onChange: function onChange() {\n      return toggleCompleted(todo);\n    },\n    onClick: function onClick(ev) {\n      return ev.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"flex flex-1 flex-col relative overflow-hidden pl-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: \"todo-title truncate\",\n    color: todo.completed ? \"textSecondary\" : \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, todo.title), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: \"todo-notes truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, _.truncate(todo.notes.replace(/<(?:.|\\n)*?>/gm, ''), {\n    'length': 180\n  })), React.createElement(\"div\", {\n    className: classNames(classes.labels, \"flex mt-8\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, todo.labels.map(function (label) {\n    return React.createElement(TodoChip, {\n      className: \"mr-4\",\n      title: _.find(labels, {\n        id: label\n      }).title,\n      color: _.find(labels, {\n        id: label\n      }).color,\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }))), React.createElement(\"div\", {\n    className: \"px-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: function onClick(ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n      toggleImportant(todo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, todo.important ? React.createElement(Icon, {\n    style: {\n      color: red[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"error\") : React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"error_outline\")), React.createElement(IconButton, {\n    onClick: function onClick(ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n      toggleStarred(todo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, todo.starred ? React.createElement(Icon, {\n    style: {\n      color: amber[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"star\") : React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"star_outline\"))));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleCompleted: Actions.toggleCompleted,\n    toggleImportant: Actions.toggleImportant,\n    toggleStarred: Actions.toggleStarred,\n    openEditTodoDialog: Actions.openEditTodoDialog\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref2) {\n  var todoApp = _ref2.todoApp;\n  return {\n    labels: todoApp.labels\n  };\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TodoListItem)));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/todo/TodoListItem.js"],"names":["React","withStyles","IconButton","Icon","Typography","Checkbox","ListItem","red","amber","withRouter","bindActionCreators","connect","classNames","_","Actions","TodoChip","styles","theme","todoItem","background","textDecoration","TodoListItem","todo","labels","classes","openEditTodoDialog","toggleImportant","toggleStarred","toggleCompleted","ev","preventDefault","completed","stopPropagation","title","truncate","notes","replace","map","label","find","id","color","important","starred","mapDispatchToProps","dispatch","mapStateToProps","todoApp","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withStyles, IconButton, Icon, Typography, Checkbox, ListItem} from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport amber from '@material-ui/core/colors/amber';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport * as Actions from './store/actions';\nimport TodoChip from './TodoChip';\n\nconst styles = theme => ({\n    todoItem: {\n        '&.completed': {\n            background                    : 'rgba(0,0,0,0.03)',\n            '& .todo-title, & .todo-notes': {\n                textDecoration: 'line-through'\n            }\n        }\n    }\n});\n\nconst TodoListItem = ({todo, labels, classes, openEditTodoDialog, toggleImportant, toggleStarred, toggleCompleted}) => {\n    return (\n        <ListItem\n            onClick={(ev) => {\n                ev.preventDefault();\n                openEditTodoDialog(todo);\n            }}\n            dense\n            button\n            className={classNames(classes.todoItem, {\"completed\": todo.completed}, \"border-solid border-b-1 py-16  px-0 sm:px-8\")}\n        >\n\n            <Checkbox\n                tabIndex={-1}\n                disableRipple\n                checked={todo.completed}\n                onChange={() => toggleCompleted(todo)}\n                onClick={(ev) => ev.stopPropagation()}\n            />\n\n            <div className=\"flex flex-1 flex-col relative overflow-hidden pl-8\">\n\n                <Typography\n                    variant=\"subtitle1\"\n                    className=\"todo-title truncate\"\n                    color={todo.completed ? \"textSecondary\" : \"default\"}\n                >\n                    {todo.title}\n                </Typography>\n\n                <Typography\n                    color=\"textSecondary\"\n                    className=\"todo-notes truncate\"\n                >\n                    {_.truncate(todo.notes.replace(/<(?:.|\\n)*?>/gm, ''), {'length': 180})}\n                </Typography>\n\n                <div className={classNames(classes.labels, \"flex mt-8\")}>\n                    {todo.labels.map(label => (\n                        <TodoChip\n                            className=\"mr-4\"\n                            title={_.find(labels, {id: label}).title}\n                            color={_.find(labels, {id: label}).color}\n                            key={label}\n                        />\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"px-8\">\n                <IconButton onClick={(ev) => {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    toggleImportant(todo)\n                }}>\n                    {todo.important ? (\n                        <Icon style={{color: red[500]}}>error</Icon>\n                    ) : (\n                        <Icon>error_outline</Icon>\n                    )}\n                </IconButton>\n                <IconButton onClick={(ev) => {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    toggleStarred(todo)\n                }}>\n                    {todo.starred ? (\n                        <Icon style={{color: amber[500]}}>star</Icon>\n                    ) : (\n                        <Icon>star_outline</Icon>\n                    )}\n                </IconButton>\n            </div>\n        </ListItem>\n    );\n};\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        toggleCompleted   : Actions.toggleCompleted,\n        toggleImportant   : Actions.toggleImportant,\n        toggleStarred     : Actions.toggleStarred,\n        openEditTodoDialog: Actions.openEditTodoDialog\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        labels: todoApp.labels\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TodoListItem)));\n"]},"metadata":{},"sourceType":"module"}