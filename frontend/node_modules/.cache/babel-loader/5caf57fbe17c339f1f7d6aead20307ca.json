{"ast":null,"code":"import _defineProperty from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/text-fields/FormattedInputs.js\";\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholderChar: \"\\u2000\",\n    showMask: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction NumberFormatCustom(props) {\n  var inputRef = props.inputRef,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: function onValueChange(values) {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    prefix: \"$\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nvar FormattedInputs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormattedInputs, _React$Component);\n\n  function FormattedInputs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormattedInputs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormattedInputs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      textmask: '(1  )    -    ',\n      numberformat: '1320'\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(FormattedInputs, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          textmask = _this$state.textmask,\n          numberformat = _this$state.numberformat;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"react-text-mask\"), React.createElement(Input, {\n        value: textmask,\n        onChange: this.handleChange('textmask'),\n        id: \"formatted-text-mask-input\",\n        inputComponent: TextMaskCustom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(TextField, {\n        className: classes.formControl,\n        label: \"react-number-format\",\n        value: numberformat,\n        onChange: this.handleChange('numberformat'),\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FormattedInputs;\n}(React.Component);\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(FormattedInputs);","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/text-fields/FormattedInputs.js"],"names":["React","MaskedInput","NumberFormat","PropTypes","withStyles","Input","InputLabel","TextField","FormControl","styles","theme","container","display","flexWrap","formControl","margin","spacing","unit","TextMaskCustom","props","inputRef","other","ref","inputElement","propTypes","func","isRequired","NumberFormatCustom","onChange","values","target","value","FormattedInputs","state","textmask","numberformat","handleChange","name","event","setState","classes","inputComponent","Component","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n          <Input\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom}\n          />\n        </FormControl>\n        <TextField\n          className={classes.formControl}\n          label=\"react-number-format\"\n          value={numberformat}\n          onChange={this.handleChange('numberformat')}\n          id=\"formatted-numberformat-input\"\n          InputProps={{\n            inputComponent: NumberFormatCustom,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FormattedInputs);\n"]},"metadata":{},"sourceType":"module"}