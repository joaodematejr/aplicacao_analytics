{"ast":null,"code":"import _objectWithoutProperties from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\nvar emails = ['username@gmail.com', 'user02@gmail.com'];\nvar styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n};\n\nvar SimpleDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleDialog, _React$Component);\n\n  function SimpleDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClose = function () {\n      _this.props.onClose(_this.props.selectedValue);\n    };\n\n    _this.handleListItemClick = function (value) {\n      _this.props.onClose(value);\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onClose = _this$props.onClose,\n          selectedValue = _this$props.selectedValue,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onClose\", \"selectedValue\"]);\n\n      return React.createElement(Dialog, Object.assign({\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"simple-dialog-title\"\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(DialogTitle, {\n        id: \"simple-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Set backup account\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, emails.map(function (email) {\n        return React.createElement(ListItem, {\n          button: true,\n          onClick: function onClick() {\n            return _this2.handleListItemClick(email);\n          },\n          key: email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          className: classes.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(PersonIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }))), React.createElement(ListItemText, {\n          primary: email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      }), React.createElement(ListItem, {\n        button: true,\n        onClick: function onClick() {\n          return _this2.handleListItemClick('addAccount');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"add account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SimpleDialog;\n}(React.Component);\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\nvar SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nvar SimpleDialogDemo =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SimpleDialogDemo, _React$Component2);\n\n  function SimpleDialogDemo() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, SimpleDialogDemo);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(SimpleDialogDemo)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {\n      open: false,\n      selectedValue: emails[1]\n    };\n\n    _this3.handleClickOpen = function () {\n      _this3.setState({\n        open: true\n      });\n    };\n\n    _this3.handleClose = function (value) {\n      _this3.setState({\n        selectedValue: value,\n        open: false\n      });\n    };\n\n    return _this3;\n  }\n\n  _createClass(SimpleDialogDemo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Selected: \", this.state.selectedValue), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Open simple dialog\"), React.createElement(SimpleDialogWrapped, {\n        selectedValue: this.state.selectedValue,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SimpleDialogDemo;\n}(React.Component);\n\nexport default SimpleDialogDemo;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js"],"names":["React","PropTypes","withStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","emails","styles","avatar","backgroundColor","color","SimpleDialog","handleClose","props","onClose","selectedValue","handleListItemClick","value","classes","other","map","email","Component","propTypes","object","isRequired","func","string","SimpleDialogWrapped","SimpleDialogDemo","state","open","handleClickOpen","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n};\n\nclass SimpleDialog extends React.Component {\n  handleClose = () => {\n    this.props.onClose(this.props.selectedValue);\n  };\n\n  handleListItemClick = value => {\n    this.props.onClose(value);\n  };\n\n  render() {\n    const { classes, onClose, selectedValue, ...other } = this.props;\n\n    return (\n      <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n        <div>\n          <List>\n            {emails.map(email => (\n              <ListItem button onClick={() => this.handleListItemClick(email)} key={email}>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={email} />\n              </ListItem>\n            ))}\n            <ListItem button onClick={() => this.handleListItemClick('addAccount')}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AddIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"add account\" />\n            </ListItem>\n          </List>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  state = {\n    open: false,\n    selectedValue: emails[1],\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleClose = value => {\n    this.setState({ selectedValue: value, open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"subtitle1\">Selected: {this.state.selectedValue}</Typography>\n        <br />\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open simple dialog\n        </Button>\n        <SimpleDialogWrapped\n          selectedValue={this.state.selectedValue}\n          open={this.state.open}\n          onClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SimpleDialogDemo;\n"]},"metadata":{},"sourceType":"module"}