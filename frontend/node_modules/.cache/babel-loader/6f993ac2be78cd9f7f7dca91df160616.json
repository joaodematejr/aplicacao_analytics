{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/fuse-layouts/shared-components/chatPanel/ChatPanel.js\";\nimport React, { Component } from 'react';\nimport { AppBar, Toolbar, Icon, IconButton, ClickAwayListener, Paper, Avatar, Typography, withStyles } from '@material-ui/core';\nimport keycode from 'keycode';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as Actions from './store/actions';\nimport reducer from './store/reducers';\nimport withReducer from 'app/store/withReducer';\nimport ContactList from './ContactList';\nimport Chat from './Chat';\n\nvar styles = function styles(theme) {\n  var _panel;\n\n  return {\n    root: _defineProperty({\n      width: 70,\n      maxWidth: 70,\n      minWidth: 70\n    }, theme.breakpoints.down('md'), {\n      width: 0,\n      maxWidth: 0,\n      minWidth: 0\n    }),\n    panel: (_panel = {\n      position: 'absolute',\n      width: 360,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[3],\n      top: 0,\n      height: '100%',\n      minHeight: '100%',\n      bottom: 0,\n      right: 0,\n      margin: 0,\n      zIndex: 1000,\n      transform: 'translate3d(290px,0,0)',\n      overflow: 'hidden'\n    }, _defineProperty(_panel, theme.breakpoints.down('md'), {\n      transform: 'translate3d(360px,0,0)',\n      boxShadow: 'none',\n      '&.opened': {\n        boxShadow: theme.shadows[5]\n      }\n    }), _defineProperty(_panel, \"transition\", theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.standard\n    })), _defineProperty(_panel, '&.opened', {\n      transform: 'translateX(0)'\n    }), _panel)\n  };\n};\n\nvar ChatPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatPanel, _Component);\n\n  function ChatPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleDocumentKeyDown = function (event) {\n      if (keycode(event) === 'esc') {\n        _this.props.closeChatPanel();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUserData();\n      this.props.getContacts();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.state !== prevProps.state) {\n        if (this.props.state) {\n          document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n        } else {\n          document.removeEventListener('keydown', this.handleDocumentKeyDown);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          openChatPanel = _this$props.openChatPanel,\n          closeChatPanel = _this$props.closeChatPanel,\n          contacts = _this$props.contacts,\n          selectedContactId = _this$props.selectedContactId,\n          state = _this$props.state;\n      var selectedContact = contacts.find(function (_contact) {\n        return _contact.id === selectedContactId;\n      });\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ClickAwayListener, {\n        onClickAway: function onClickAway() {\n          return state && closeChatPanel();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames(classes.panel, {\n          'opened': state\n        }, \"flex flex-col\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"pl-12 pr-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex flex-1 items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, (!state || !selectedContactId) && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        onClick: openChatPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-32\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"chat\")), !selectedContactId && React.createElement(Typography, {\n        className: \"ml-16 text-16\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Team Chat\")), state && selectedContact && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: \"ml-4\",\n        src: selectedContact.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        className: \"ml-16 text-16\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, selectedContact.name))), React.createElement(IconButton, {\n        onClick: closeChatPanel,\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"close\")))), React.createElement(Paper, {\n        className: \"flex flex-1 flex-row min-h-px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ContactList, {\n        className: \"flex flex-no-shrink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Chat, {\n        className: \"flex flex-1 z-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ChatPanel;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUserData: Actions.getUserData,\n    getContacts: Actions.getContacts,\n    openChatPanel: Actions.openChatPanel,\n    closeChatPanel: Actions.closeChatPanel\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var chatPanel = _ref.chatPanel;\n  return {\n    contacts: chatPanel.contacts.entities,\n    selectedContactId: chatPanel.contacts.selectedContactId,\n    state: chatPanel.state\n  };\n}\n\nexport default withReducer('chatPanel', reducer)(withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(ChatPanel)));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/fuse-layouts/shared-components/chatPanel/ChatPanel.js"],"names":["React","Component","AppBar","Toolbar","Icon","IconButton","ClickAwayListener","Paper","Avatar","Typography","withStyles","keycode","bindActionCreators","connect","classNames","Actions","reducer","withReducer","ContactList","Chat","styles","theme","root","width","maxWidth","minWidth","breakpoints","down","panel","position","backgroundColor","palette","background","paper","boxShadow","shadows","top","height","minHeight","bottom","right","margin","zIndex","transform","overflow","transitions","create","easing","easeInOut","duration","standard","ChatPanel","handleDocumentKeyDown","event","props","closeChatPanel","getUserData","getContacts","prevProps","state","document","addEventListener","removeEventListener","classes","openChatPanel","contacts","selectedContactId","selectedContact","find","_contact","id","avatar","name","mapDispatchToProps","dispatch","mapStateToProps","chatPanel","entities"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {AppBar, Toolbar, Icon, IconButton, ClickAwayListener, Paper, Avatar, Typography, withStyles} from '@material-ui/core';\nimport keycode from 'keycode';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport * as Actions from './store/actions';\nimport reducer from './store/reducers';\nimport withReducer from 'app/store/withReducer';\nimport ContactList from './ContactList';\nimport Chat from './Chat';\n\nconst styles = theme => ({\n    root : {\n        width                         : 70,\n        maxWidth                      : 70,\n        minWidth                      : 70,\n        [theme.breakpoints.down('md')]: {\n            width   : 0,\n            maxWidth: 0,\n            minWidth: 0\n        }\n    },\n    panel: {\n        position                      : 'absolute',\n        width                         : 360,\n        backgroundColor               : theme.palette.background.paper,\n        boxShadow                     : theme.shadows[3],\n        top                           : 0,\n        height                        : '100%',\n        minHeight                     : '100%',\n        bottom                        : 0,\n        right                         : 0,\n        margin                        : 0,\n        zIndex                        : 1000,\n        transform                     : 'translate3d(290px,0,0)',\n        overflow                      : 'hidden',\n        [theme.breakpoints.down('md')]: {\n            transform : 'translate3d(360px,0,0)',\n            boxShadow : 'none',\n            '&.opened': {\n                boxShadow: theme.shadows[5]\n            }\n        },\n        transition                    : theme.transitions.create(['transform'], {\n            easing  : theme.transitions.easing.easeInOut,\n            duration: theme.transitions.duration.standard\n        }),\n        '&.opened'                    : {\n            transform: 'translateX(0)'\n        }\n    }\n});\n\nclass ChatPanel extends Component {\n\n    componentDidMount()\n    {\n        this.props.getUserData();\n        this.props.getContacts();\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        if ( this.props.state !== prevProps.state )\n        {\n            if ( this.props.state )\n            {\n                document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n            }\n            else\n            {\n                document.removeEventListener('keydown', this.handleDocumentKeyDown);\n            }\n        }\n    }\n\n    componentWillUnmount()\n    {\n        document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    }\n\n    handleDocumentKeyDown = event => {\n        if ( keycode(event) === 'esc' )\n        {\n            this.props.closeChatPanel();\n        }\n    };\n\n    render()\n    {\n        const {classes, openChatPanel, closeChatPanel, contacts, selectedContactId, state} = this.props;\n\n        const selectedContact = contacts.find(_contact => _contact.id === selectedContactId);\n\n        return (\n            <div className={classes.root}>\n                <ClickAwayListener onClickAway={() => state && closeChatPanel()}>\n                    <div className={classNames(classes.panel, {'opened': state}, \"flex flex-col\")}>\n                        <AppBar position=\"static\" elevation={1}>\n                            <Toolbar className=\"pl-12 pr-8\">\n                                <div className=\"flex flex-1 items-center\">\n                                    {(!state || !selectedContactId) && (\n                                        <React.Fragment>\n                                            <IconButton color=\"inherit\" onClick={openChatPanel}>\n                                                <Icon className=\"text-32\">chat</Icon>\n                                            </IconButton>\n                                            {!selectedContactId && (\n                                                <Typography className=\"ml-16 text-16\" color=\"inherit\">Team Chat</Typography>\n                                            )}\n                                        </React.Fragment>\n                                    )}\n                                    {state && selectedContact && (\n                                        <React.Fragment>\n                                            <Avatar className=\"ml-4\" src={selectedContact.avatar}/>\n                                            <Typography className=\"ml-16 text-16\" color=\"inherit\">{selectedContact.name}</Typography>\n                                        </React.Fragment>\n                                    )}\n                                </div>\n                                <IconButton onClick={closeChatPanel} color=\"inherit\">\n                                    <Icon>close</Icon>\n                                </IconButton>\n                            </Toolbar>\n                        </AppBar>\n                        <Paper className=\"flex flex-1 flex-row min-h-px\">\n                            <ContactList className=\"flex flex-no-shrink\"/>\n                            <Chat className=\"flex flex-1 z-10\"/>\n                        </Paper>\n                    </div>\n                </ClickAwayListener>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getUserData   : Actions.getUserData,\n        getContacts   : Actions.getContacts,\n        openChatPanel : Actions.openChatPanel,\n        closeChatPanel: Actions.closeChatPanel\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatPanel})\n{\n    return {\n        contacts         : chatPanel.contacts.entities,\n        selectedContactId: chatPanel.contacts.selectedContactId,\n        state            : chatPanel.state\n    }\n}\n\nexport default withReducer('chatPanel', reducer)(withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(ChatPanel)));\n"]},"metadata":{},"sourceType":"module"}