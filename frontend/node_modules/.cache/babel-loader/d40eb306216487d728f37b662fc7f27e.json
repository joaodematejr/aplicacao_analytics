{"ast":null,"code":"import _toConsumableArray from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Actions from '../actions';\nimport _ from '@lodash';\nvar initialState = null;\n\nvar boardReducer = function boardReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.GET_BOARD:\n      {\n        return _objectSpread({}, action.payload);\n      }\n\n    case Actions.RESET_BOARD:\n      {\n        return initialState;\n      }\n\n    case Actions.ORDER_LIST:\n      {\n        return _objectSpread({}, state, {\n          lists: action.payload\n        });\n      }\n\n    case Actions.ORDER_CARD:\n      {\n        return _objectSpread({}, state, {\n          lists: action.payload\n        });\n      }\n\n    case Actions.ADD_LIST:\n      {\n        return _objectSpread({}, state, {\n          lists: action.payload\n        });\n      }\n\n    case Actions.ADD_CARD:\n      {\n        return _objectSpread({}, action.payload);\n      }\n\n    case Actions.ADD_LABEL:\n      {\n        return _objectSpread({}, state, {\n          labels: [].concat(_toConsumableArray(state.labels), [action.payload])\n        });\n      }\n\n    case Actions.UPDATE_CARD:\n      {\n        return _objectSpread({}, state, {\n          cards: state.cards.map(function (_card) {\n            if (_card.id === action.payload.id) {\n              return action.payload;\n            }\n\n            return _card;\n          })\n        });\n      }\n\n    case Actions.REMOVE_CARD:\n      {\n        return _objectSpread({}, state, {\n          cards: _.reject(state.cards, {\n            id: action.cardId\n          }),\n          lists: state.lists.map(function (list) {\n            _.set(list, 'idCards', _.reject(list.idCards, function (id) {\n              return id === action.cardId;\n            }));\n\n            return list;\n          })\n        });\n      }\n\n    case Actions.RENAME_LIST:\n      {\n        return _objectSpread({}, state, {\n          lists: state.lists.map(function (list) {\n            if (list.id === action.listId) {\n              list.name = action.listTitle;\n            }\n\n            return list;\n          })\n        });\n      }\n\n    case Actions.REMOVE_LIST:\n      {\n        return _objectSpread({}, state, {\n          lists: _.reject(state.lists, {\n            id: action.listId\n          })\n        });\n      }\n\n    case Actions.CHANGE_BOARD_SETTINGS:\n      {\n        return _objectSpread({}, state, {\n          settings: action.payload\n        });\n      }\n\n    case Actions.DELETE_BOARD:\n      {\n        return initialState;\n      }\n\n    case Actions.RENAME_BOARD:\n      {\n        return _objectSpread({}, state, {\n          name: action.boardTitle\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/store/reducers/board.reducer.js"],"names":["Actions","_","initialState","boardReducer","state","action","type","GET_BOARD","payload","RESET_BOARD","ORDER_LIST","lists","ORDER_CARD","ADD_LIST","ADD_CARD","ADD_LABEL","labels","UPDATE_CARD","cards","map","_card","id","REMOVE_CARD","reject","cardId","list","set","idCards","RENAME_LIST","listId","name","listTitle","REMOVE_LIST","CHANGE_BOARD_SETTINGS","settings","DELETE_BOARD","RENAME_BOARD","boardTitle"],"mappings":"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","sourcesContent":["import * as Actions from '../actions';\nimport _ from '@lodash';\n\nconst initialState = null;\n\nconst boardReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_BOARD:\n        {\n            return {\n                ...action.payload\n            };\n        }\n        case Actions.RESET_BOARD:\n        {\n            return initialState;\n        }\n        case Actions.ORDER_LIST:\n        {\n            return {\n                ...state,\n                lists: action.payload\n            };\n        }\n        case Actions.ORDER_CARD:\n        {\n            return {\n                ...state,\n                lists: action.payload\n            };\n        }\n        case Actions.ADD_LIST:\n        {\n            return {\n                ...state,\n                lists: action.payload\n            };\n        }\n        case Actions.ADD_CARD:\n        {\n            return {\n                ...action.payload\n            };\n        }\n        case Actions.ADD_LABEL:\n        {\n            return {\n                ...state,\n                labels: [\n                    ...state.labels,\n                    action.payload\n                ]\n            };\n        }\n        case Actions.UPDATE_CARD:\n        {\n            return {\n                ...state,\n                cards: state.cards.map((_card) => {\n                    if ( _card.id === action.payload.id )\n                    {\n                        return action.payload;\n                    }\n                    return _card;\n                })\n            };\n        }\n        case Actions.REMOVE_CARD:\n        {\n            return {\n                ...state,\n                cards: _.reject(state.cards, {id: action.cardId}),\n                lists: state.lists.map(list => {\n                    _.set(list, 'idCards', _.reject(list.idCards, (id) => id === action.cardId));\n                    return list;\n                })\n            };\n        }\n        case Actions.RENAME_LIST:\n        {\n            return {\n                ...state,\n                lists: state.lists.map(list => {\n                    if ( list.id === action.listId )\n                    {\n                        list.name = action.listTitle\n                    }\n                    return list;\n                })\n            };\n        }\n        case Actions.REMOVE_LIST:\n        {\n            return {\n                ...state,\n                lists: _.reject(state.lists, {id: action.listId})\n            };\n        }\n        case Actions.CHANGE_BOARD_SETTINGS:\n        {\n            return {\n                ...state,\n                settings: action.payload\n            };\n        }\n        case Actions.DELETE_BOARD:\n        {\n            return initialState;\n        }\n        case Actions.RENAME_BOARD:\n        {\n            return {\n                ...state,\n                name: action.boardTitle\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default boardReducer;\n"]},"metadata":{},"sourceType":"module"}