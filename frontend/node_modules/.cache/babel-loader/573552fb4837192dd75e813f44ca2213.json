{"ast":null,"code":"import _classCallCheck from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/board/BoardTitle.js\";\nimport React, { Component } from 'react';\nimport { Paper, ClickAwayListener, Icon, IconButton, InputAdornment, TextField, Typography } from '@material-ui/core';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from '../store/actions';\n\nvar BoardListHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoardListHeader, _Component);\n\n  function BoardListHeader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BoardListHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BoardListHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      renameForm: false,\n      renameTitle: _this.props.board.name\n    };\n\n    _this.renameFormToggle = function (state) {\n      _this.setState({\n        renameForm: state,\n        renameTitle: _this.props.board.name\n      });\n    };\n\n    _this.onRenameTitleChange = function (ev) {\n      _this.setState({\n        renameTitle: ev.target.value\n      });\n    };\n\n    _this.renameTitleSubmit = function (ev) {\n      ev.preventDefault();\n\n      if (!_this.canSubmit()) {\n        _this.renameFormToggle(false);\n\n        return;\n      }\n\n      _this.setState({\n        renameForm: false,\n        renameTitle: _this.state.renameTitle\n      });\n\n      _this.props.renameBoard(_this.props.board.id, _this.state.renameTitle);\n    };\n\n    _this.canSubmit = function () {\n      return _this.state.renameTitle !== '';\n    };\n\n    return _this;\n  }\n\n  _createClass(BoardListHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var board = this.props.board;\n      var _this$state = this.state,\n          renameTitle = _this$state.renameTitle,\n          renameForm = _this$state.renameForm;\n      return React.createElement(\"div\", {\n        className: \"flex items-center min-w-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, renameForm ? React.createElement(ClickAwayListener, {\n        onClickAway: function onClickAway() {\n          return _this2.renameFormToggle(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"flex w-full\",\n        onSubmit: this.renameTitleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: renameTitle,\n        onChange: this.onRenameTitleChange,\n        variant: \"outlined\",\n        margin: \"none\",\n        autoFocus: true,\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            type: \"submit\",\n            disabled: !this.canSubmit(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"check\")))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))) : React.createElement(\"div\", {\n        className: \"flex items-center justify-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, board.settings.subscribed && React.createElement(Icon, {\n        className: \"text-16 mr-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"remove_red_eye\"), React.createElement(Typography, {\n        className: \"text-16 font-600 cursor-pointer\",\n        onClick: function onClick() {\n          return _this2.renameFormToggle(true);\n        },\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, board.name)));\n    }\n  }]);\n\n  return BoardListHeader;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    renameBoard: Actions.renameBoard\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var scrumboardApp = _ref.scrumboardApp;\n  return {\n    board: scrumboardApp.board\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardListHeader));","map":{"version":3,"sources":["/Volumes/Documentos/facu/projetos/aplicacao_analytics/test/src/app/main/apps/scrumboard/board/BoardTitle.js"],"names":["React","Component","Paper","ClickAwayListener","Icon","IconButton","InputAdornment","TextField","Typography","bindActionCreators","withRouter","connect","Actions","BoardListHeader","state","renameForm","renameTitle","props","board","name","renameFormToggle","setState","onRenameTitleChange","ev","target","value","renameTitleSubmit","preventDefault","canSubmit","renameBoard","id","endAdornment","settings","subscribed","mapDispatchToProps","dispatch","mapStateToProps","scrumboardApp"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Paper, ClickAwayListener, Icon, IconButton, InputAdornment, TextField, Typography} from '@material-ui/core';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from '../store/actions';\n\nclass BoardListHeader extends Component {\n\n    state = {\n        renameForm : false,\n        renameTitle: this.props.board.name\n    };\n\n    renameFormToggle = (state) => {\n        this.setState({\n            renameForm : state,\n            renameTitle: this.props.board.name\n        })\n    };\n\n    onRenameTitleChange = (ev) => {\n        this.setState({renameTitle: ev.target.value})\n    };\n\n    renameTitleSubmit = (ev) => {\n        ev.preventDefault();\n        if ( !this.canSubmit() )\n        {\n            this.renameFormToggle(false);\n            return;\n        }\n        this.setState({\n            renameForm : false,\n            renameTitle: this.state.renameTitle\n        });\n        this.props.renameBoard(this.props.board.id, this.state.renameTitle);\n    };\n\n    canSubmit = () => {\n        return this.state.renameTitle !== '';\n    };\n\n    render()\n    {\n        const {board} = this.props;\n        const {renameTitle, renameForm} = this.state;\n\n        return (\n            <div className=\"flex items-center min-w-0\">\n                {renameForm ? (\n                    <ClickAwayListener onClickAway={() => this.renameFormToggle(false)}>\n                        <Paper className=\"p-4\">\n                            <form className=\"flex w-full\" onSubmit={this.renameTitleSubmit}>\n                                <TextField\n                                    value={renameTitle}\n                                    onChange={this.onRenameTitleChange}\n                                    variant=\"outlined\"\n                                    margin=\"none\"\n                                    autoFocus\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    type=\"submit\"\n                                                    disabled={!this.canSubmit()}\n                                                >\n                                                    <Icon>check</Icon>\n                                                </IconButton>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n                            </form>\n                        </Paper>\n                    </ClickAwayListener>\n                ) : (\n                    <div className=\"flex items-center justify-center\">\n                        {board.settings.subscribed && (\n                            <Icon className=\"text-16 mr-8\">remove_red_eye</Icon>\n                        )}\n                        <Typography\n                            className=\"text-16 font-600 cursor-pointer\"\n                            onClick={() => this.renameFormToggle(true)}\n                            color=\"inherit\"\n                        >\n                            {board.name}\n                        </Typography>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        renameBoard: Actions.renameBoard\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardListHeader));\n"]},"metadata":{},"sourceType":"module"}